{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsFetch\\\\FetchRSIAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchRSIAnalysis({\n  stockCode,\n  selectedAnalysis\n}) {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState({}); // 분석 결과 저장할 상태\n\n  useEffect(() => {\n    const query = selectedAnalysis.join(',');\n    fetch(`http://127.0.0.1:8000/api/analyze_rsi/${stockCode}?analysis=${query}`).then(res => res.json()).then(data => {\n      setAnalysisResult(data);\n    }).catch(error => console.error('Error fetching RSI analysis:', error));\n  }, [stockCode, selectedAnalysis]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectedAnalysis.includes('1') && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisResult.rsi_analysis1 && analysisResult.rsi_analysis1.analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 48\n    }, this), selectedAnalysis.includes('2') && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisResult.rsi_analysis2 && analysisResult.rsi_analysis2.analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 48\n    }, this), selectedAnalysis.includes('3') && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisResult.rsi_analysis3 && analysisResult.rsi_analysis3.analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 48\n    }, this), selectedAnalysis.includes('4') && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisResult.rsi_analysis4 && analysisResult.rsi_analysis4.analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 48\n    }, this), selectedAnalysis.includes('5') && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisResult.rsi_analysis5 && analysisResult.rsi_analysis5.analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchRSIAnalysis, \"D13NtsQ+GmSLvFr5ENDyowUfBGU=\");\n_c = FetchRSIAnalysis;\nexport default FetchRSIAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FetchRSIAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchRSIAnalysis","stockCode","selectedAnalysis","_s","analysisResult","setAnalysisResult","query","join","fetch","then","res","json","data","catch","error","console","children","includes","rsi_analysis1","fileName","_jsxFileName","lineNumber","columnNumber","rsi_analysis2","rsi_analysis3","rsi_analysis4","rsi_analysis5","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsFetch/FetchRSIAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction FetchRSIAnalysis({ stockCode, selectedAnalysis }) {\r\n    const [analysisResult, setAnalysisResult] = useState({});  // 분석 결과 저장할 상태\r\n\r\n    useEffect(() => {\r\n        const query = selectedAnalysis.join(',');\r\n        fetch(`http://127.0.0.1:8000/api/analyze_rsi/${stockCode}?analysis=${query}`)\r\n            .then(res => res.json())\r\n            .then(data => {setAnalysisResult(data);\r\n            })\r\n            .catch(error => console.error('Error fetching RSI analysis:', error));\r\n    }, [stockCode, selectedAnalysis])\r\n\r\n    return(\r\n        <div>\r\n            {selectedAnalysis.includes('1') && <p>{analysisResult.rsi_analysis1 && analysisResult.rsi_analysis1.analysisResult}</p>}\r\n            {selectedAnalysis.includes('2') && <p>{analysisResult.rsi_analysis2 && analysisResult.rsi_analysis2.analysisResult}</p>}\r\n            {selectedAnalysis.includes('3') && <p>{analysisResult.rsi_analysis3 && analysisResult.rsi_analysis3.analysisResult}</p>}\r\n            {selectedAnalysis.includes('4') && <p>{analysisResult.rsi_analysis4 && analysisResult.rsi_analysis4.analysisResult}</p>}\r\n            {selectedAnalysis.includes('5') && <p>{analysisResult.rsi_analysis5 && analysisResult.rsi_analysis5.analysisResult}</p>}\r\n        </div>\r\n    );\r\n}\r\nexport default FetchRSIAnalysis;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,gBAAgBA,CAAC;EAAEC,SAAS;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;;EAE3DC,SAAS,CAAC,MAAM;IACZ,MAAMS,KAAK,GAAGJ,gBAAgB,CAACK,IAAI,CAAC,GAAG,CAAC;IACxCC,KAAK,CAAC,yCAAyCP,SAAS,aAAaK,KAAK,EAAE,CAAC,CACxEG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MAACP,iBAAiB,CAACO,IAAI,CAAC;IACtC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC,EAAE,CAACb,SAAS,EAAEC,gBAAgB,CAAC,CAAC;EAEjC,oBACIH,OAAA;IAAAiB,QAAA,GACKd,gBAAgB,CAACe,QAAQ,CAAC,GAAG,CAAC,iBAAIlB,OAAA;MAAAiB,QAAA,EAAIZ,cAAc,CAACc,aAAa,IAAId,cAAc,CAACc,aAAa,CAACd;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtHpB,gBAAgB,CAACe,QAAQ,CAAC,GAAG,CAAC,iBAAIlB,OAAA;MAAAiB,QAAA,EAAIZ,cAAc,CAACmB,aAAa,IAAInB,cAAc,CAACmB,aAAa,CAACnB;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtHpB,gBAAgB,CAACe,QAAQ,CAAC,GAAG,CAAC,iBAAIlB,OAAA;MAAAiB,QAAA,EAAIZ,cAAc,CAACoB,aAAa,IAAIpB,cAAc,CAACoB,aAAa,CAACpB;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtHpB,gBAAgB,CAACe,QAAQ,CAAC,GAAG,CAAC,iBAAIlB,OAAA;MAAAiB,QAAA,EAAIZ,cAAc,CAACqB,aAAa,IAAIrB,cAAc,CAACqB,aAAa,CAACrB;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtHpB,gBAAgB,CAACe,QAAQ,CAAC,GAAG,CAAC,iBAAIlB,OAAA;MAAAiB,QAAA,EAAIZ,cAAc,CAACsB,aAAa,IAAItB,cAAc,CAACsB,aAAa,CAACtB;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtH,CAAC;AAEd;AAACnB,EAAA,CArBQH,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAsBzB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}