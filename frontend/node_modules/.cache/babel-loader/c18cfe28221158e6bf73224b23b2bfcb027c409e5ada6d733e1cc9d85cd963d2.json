{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\ADXAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ADXAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [adxData, setADXData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n\n  // 지수 이동 평균(EMA) 계산 함수\n  const calculateEMA = (values, period) => {\n    const k = 2 / (period + 1);\n    return values.reduce((prev, curr, index) => {\n      if (index === 0) return curr;\n      return curr * k + prev * (1 - k);\n    });\n  };\n  const analyzeTrendStrength = (adxData, period = 14) => {\n    if (adxData.length < period) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const adxValues = adxData.map(data => data.ADX);\n    const recentADX = adxValues.slice(-period);\n\n    // 최근 period 기간의 ADX 지수 이동 평균 계산\n    const avgADX = calculateEMA(recentADX, period);\n    let result = '';\n    result += 'ADX는 추세의 강도를 나타내는 지표로, 값이 높을수록 강한 추세를 의미합니다.<br/><br/>';\n    result += `최근 ${period}일간 ADX의 지수 이동 평균 값은 <strong>${avgADX.toFixed(2)}</strong>입니다.<br/>`;\n    if (avgADX >= 25) {\n      result += '→ 이는 <strong>강한 추세</strong>가 진행 중임을 나타냅니다.<br/>';\n    } else if (avgADX <= 20) {\n      result += '→ 이는 <strong>약한 추세</strong> 또는 <strong>횡보장</strong>임을 나타냅니다.<br/>';\n    } else {\n      result += '→ 이는 추세가 약하며, 추세 전환의 가능성이 있습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (adxData.length > 0) {\n      const result = analyzeTrendStrength(adxData);\n      setAnalysisResult(result);\n    }\n  }, [adxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchADXData, {\n      stockCode: stockCode,\n      onADXFetch: setADXData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"ADX \\uCD94\\uC138 \\uAC15\\uB3C4 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(ADXAnalysis1, \"5Dm60htkzevDfgZ/oo7jhbn3XPE=\");\n_c = ADXAnalysis1;\nexport default ADXAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"ADXAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchADXData","jsxDEV","_jsxDEV","ADXAnalysis1","stockCode","_s","adxData","setADXData","analysisResult","setAnalysisResult","calculateEMA","values","period","k","reduce","prev","curr","index","analyzeTrendStrength","length","adxValues","map","data","ADX","recentADX","slice","avgADX","result","toFixed","children","onADXFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/ADXAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\r\n\r\nfunction ADXAnalysis1({ stockCode }) {\r\n    const [adxData, setADXData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    // 지수 이동 평균(EMA) 계산 함수\r\n    const calculateEMA = (values, period) => {\r\n        const k = 2 / (period + 1);\r\n        return values.reduce((prev, curr, index) => {\r\n            if (index === 0) return curr;\r\n            return curr * k + prev * (1 - k);\r\n        });\r\n    };\r\n\r\n    const analyzeTrendStrength = (adxData, period = 14) => {\r\n        if (adxData.length < period) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const adxValues = adxData.map(data => data.ADX);\r\n        const recentADX = adxValues.slice(-period);\r\n\r\n        // 최근 period 기간의 ADX 지수 이동 평균 계산\r\n        const avgADX = calculateEMA(recentADX, period);\r\n\r\n        let result = '';\r\n        result += 'ADX는 추세의 강도를 나타내는 지표로, 값이 높을수록 강한 추세를 의미합니다.<br/><br/>';\r\n        result += `최근 ${period}일간 ADX의 지수 이동 평균 값은 <strong>${avgADX.toFixed(2)}</strong>입니다.<br/>`;\r\n\r\n        if (avgADX >= 25) {\r\n            result += '→ 이는 <strong>강한 추세</strong>가 진행 중임을 나타냅니다.<br/>';\r\n        } else if (avgADX <= 20) {\r\n            result += '→ 이는 <strong>약한 추세</strong> 또는 <strong>횡보장</strong>임을 나타냅니다.<br/>';\r\n        } else {\r\n            result += '→ 이는 추세가 약하며, 추세 전환의 가능성이 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (adxData.length > 0) {\r\n            const result = analyzeTrendStrength(adxData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [adxData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchADXData stockCode={stockCode} onADXFetch={setADXData} />\r\n            <h4>ADX 추세 강도 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ADXAnalysis1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMY,YAAY,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,MAAMC,CAAC,GAAG,CAAC,IAAID,MAAM,GAAG,CAAC,CAAC;IAC1B,OAAOD,MAAM,CAACG,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,KAAK;MACxC,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOD,IAAI;MAC5B,OAAOA,IAAI,GAAGH,CAAC,GAAGE,IAAI,IAAI,CAAC,GAAGF,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,oBAAoB,GAAGA,CAACZ,OAAO,EAAEM,MAAM,GAAG,EAAE,KAAK;IACnD,IAAIN,OAAO,CAACa,MAAM,GAAGP,MAAM,EAAE;MACzB,OAAO,iBAAiB;IAC5B;IAEA,MAAMQ,SAAS,GAAGd,OAAO,CAACe,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,CAAC;IAC/C,MAAMC,SAAS,GAAGJ,SAAS,CAACK,KAAK,CAAC,CAACb,MAAM,CAAC;;IAE1C;IACA,MAAMc,MAAM,GAAGhB,YAAY,CAACc,SAAS,EAAEZ,MAAM,CAAC;IAE9C,IAAIe,MAAM,GAAG,EAAE;IACfA,MAAM,IAAI,wDAAwD;IAClEA,MAAM,IAAI,MAAMf,MAAM,+BAA+Bc,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,oBAAoB;IAE1F,IAAIF,MAAM,IAAI,EAAE,EAAE;MACdC,MAAM,IAAI,iDAAiD;IAC/D,CAAC,MAAM,IAAID,MAAM,IAAI,EAAE,EAAE;MACrBC,MAAM,IAAI,mEAAmE;IACjF,CAAC,MAAM;MACHA,MAAM,IAAI,sCAAsC;IACpD;IAEA,OAAOA,MAAM;EACjB,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZ,IAAIO,OAAO,CAACa,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMQ,MAAM,GAAGT,oBAAoB,CAACZ,OAAO,CAAC;MAC5CG,iBAAiB,CAACkB,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACrB,OAAO,CAAC,CAAC;EAEb,oBACIJ,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACF,YAAY;MAACI,SAAS,EAAEA,SAAU;MAAC0B,UAAU,EAAEvB;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DhC,OAAA;MAAA2B,QAAA,EAAI;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhC,OAAA;MAAGiC,uBAAuB,EAAE;QAAEC,MAAM,EAAE5B;MAAe;IAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAAC7B,EAAA,CArDQF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAuDrB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}