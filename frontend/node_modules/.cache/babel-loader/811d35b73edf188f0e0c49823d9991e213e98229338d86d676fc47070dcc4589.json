{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsFetch\\\\FetchStockOrignal\\\\FetchRealTime.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchRealTime({\n  onDataFetch\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  useEffect(() => {\n    // 데이터를 불러오는 함수 정의\n    const fetchData = () => {\n      fetch('http://127.0.0.1:8000/api/get_real_time_data/').then(response => response.json()).then(data => {\n        setStockData(data); // 받아온 데이터를 상태로 저장\n        if (onDataFetch) {\n          onDataFetch(data); // 외부로 데이터 전달\n        }\n      }).catch(error => console.error('Error fetching stock data:', error));\n    };\n\n    // 페이지 로드 시 데이터 최초 1회 호출\n    fetchData();\n\n    // 주기적으로 데이터를 갱신 (5초마다 호출)\n    const intervalId = setInterval(fetchData, 5000);\n\n    // 컴포넌트 언마운트 시 인터벌 클리어\n    return () => clearInterval(intervalId);\n  }, [onDataFetch]); // onDataFetch가 변경되면 재실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(stockData).map(stockCode => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uC885\\uBAA9 \\uCF54\\uB4DC: \", stockCode, \" , \\uD604\\uC7AC\\uAC00: \", stockData[stockCode].current_price, \"\\uC6D0, \\uC804\\uC77C\\uB300\\uBE44: \", stockData[stockCode].onday, \"\\uC6D0, \\uB4F1\\uB77D\\uC728: \", stockData[stockCode].ratio, \"%, \\uACE0\\uAC00: \", stockData[stockCode].high_price, \"\\uC6D0, \\uC800\\uAC00: \", stockData[stockCode].low_price, \"\\uC6D0, \\uC2DC\\uAC00: \", stockData[stockCode].opne_price, \"\\uC6D0, \\uAC70\\uB798\\uB7C9: \", stockData[stockCode].volume]\n      }, stockCode, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchRealTime, \"UHMRx5rd6U+J7YyAJ82PYuAdhyc=\");\n_c = FetchRealTime;\nexport default FetchRealTime;\nvar _c;\n$RefreshReg$(_c, \"FetchRealTime\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","FetchRealTime","onDataFetch","_s","stockData","setStockData","fetchData","fetch","then","response","json","data","catch","error","console","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","stockCode","current_price","onday","ratio","high_price","low_price","opne_price","volume","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsFetch/FetchStockOrignal/FetchRealTime.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction FetchRealTime({ onDataFetch }) {\r\n    const [stockData, setStockData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // 데이터를 불러오는 함수 정의\r\n        const fetchData = () => {\r\n            fetch('http://127.0.0.1:8000/api/get_real_time_data/')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setStockData(data); // 받아온 데이터를 상태로 저장\r\n                    if (onDataFetch) {\r\n                        onDataFetch(data); // 외부로 데이터 전달\r\n                    }\r\n                })\r\n                .catch(error => console.error('Error fetching stock data:', error));\r\n        };\r\n\r\n        // 페이지 로드 시 데이터 최초 1회 호출\r\n        fetchData();\r\n\r\n        // 주기적으로 데이터를 갱신 (5초마다 호출)\r\n        const intervalId = setInterval(fetchData, 5000);\r\n\r\n        // 컴포넌트 언마운트 시 인터벌 클리어\r\n        return () => clearInterval(intervalId);\r\n    }, [onDataFetch]); // onDataFetch가 변경되면 재실행\r\n\r\n    return (\r\n        <div>\r\n            <h1>Real-Time Stock Data</h1>\r\n            <ul>\r\n                {Object.keys(stockData).map(stockCode => (\r\n                    <li key={stockCode}>\r\n                        종목 코드: {stockCode} ,\r\n                        현재가: {stockData[stockCode].current_price}원,\r\n                        전일대비: {stockData[stockCode].onday}원,\r\n                        등락율: {stockData[stockCode].ratio}%,\r\n                        고가: {stockData[stockCode].high_price}원,\r\n                        저가: {stockData[stockCode].low_price}원,\r\n                        시가: {stockData[stockCode].opne_price}원,\r\n                        거래량: {stockData[stockCode].volume}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FetchRealTime;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,SAAS,GAAGA,CAAA,KAAM;MACpBC,KAAK,CAAC,+CAA+C,CAAC,CACjDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVN,YAAY,CAACM,IAAI,CAAC,CAAC,CAAC;QACpB,IAAIT,WAAW,EAAE;UACbA,WAAW,CAACS,IAAI,CAAC,CAAC,CAAC;QACvB;MACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IAC3E,CAAC;;IAED;IACAP,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMS,UAAU,GAAGC,WAAW,CAACV,SAAS,EAAE,IAAI,CAAC;;IAE/C;IACA,OAAO,MAAMW,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACb,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,oBACIF,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtB,OAAA;MAAAkB,QAAA,EACKK,MAAM,CAACC,IAAI,CAACpB,SAAS,CAAC,CAACqB,GAAG,CAACC,SAAS,iBACjC1B,OAAA;QAAAkB,QAAA,GAAoB,6BACT,EAACQ,SAAS,EAAC,yBACb,EAACtB,SAAS,CAACsB,SAAS,CAAC,CAACC,aAAa,EAAC,oCACnC,EAACvB,SAAS,CAACsB,SAAS,CAAC,CAACE,KAAK,EAAC,8BAC7B,EAACxB,SAAS,CAACsB,SAAS,CAAC,CAACG,KAAK,EAAC,mBAC7B,EAACzB,SAAS,CAACsB,SAAS,CAAC,CAACI,UAAU,EAAC,wBACjC,EAAC1B,SAAS,CAACsB,SAAS,CAAC,CAACK,SAAS,EAAC,wBAChC,EAAC3B,SAAS,CAACsB,SAAS,CAAC,CAACM,UAAU,EAAC,8BAChC,EAAC5B,SAAS,CAACsB,SAAS,CAAC,CAACO,MAAM;MAAA,GAR5BP,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACnB,EAAA,CA9CQF,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}