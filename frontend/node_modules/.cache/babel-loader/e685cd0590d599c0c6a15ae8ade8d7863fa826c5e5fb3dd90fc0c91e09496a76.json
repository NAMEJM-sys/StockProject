{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsFetch\\\\FetchRSIAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchRSIAnalysis({\n  stockCode\n}) {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null); // 분석 결과 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지를 저장할 상태\n\n  useEffect(() => {\n    const query = selectedAnalysis.join(',');\n    fetch(`http://127.0.0.1:8000/api/analyze_rsi/${stockCode}/?analysis=${query}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setAnalysisResult(data); // 서버에서 받은 분석 결과를 저장\n    }).catch(error => {\n      console.error('Error fetching RSI analysis:', error);\n      setError('RSI 분석 데이터를 불러오는 데 문제가 발생했습니다.');\n    });\n  }, [stockCode, selectedAnalysis]);\n\n  // 서버로부터 받은 데이터를 바탕으로 RSI 분석 결과 출력\n  const renderRSIAnalysis = analysisData => {\n    const {\n      currentRSI,\n      rsiState,\n      priceTrendDirection,\n      rsiTrendDirection,\n      currentRSI_MACrossover\n    } = analysisData;\n    let result = `<strong>현재 RSI:</strong> ${currentRSI.toFixed(2)} (${rsiState})<br/>`;\n    result += `ㆍ 가격 흐름: ${priceTrendDirection} 추세<br/>`;\n    result += `ㆍ RSI 흐름: ${rsiTrendDirection} 추세<br/>`;\n    result += `ㆍ RSI 이동평균 교차 신호: ${currentRSI_MACrossover === 1 ? '골든 크로스' : '데드 크로스'}<br/><br/>`;\n    if (currentRSI_MACrossover === 1) {\n      result += \"RSI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/><br/>\";\n    } else if (currentRSI_MACrossover === -1) {\n      result += \"RSI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/><br/>\";\n    } else {\n      result += \"RSI 이동평균에 특별한 교차 신호가 없습니다.<br/><br/>\";\n    }\n    if (rsiTrendDirection === '상승' && priceTrendDirection === '상승') {\n      result += \"RSI와 가격 모두 상승세를 보이고 있습니다. 강한 상승 추세일 가능성이 큽니다.<br/>\";\n    } else if (rsiTrendDirection === '하락' && priceTrendDirection === '하락') {\n      result += \"RSI와 가격 모두 하락세를 보이고 있습니다. 하락 추세가 강화될 가능성이 있습니다.<br/>\";\n    } else if (rsiTrendDirection === '상승' && priceTrendDirection === '하락') {\n      result += \"가격은 하락 중이나 RSI는 상승세를 보이고 있습니다. 이는 가격 반등 가능성을 시사할 수 있습니다.<br/>\";\n    } else if (rsiTrendDirection === '하락' && priceTrendDirection === '상승') {\n      result += \"가격은 상승 중이나 RSI는 하락세를 보이고 있습니다. 이는 상승 추세가 약화될 수 있음을 나타냅니다.<br/>\";\n    }\n    return result;\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this); // 에러가 발생한 경우 에러 메시지 표시\n  }\n  if (!analysisResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this); // 데이터가 로드되기 전에는 로딩 메시지 표시\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"RSI \\uBD84\\uC11D \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: renderRSIAnalysis(analysisResult)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchRSIAnalysis, \"ouRX2WpcByH/FMIrkcHTha1nqaw=\");\n_c = FetchRSIAnalysis;\nexport default FetchRSIAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FetchRSIAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchRSIAnalysis","stockCode","_s","analysisResult","setAnalysisResult","error","setError","query","selectedAnalysis","join","fetch","then","response","ok","Error","json","data","catch","console","renderRSIAnalysis","analysisData","currentRSI","rsiState","priceTrendDirection","rsiTrendDirection","currentRSI_MACrossover","result","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsFetch/FetchRSIAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction FetchRSIAnalysis({ stockCode }) {\r\n    const [analysisResult, setAnalysisResult] = useState(null);  // 분석 결과 저장할 상태\r\n    const [error, setError] = useState(null);  // 에러 메시지를 저장할 상태\r\n\r\n    useEffect(() => {\r\n        const query = selectedAnalysis.join(',');\r\n        fetch(`http://127.0.0.1:8000/api/analyze_rsi/${stockCode}/?analysis=${query}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setAnalysisResult(data);  // 서버에서 받은 분석 결과를 저장\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching RSI analysis:', error);\r\n                setError('RSI 분석 데이터를 불러오는 데 문제가 발생했습니다.');\r\n            });\r\n    }, [stockCode, selectedAnalysis]);\r\n\r\n    // 서버로부터 받은 데이터를 바탕으로 RSI 분석 결과 출력\r\n    const renderRSIAnalysis = (analysisData) => {\r\n        const { currentRSI, rsiState, priceTrendDirection, rsiTrendDirection, currentRSI_MACrossover } = analysisData;\r\n\r\n        let result = `<strong>현재 RSI:</strong> ${currentRSI.toFixed(2)} (${rsiState})<br/>`;\r\n        result += `ㆍ 가격 흐름: ${priceTrendDirection} 추세<br/>`;\r\n        result += `ㆍ RSI 흐름: ${rsiTrendDirection} 추세<br/>`;\r\n        result += `ㆍ RSI 이동평균 교차 신호: ${currentRSI_MACrossover === 1 ? '골든 크로스' : '데드 크로스'}<br/><br/>`;\r\n\r\n        if (currentRSI_MACrossover === 1) {\r\n            result += \"RSI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/><br/>\";\r\n        } else if (currentRSI_MACrossover === -1) {\r\n            result += \"RSI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/><br/>\";\r\n        } else {\r\n            result += \"RSI 이동평균에 특별한 교차 신호가 없습니다.<br/><br/>\";\r\n        }\r\n\r\n        if (rsiTrendDirection === '상승' && priceTrendDirection === '상승') {\r\n            result += \"RSI와 가격 모두 상승세를 보이고 있습니다. 강한 상승 추세일 가능성이 큽니다.<br/>\";\r\n        } else if (rsiTrendDirection === '하락' && priceTrendDirection === '하락') {\r\n            result += \"RSI와 가격 모두 하락세를 보이고 있습니다. 하락 추세가 강화될 가능성이 있습니다.<br/>\";\r\n        } else if (rsiTrendDirection === '상승' && priceTrendDirection === '하락') {\r\n            result += \"가격은 하락 중이나 RSI는 상승세를 보이고 있습니다. 이는 가격 반등 가능성을 시사할 수 있습니다.<br/>\";\r\n        } else if (rsiTrendDirection === '하락' && priceTrendDirection === '상승') {\r\n            result += \"가격은 상승 중이나 RSI는 하락세를 보이고 있습니다. 이는 상승 추세가 약화될 수 있음을 나타냅니다.<br/>\";\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;  // 에러가 발생한 경우 에러 메시지 표시\r\n    }\r\n\r\n    if (!analysisResult) {\r\n        return <div>데이터 로드 중...</div>;  // 데이터가 로드되기 전에는 로딩 메시지 표시\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>RSI 분석 결과</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: renderRSIAnalysis(analysisResult) }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FetchRSIAnalysis;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,gBAAgBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC7D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3CC,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAGC,gBAAgB,CAACC,IAAI,CAAC,GAAG,CAAC;IACxCC,KAAK,CAAC,yCAAyCT,SAAS,cAAcM,KAAK,EAAE,CAAC,CACzEI,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVZ,iBAAiB,CAACY,IAAI,CAAC,CAAC,CAAE;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACZ,KAAK,IAAI;MACZa,OAAO,CAACb,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,gCAAgC,CAAC;IAC9C,CAAC,CAAC;EACV,CAAC,EAAE,CAACL,SAAS,EAAEO,gBAAgB,CAAC,CAAC;;EAEjC;EACA,MAAMW,iBAAiB,GAAIC,YAAY,IAAK;IACxC,MAAM;MAAEC,UAAU;MAAEC,QAAQ;MAAEC,mBAAmB;MAAEC,iBAAiB;MAAEC;IAAuB,CAAC,GAAGL,YAAY;IAE7G,IAAIM,MAAM,GAAG,4BAA4BL,UAAU,CAACM,OAAO,CAAC,CAAC,CAAC,KAAKL,QAAQ,QAAQ;IACnFI,MAAM,IAAI,YAAYH,mBAAmB,UAAU;IACnDG,MAAM,IAAI,aAAaF,iBAAiB,UAAU;IAClDE,MAAM,IAAI,qBAAqBD,sBAAsB,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,YAAY;IAE7F,IAAIA,sBAAsB,KAAK,CAAC,EAAE;MAC9BC,MAAM,IAAI,sEAAsE;IACpF,CAAC,MAAM,IAAID,sBAAsB,KAAK,CAAC,CAAC,EAAE;MACtCC,MAAM,IAAI,sEAAsE;IACpF,CAAC,MAAM;MACHA,MAAM,IAAI,sCAAsC;IACpD;IAEA,IAAIF,iBAAiB,KAAK,IAAI,IAAID,mBAAmB,KAAK,IAAI,EAAE;MAC5DG,MAAM,IAAI,oDAAoD;IAClE,CAAC,MAAM,IAAIF,iBAAiB,KAAK,IAAI,IAAID,mBAAmB,KAAK,IAAI,EAAE;MACnEG,MAAM,IAAI,sDAAsD;IACpE,CAAC,MAAM,IAAIF,iBAAiB,KAAK,IAAI,IAAID,mBAAmB,KAAK,IAAI,EAAE;MACnEG,MAAM,IAAI,+DAA+D;IAC7E,CAAC,MAAM,IAAIF,iBAAiB,KAAK,IAAI,IAAID,mBAAmB,KAAK,IAAI,EAAE;MACnEG,MAAM,IAAI,gEAAgE;IAC9E;IAEA,OAAOA,MAAM;EACjB,CAAC;EAED,IAAIrB,KAAK,EAAE;IACP,oBAAON,OAAA;MAAA6B,QAAA,EAAMvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAE;EAChC;EAEA,IAAI,CAAC7B,cAAc,EAAE;IACjB,oBAAOJ,OAAA;MAAA6B,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACpC;EAEA,oBACIjC,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjC,OAAA;MAAGkC,uBAAuB,EAAE;QAAEC,MAAM,EAAEf,iBAAiB,CAAChB,cAAc;MAAE;IAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEd;AAAC9B,EAAA,CAlEQF,gBAAgB;AAAAmC,EAAA,GAAhBnC,gBAAgB;AAoEzB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}