{"ast":null,"code":"/**\n * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)\n * value of data compared with a function `f`\n * is the sum of the squared differences between the prediction\n * and the actual value.\n *\n * @param {Array<Array<number>>} x input data: this should be doubly-nested\n * @param {Function} func function called on `[i][0]` values within the dataset\n * @returns {number} r-squared value\n * @example\n * var samples = [[0, 0], [1, 1]];\n * var regressionLine = linearRegressionLine(linearRegression(samples));\n * rSquared(samples, regressionLine); // = 1 this line is a perfect fit\n */\nfunction rSquared(x, func) {\n  if (x.length < 2) {\n    return 1;\n  }\n\n  // Compute the average y value for the actual\n  // data set in order to compute the\n  // _total sum of squares_\n  let sum = 0;\n  for (let i = 0; i < x.length; i++) {\n    sum += x[i][1];\n  }\n  const average = sum / x.length;\n\n  // Compute the total sum of squares - the\n  // squared difference between each point\n  // and the average of all points.\n  let sumOfSquares = 0;\n  for (let j = 0; j < x.length; j++) {\n    sumOfSquares += Math.pow(average - x[j][1], 2);\n  }\n\n  // Finally estimate the error: the squared\n  // difference between the estimate and the actual data\n  // value at each point.\n  let err = 0;\n  for (let k = 0; k < x.length; k++) {\n    err += Math.pow(x[k][1] - func(x[k][0]), 2);\n  }\n\n  // As the error grows larger, its ratio to the\n  // sum of squares increases and the r squared\n  // value grows lower.\n  return 1 - err / sumOfSquares;\n}\nexport default rSquared;","map":{"version":3,"names":["rSquared","x","func","length","sum","i","average","sumOfSquares","j","Math","pow","err","k"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/r_squared.js"],"sourcesContent":["/**\n * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)\n * value of data compared with a function `f`\n * is the sum of the squared differences between the prediction\n * and the actual value.\n *\n * @param {Array<Array<number>>} x input data: this should be doubly-nested\n * @param {Function} func function called on `[i][0]` values within the dataset\n * @returns {number} r-squared value\n * @example\n * var samples = [[0, 0], [1, 1]];\n * var regressionLine = linearRegressionLine(linearRegression(samples));\n * rSquared(samples, regressionLine); // = 1 this line is a perfect fit\n */\nfunction rSquared(x, func) {\n    if (x.length < 2) {\n        return 1;\n    }\n\n    // Compute the average y value for the actual\n    // data set in order to compute the\n    // _total sum of squares_\n    let sum = 0;\n    for (let i = 0; i < x.length; i++) {\n        sum += x[i][1];\n    }\n    const average = sum / x.length;\n\n    // Compute the total sum of squares - the\n    // squared difference between each point\n    // and the average of all points.\n    let sumOfSquares = 0;\n    for (let j = 0; j < x.length; j++) {\n        sumOfSquares += Math.pow(average - x[j][1], 2);\n    }\n\n    // Finally estimate the error: the squared\n    // difference between the estimate and the actual data\n    // value at each point.\n    let err = 0;\n    for (let k = 0; k < x.length; k++) {\n        err += Math.pow(x[k][1] - func(x[k][0]), 2);\n    }\n\n    // As the error grows larger, its ratio to the\n    // sum of squares increases and the r squared\n    // value grows lower.\n    return 1 - err / sumOfSquares;\n}\n\nexport default rSquared;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,CAAC,EAAEC,IAAI,EAAE;EACvB,IAAID,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;IACd,OAAO,CAAC;EACZ;;EAEA;EACA;EACA;EACA,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;IAC/BD,GAAG,IAAIH,CAAC,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB;EACA,MAAMC,OAAO,GAAGF,GAAG,GAAGH,CAAC,CAACE,MAAM;;EAE9B;EACA;EACA;EACA,IAAII,YAAY,GAAG,CAAC;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,CAACE,MAAM,EAAEK,CAAC,EAAE,EAAE;IAC/BD,YAAY,IAAIE,IAAI,CAACC,GAAG,CAACJ,OAAO,GAAGL,CAAC,CAACO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAClD;;EAEA;EACA;EACA;EACA,IAAIG,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,CAAC,CAACE,MAAM,EAAES,CAAC,EAAE,EAAE;IAC/BD,GAAG,IAAIF,IAAI,CAACC,GAAG,CAACT,CAAC,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGV,IAAI,CAACD,CAAC,CAACW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/C;;EAEA;EACA;EACA;EACA,OAAO,CAAC,GAAGD,GAAG,GAAGJ,YAAY;AACjC;AAEA,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}