{"ast":null,"code":"const authService = {\n  login: async credentials => {\n    // 예시로, 실제 API 호출을 하는 코드입니다.\n    // fetch나 axios를 사용하여 백엔드 API와 통신할 수 있습니다.\n    const response = await fetch('/api/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n    return response.json();\n  }\n\n  // 추가적인 서비스 메서드를 여기에 정의할 수 있습니다.\n};\nexport default authService;","map":{"version":3,"names":["authService","login","credentials","response","fetch","method","headers","body","JSON","stringify","ok","Error","json"],"sources":["C:/ProPython/Stock2/frontend/src/services/authService.js"],"sourcesContent":["const authService = {\r\n    login: async (credentials) => {\r\n        // 예시로, 실제 API 호출을 하는 코드입니다.\r\n        // fetch나 axios를 사용하여 백엔드 API와 통신할 수 있습니다.\r\n        const response = await fetch('/api/login/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(credentials),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Login failed');\r\n        }\r\n\r\n        return response.json();\r\n    },\r\n\r\n    // 추가적인 서비스 메서드를 여기에 정의할 수 있습니다.\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC1B;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IACpC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACnC;IAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC1B;;EAEA;AACJ,CAAC;AAED,eAAeZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}