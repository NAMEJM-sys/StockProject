{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsChart\\\\ChartOfIchimoku.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Highcharts from 'highcharts/highstock'; // highstock으로 변경\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport HighchartsReact from 'highcharts-react-official';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport FetchIchimokuData from '../ComponentsFetch/FetchIchimokuData';\nimport '../styles/ChangeChart.css';\n\n// Highcharts 모듈 로드\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsMore(Highcharts);\nfunction ChartOfIchimoku({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [ichimokuData, setIchimokuData] = useState([]);\n  const [options, setOptions] = useState({});\n  const [chartType, setChartType] = useState('line');\n  const [showModal, setShowModal] = useState(false);\n  const [lineVisibility, setLineVisibility] = useState({\n    tenkan: true,\n    kijun: true,\n    spanA: true,\n    spanB: true,\n    chikou: true,\n    ichimokuCloud: true\n  });\n  useEffect(() => {\n    if (stockData.length > 0 && ichimokuData.length > 0 && stockCode) {\n      // 종가 데이터 준비\n      const formattedClosePriceData = stockData.map(item => ({\n        x: new Date(item.date).getTime(),\n        open: item.open,\n        high: item.high,\n        low: item.low,\n        close: item.close\n      }));\n\n      // Ichimoku 데이터 준비\n      const formattedIchimokuData = ichimokuData.map(item => {\n        const time = new Date(item.date).getTime();\n        return {\n          time,\n          Tenkan_sen: item.Tenkan_sen,\n          Kijun_sen: item.Kijun_sen,\n          // Senkou Span은 미래로 26일 이동\n          Senkou_Span_A: {\n            x: time + 26 * 24 * 3600 * 1000,\n            // 26일 후\n            value: item.Senkou_Span_A\n          },\n          Senkou_Span_B: {\n            x: time + 26 * 24 * 3600 * 1000,\n            value: item.Senkou_Span_B\n          },\n          // Chikou Span은 과거로 26일 이동\n          Chikou_Span: {\n            x: time - 26 * 24 * 3600 * 1000,\n            // 26일 전\n            value: item.Chikou_Span\n          }\n        };\n      });\n\n      // 선행스팬 A, B 데이터 추출\n      const senkouSpanAData = formattedIchimokuData.map(item => [item.Senkou_Span_A.x, item.Senkou_Span_A.value]);\n      const senkouSpanBData = formattedIchimokuData.map(item => [item.Senkou_Span_B.x, item.Senkou_Span_B.value]);\n\n      // 구름대 영역 데이터 생성\n      const ichimokuCloudData = senkouSpanAData.map((point, index) => {\n        const x = point[0];\n        const valueA = point[1];\n        const valueB = senkouSpanBData[index][1];\n        return [x, valueA, valueB];\n      });\n\n      // 전환선, 기준선, 후행스팬 데이터 추출\n      const tenkanSenData = formattedIchimokuData.map(item => [item.time, item.Tenkan_sen]);\n      const kijunSenData = formattedIchimokuData.map(item => [item.time, item.Kijun_sen]);\n      const chikouSpanData = formattedIchimokuData.map(item => [item.Chikou_Span.x, item.Chikou_Span.value]);\n\n      // 거래량 데이터 준비\n      const formattedVolumesData = stockData.map(item => ({\n        x: new Date(item.date).getTime(),\n        y: item.volume\n      }));\n      setOptions({\n        chart: {\n          zoomType: 'x',\n          height: 550,\n          width: 680\n        },\n        title: {\n          text: ''\n        },\n        xAxis: {\n          type: 'datetime',\n          labels: {\n            format: '{value:%Y-%m-%d}'\n          },\n          plotLines: [{\n            value: Date.now(),\n            color: 'red',\n            width: 1,\n            dashStyle: 'Dash',\n            zIndex: 5\n          }]\n        },\n        yAxis: [{\n          title: {\n            text: 'Price'\n          },\n          height: '75%',\n          lineWidth: 2\n        }, {\n          title: {\n            text: 'Volume'\n          },\n          top: '77%',\n          height: '23%',\n          offset: 0,\n          lineWidth: 2,\n          labels: {\n            enabled: false\n          }\n        }],\n        series: [{\n          name: 'Close Price',\n          type: chartType === 'line' ? 'line' : 'candlestick',\n          data: chartType === 'line' ? formattedClosePriceData.map(item => [item.x, item.close]) : formattedClosePriceData.map(item => [item.x, item.open, item.high, item.low, item.close]),\n          yAxis: 0\n        }, {\n          name: 'Tenkan-sen (전환선)',\n          data: tenkanSenData,\n          visible: lineVisibility.tenkan,\n          color: '#FF5733',\n          yAxis: 0,\n          lineWidth: 1\n        }, {\n          name: 'Kijun-sen (기준선)',\n          data: kijunSenData,\n          visible: lineVisibility.kijun,\n          color: '#FFC300',\n          yAxis: 0,\n          lineWidth: 1\n        }, {\n          name: 'Chikou Span (후행스팬)',\n          data: chikouSpanData,\n          visible: lineVisibility.chikou,\n          color: '#8B4513',\n          yAxis: 0,\n          lineWidth: 1\n        }, {\n          name: 'Senkou Span A (선행스팬 A)',\n          data: senkouSpanAData,\n          visible: lineVisibility.spanA,\n          yAxis: 0,\n          color: '#33FF57',\n          lineWidth: 1\n        }, {\n          name: 'Senkou Span B (선행스팬 B)',\n          data: senkouSpanBData,\n          visible: lineVisibility.spanB,\n          yAxis: 0,\n          color: '#C70039',\n          lineWidth: 1\n        }, {\n          type: 'arearange',\n          name: 'Ichimoku Cloud',\n          data: ichimokuCloudData,\n          visible: lineVisibility.ichimokuCloud,\n          yAxis: 0,\n          color: 'rgba(50, 205, 50, 0.3)',\n          // 상승 구름 (녹색)\n          negativeColor: 'rgba(255, 99, 132, 0.3)',\n          // 하락 구름 (붉은색)\n          tooltip: {\n            pointFormat: '<span style=\"color:{series.color}\">\\u25CF</span> {series.name}: <b>{point.low:.2f} - {point.high:.2f}</b><br/>'\n          }\n        }, {\n          name: 'Volumes',\n          data: formattedVolumesData,\n          type: 'column',\n          yAxis: 1,\n          color: '#A9A9A9'\n        }],\n        tooltip: {\n          shared: true,\n          crosshairs: true\n        },\n        legend: {\n          enabled: true\n        },\n        rangeSelector: {\n          selected: 5\n        }\n      });\n    }\n  }, [stockData, ichimokuData, stockCode, chartType, lineVisibility]);\n  const toggleLineVisibility = line => {\n    setLineVisibility(prev => ({\n      ...prev,\n      [line]: !prev[line]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        constructorType: 'stockChart',\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `custom-button-line ${chartType === 'line' ? 'active' : ''}`,\n        onClick: () => setChartType('line'),\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `custom-button-candle ${chartType === 'candlestick' ? 'active' : ''}`,\n        onClick: () => setChartType('candlestick'),\n        children: \"Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ichimoku Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lineVisibility.tenkan,\n          onChange: () => toggleLineVisibility('tenkan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this), \"Tenkan-sen\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lineVisibility.kijun,\n          onChange: () => toggleLineVisibility('kijun')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), \"Kijun-sen\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lineVisibility.spanA,\n          onChange: () => toggleLineVisibility('spanA')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), \"Senkou Span A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lineVisibility.spanB,\n          onChange: () => toggleLineVisibility('spanB')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), \"Senkou Span B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lineVisibility.chikou,\n          onChange: () => toggleLineVisibility('chikou')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), \"Chikou Span\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lineVisibility.ichimokuCloud,\n          onChange: () => toggleLineVisibility('ichimokuCloud')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), \"Ichimoku Cloud\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchIchimokuData, {\n      stockCode: stockCode,\n      onIchimokuFetch: setIchimokuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfIchimoku, \"b7NzwUNuMUxcPx5jZz0FJESKkDY=\");\n_c = ChartOfIchimoku;\nexport default ChartOfIchimoku;\nvar _c;\n$RefreshReg$(_c, \"ChartOfIchimoku\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsMore","HighchartsReact","FetchStockDataForCode","FetchIchimokuData","jsxDEV","_jsxDEV","ChartOfIchimoku","stockCode","_s","stockData","setStockData","ichimokuData","setIchimokuData","options","setOptions","chartType","setChartType","showModal","setShowModal","lineVisibility","setLineVisibility","tenkan","kijun","spanA","spanB","chikou","ichimokuCloud","length","formattedClosePriceData","map","item","x","Date","date","getTime","open","high","low","close","formattedIchimokuData","time","Tenkan_sen","Kijun_sen","Senkou_Span_A","value","Senkou_Span_B","Chikou_Span","senkouSpanAData","senkouSpanBData","ichimokuCloudData","point","index","valueA","valueB","tenkanSenData","kijunSenData","chikouSpanData","formattedVolumesData","y","volume","chart","zoomType","height","width","title","text","xAxis","type","labels","format","plotLines","now","color","dashStyle","zIndex","yAxis","lineWidth","top","offset","enabled","series","name","data","visible","negativeColor","tooltip","pointFormat","shared","crosshairs","legend","rangeSelector","selected","toggleLineVisibility","line","prev","className","children","highcharts","constructorType","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","onChange","onSDFCFetch","onIchimokuFetch","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsChart/ChartOfIchimoku.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts/highstock'; // highstock으로 변경\r\nimport HighchartsMore from 'highcharts/highcharts-more';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\nimport FetchIchimokuData from '../ComponentsFetch/FetchIchimokuData';\r\nimport '../styles/ChangeChart.css';\r\n\r\n// Highcharts 모듈 로드\r\nHighchartsMore(Highcharts);\r\n\r\nfunction ChartOfIchimoku({ stockCode }) {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [ichimokuData, setIchimokuData] = useState([]);\r\n    const [options, setOptions] = useState({});\r\n    const [chartType, setChartType] = useState('line');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [lineVisibility, setLineVisibility] = useState({\r\n        tenkan: true,\r\n        kijun: true,\r\n        spanA: true,\r\n        spanB: true,\r\n        chikou: true,\r\n        ichimokuCloud: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && ichimokuData.length > 0 && stockCode) {\r\n            // 종가 데이터 준비\r\n            const formattedClosePriceData = stockData.map(item => ({\r\n                x: new Date(item.date).getTime(),\r\n                open: item.open,\r\n                high: item.high,\r\n                low: item.low,\r\n                close: item.close,\r\n            }));\r\n\r\n            // Ichimoku 데이터 준비\r\n            const formattedIchimokuData = ichimokuData.map(item => {\r\n                const time = new Date(item.date).getTime();\r\n                return {\r\n                    time,\r\n                    Tenkan_sen: item.Tenkan_sen,\r\n                    Kijun_sen: item.Kijun_sen,\r\n                    // Senkou Span은 미래로 26일 이동\r\n                    Senkou_Span_A: {\r\n                        x: time + 26 * 24 * 3600 * 1000, // 26일 후\r\n                        value: item.Senkou_Span_A,\r\n                    },\r\n                    Senkou_Span_B: {\r\n                        x: time + 26 * 24 * 3600 * 1000,\r\n                        value: item.Senkou_Span_B,\r\n                    },\r\n                    // Chikou Span은 과거로 26일 이동\r\n                    Chikou_Span: {\r\n                        x: time - 26 * 24 * 3600 * 1000, // 26일 전\r\n                        value: item.Chikou_Span,\r\n                    },\r\n                };\r\n            });\r\n\r\n            // 선행스팬 A, B 데이터 추출\r\n            const senkouSpanAData = formattedIchimokuData.map(item => [\r\n                item.Senkou_Span_A.x,\r\n                item.Senkou_Span_A.value,\r\n            ]);\r\n\r\n            const senkouSpanBData = formattedIchimokuData.map(item => [\r\n                item.Senkou_Span_B.x,\r\n                item.Senkou_Span_B.value,\r\n            ]);\r\n\r\n            // 구름대 영역 데이터 생성\r\n            const ichimokuCloudData = senkouSpanAData.map((point, index) => {\r\n                const x = point[0];\r\n                const valueA = point[1];\r\n                const valueB = senkouSpanBData[index][1];\r\n                return [x, valueA, valueB];\r\n            });\r\n\r\n            // 전환선, 기준선, 후행스팬 데이터 추출\r\n            const tenkanSenData = formattedIchimokuData.map(item => [\r\n                item.time,\r\n                item.Tenkan_sen,\r\n            ]);\r\n\r\n            const kijunSenData = formattedIchimokuData.map(item => [\r\n                item.time,\r\n                item.Kijun_sen,\r\n            ]);\r\n\r\n            const chikouSpanData = formattedIchimokuData.map(item => [\r\n                item.Chikou_Span.x,\r\n                item.Chikou_Span.value,\r\n            ]);\r\n\r\n            // 거래량 데이터 준비\r\n            const formattedVolumesData = stockData.map(item => ({\r\n                x: new Date(item.date).getTime(),\r\n                y: item.volume,\r\n            }));\r\n\r\n            setOptions({\r\n                chart: {\r\n                    zoomType: 'x',\r\n                    height: 550,\r\n                    width: 680,\r\n                },\r\n                title: {\r\n                    text: '',\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    labels: { format: '{value:%Y-%m-%d}' },\r\n                    plotLines: [\r\n                        {\r\n                            value: Date.now(),\r\n                            color: 'red',\r\n                            width: 1,\r\n                            dashStyle: 'Dash',\r\n                            zIndex: 5,\r\n                        },\r\n                    ],\r\n                },\r\n                yAxis: [\r\n                    {\r\n                        title: {\r\n                            text: 'Price',\r\n                        },\r\n                        height: '75%',\r\n                        lineWidth: 2,\r\n                    },\r\n                    {\r\n                        title: {\r\n                            text: 'Volume',\r\n                        },\r\n                        top: '77%',\r\n                        height: '23%',\r\n                        offset: 0,\r\n                        lineWidth: 2,\r\n                        labels: {\r\n                            enabled: false,\r\n                        },\r\n                    },\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: 'Close Price',\r\n                        type: chartType === 'line' ? 'line' : 'candlestick',\r\n                        data:\r\n                            chartType === 'line'\r\n                                ? formattedClosePriceData.map(item => [item.x, item.close])\r\n                                : formattedClosePriceData.map(item => [\r\n                                      item.x,\r\n                                      item.open,\r\n                                      item.high,\r\n                                      item.low,\r\n                                      item.close,\r\n                                  ]),\r\n                        yAxis: 0,\r\n                    },\r\n                    {\r\n                        name: 'Tenkan-sen (전환선)',\r\n                        data: tenkanSenData,\r\n                        visible: lineVisibility.tenkan,\r\n                        color: '#FF5733',\r\n                        yAxis: 0,\r\n                        lineWidth: 1,\r\n                    },\r\n                    {\r\n                        name: 'Kijun-sen (기준선)',\r\n                        data: kijunSenData,\r\n                        visible: lineVisibility.kijun,\r\n                        color: '#FFC300',\r\n                        yAxis: 0,\r\n                        lineWidth: 1,\r\n                    },\r\n                    {\r\n                        name: 'Chikou Span (후행스팬)',\r\n                        data: chikouSpanData,\r\n                        visible: lineVisibility.chikou,\r\n                        color: '#8B4513',\r\n                        yAxis: 0,\r\n                        lineWidth: 1,\r\n                    },\r\n                    {\r\n                        name: 'Senkou Span A (선행스팬 A)',\r\n                        data: senkouSpanAData,\r\n                        visible: lineVisibility.spanA,\r\n                        yAxis: 0,\r\n                        color: '#33FF57',\r\n                        lineWidth: 1,\r\n                    },\r\n                    {\r\n                        name: 'Senkou Span B (선행스팬 B)',\r\n                        data: senkouSpanBData,\r\n                        visible: lineVisibility.spanB,\r\n                        yAxis: 0,\r\n                        color: '#C70039',\r\n                        lineWidth: 1,\r\n                    },\r\n                    {\r\n                        type: 'arearange',\r\n                        name: 'Ichimoku Cloud',\r\n                        data: ichimokuCloudData,\r\n                        visible: lineVisibility.ichimokuCloud,\r\n                        yAxis: 0,\r\n                        color: 'rgba(50, 205, 50, 0.3)', // 상승 구름 (녹색)\r\n                        negativeColor: 'rgba(255, 99, 132, 0.3)', // 하락 구름 (붉은색)\r\n                        tooltip: {\r\n                            pointFormat: '<span style=\"color:{series.color}\">\\u25CF</span> {series.name}: <b>{point.low:.2f} - {point.high:.2f}</b><br/>',\r\n                        },\r\n                    },\r\n                    {\r\n                        name: 'Volumes',\r\n                        data: formattedVolumesData,\r\n                        type: 'column',\r\n                        yAxis: 1,\r\n                        color: '#A9A9A9',\r\n                    },\r\n                ],\r\n                tooltip: {\r\n                    shared: true,\r\n                    crosshairs: true,\r\n                },\r\n                legend: {\r\n                    enabled: true,\r\n                },\r\n                rangeSelector: {\r\n                    selected: 5,\r\n                },\r\n            });\r\n        }\r\n    }, [stockData, ichimokuData, stockCode, chartType, lineVisibility]);\r\n\r\n    const toggleLineVisibility = line => {\r\n        setLineVisibility(prev => ({ ...prev, [line]: !prev[line] }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"chart-controls\">\r\n            <div>\r\n                <HighchartsReact highcharts={Highcharts} constructorType={'stockChart'} options={options} />\r\n            </div>\r\n\r\n            <div className=\"custom-buttons\">\r\n                <button className={`custom-button-line ${chartType === 'line' ? 'active' : ''}`} onClick={() => setChartType('line')}>\r\n                    Line\r\n                </button>\r\n                <button\r\n                    className={`custom-button-candle ${chartType === 'candlestick' ? 'active' : ''}`}\r\n                    onClick={() => setChartType('candlestick')}\r\n                >\r\n                    Candle\r\n                </button>\r\n                <button onClick={() => setShowModal(true)}>Settings</button>\r\n            </div>\r\n\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <h4>Ichimoku Settings</h4>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={lineVisibility.tenkan} onChange={() => toggleLineVisibility('tenkan')} />\r\n                        Tenkan-sen\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={lineVisibility.kijun} onChange={() => toggleLineVisibility('kijun')} />\r\n                        Kijun-sen\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={lineVisibility.spanA} onChange={() => toggleLineVisibility('spanA')} />\r\n                        Senkou Span A\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={lineVisibility.spanB} onChange={() => toggleLineVisibility('spanB')} />\r\n                        Senkou Span B\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={lineVisibility.chikou} onChange={() => toggleLineVisibility('chikou')} />\r\n                        Chikou Span\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={lineVisibility.ichimokuCloud} onChange={() => toggleLineVisibility('ichimokuCloud')} />\r\n                        Ichimoku Cloud\r\n                    </label>\r\n                    <button onClick={() => setShowModal(false)}>닫기</button>\r\n                </div>\r\n            )}\r\n\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <FetchIchimokuData stockCode={stockCode} onIchimokuFetch={setIchimokuData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartOfIchimoku;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,sBAAsB,CAAC,CAAC;AAC/C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,qBAAqB,MAAM,0CAA0C;AAC5E,OAAOC,iBAAiB,MAAM,sCAAsC;AACpE,OAAO,2BAA2B;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAL,cAAc,CAACD,UAAU,CAAC;AAE1B,SAASO,eAAeA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC;IACjDwB,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,aAAa,EAAE;EACnB,CAAC,CAAC;EAEF5B,SAAS,CAAC,MAAM;IACZ,IAAIW,SAAS,CAACkB,MAAM,GAAG,CAAC,IAAIhB,YAAY,CAACgB,MAAM,GAAG,CAAC,IAAIpB,SAAS,EAAE;MAC9D;MACA,MAAMqB,uBAAuB,GAAGnB,SAAS,CAACoB,GAAG,CAACC,IAAI,KAAK;QACnDC,CAAC,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;QAChCC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,IAAI,EAAEN,IAAI,CAACM,IAAI;QACfC,GAAG,EAAEP,IAAI,CAACO,GAAG;QACbC,KAAK,EAAER,IAAI,CAACQ;MAChB,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMC,qBAAqB,GAAG5B,YAAY,CAACkB,GAAG,CAACC,IAAI,IAAI;QACnD,MAAMU,IAAI,GAAG,IAAIR,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;QAC1C,OAAO;UACHM,IAAI;UACJC,UAAU,EAAEX,IAAI,CAACW,UAAU;UAC3BC,SAAS,EAAEZ,IAAI,CAACY,SAAS;UACzB;UACAC,aAAa,EAAE;YACXZ,CAAC,EAAES,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAAE;YACjCI,KAAK,EAAEd,IAAI,CAACa;UAChB,CAAC;UACDE,aAAa,EAAE;YACXd,CAAC,EAAES,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAC/BI,KAAK,EAAEd,IAAI,CAACe;UAChB,CAAC;UACD;UACAC,WAAW,EAAE;YACTf,CAAC,EAAES,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;YAAE;YACjCI,KAAK,EAAEd,IAAI,CAACgB;UAChB;QACJ,CAAC;MACL,CAAC,CAAC;;MAEF;MACA,MAAMC,eAAe,GAAGR,qBAAqB,CAACV,GAAG,CAACC,IAAI,IAAI,CACtDA,IAAI,CAACa,aAAa,CAACZ,CAAC,EACpBD,IAAI,CAACa,aAAa,CAACC,KAAK,CAC3B,CAAC;MAEF,MAAMI,eAAe,GAAGT,qBAAqB,CAACV,GAAG,CAACC,IAAI,IAAI,CACtDA,IAAI,CAACe,aAAa,CAACd,CAAC,EACpBD,IAAI,CAACe,aAAa,CAACD,KAAK,CAC3B,CAAC;;MAEF;MACA,MAAMK,iBAAiB,GAAGF,eAAe,CAAClB,GAAG,CAAC,CAACqB,KAAK,EAAEC,KAAK,KAAK;QAC5D,MAAMpB,CAAC,GAAGmB,KAAK,CAAC,CAAC,CAAC;QAClB,MAAME,MAAM,GAAGF,KAAK,CAAC,CAAC,CAAC;QACvB,MAAMG,MAAM,GAAGL,eAAe,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO,CAACpB,CAAC,EAAEqB,MAAM,EAAEC,MAAM,CAAC;MAC9B,CAAC,CAAC;;MAEF;MACA,MAAMC,aAAa,GAAGf,qBAAqB,CAACV,GAAG,CAACC,IAAI,IAAI,CACpDA,IAAI,CAACU,IAAI,EACTV,IAAI,CAACW,UAAU,CAClB,CAAC;MAEF,MAAMc,YAAY,GAAGhB,qBAAqB,CAACV,GAAG,CAACC,IAAI,IAAI,CACnDA,IAAI,CAACU,IAAI,EACTV,IAAI,CAACY,SAAS,CACjB,CAAC;MAEF,MAAMc,cAAc,GAAGjB,qBAAqB,CAACV,GAAG,CAACC,IAAI,IAAI,CACrDA,IAAI,CAACgB,WAAW,CAACf,CAAC,EAClBD,IAAI,CAACgB,WAAW,CAACF,KAAK,CACzB,CAAC;;MAEF;MACA,MAAMa,oBAAoB,GAAGhD,SAAS,CAACoB,GAAG,CAACC,IAAI,KAAK;QAChDC,CAAC,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;QAChCwB,CAAC,EAAE5B,IAAI,CAAC6B;MACZ,CAAC,CAAC,CAAC;MAEH7C,UAAU,CAAC;QACP8C,KAAK,EAAE;UACHC,QAAQ,EAAE,GAAG;UACbC,MAAM,EAAE,GAAG;UACXC,KAAK,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAE;QACV,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAE;YAAEC,MAAM,EAAE;UAAmB,CAAC;UACtCC,SAAS,EAAE,CACP;YACI1B,KAAK,EAAEZ,IAAI,CAACuC,GAAG,CAAC,CAAC;YACjBC,KAAK,EAAE,KAAK;YACZT,KAAK,EAAE,CAAC;YACRU,SAAS,EAAE,MAAM;YACjBC,MAAM,EAAE;UACZ,CAAC;QAET,CAAC;QACDC,KAAK,EAAE,CACH;UACIX,KAAK,EAAE;YACHC,IAAI,EAAE;UACV,CAAC;UACDH,MAAM,EAAE,KAAK;UACbc,SAAS,EAAE;QACf,CAAC,EACD;UACIZ,KAAK,EAAE;YACHC,IAAI,EAAE;UACV,CAAC;UACDY,GAAG,EAAE,KAAK;UACVf,MAAM,EAAE,KAAK;UACbgB,MAAM,EAAE,CAAC;UACTF,SAAS,EAAE,CAAC;UACZR,MAAM,EAAE;YACJW,OAAO,EAAE;UACb;QACJ,CAAC,CACJ;QACDC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,aAAa;UACnBd,IAAI,EAAEpD,SAAS,KAAK,MAAM,GAAG,MAAM,GAAG,aAAa;UACnDmE,IAAI,EACAnE,SAAS,KAAK,MAAM,GACda,uBAAuB,CAACC,GAAG,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,CAAC,EAAED,IAAI,CAACQ,KAAK,CAAC,CAAC,GACzDV,uBAAuB,CAACC,GAAG,CAACC,IAAI,IAAI,CAChCA,IAAI,CAACC,CAAC,EACND,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,IAAI,EACTN,IAAI,CAACO,GAAG,EACRP,IAAI,CAACQ,KAAK,CACb,CAAC;UACZqC,KAAK,EAAE;QACX,CAAC,EACD;UACIM,IAAI,EAAE,kBAAkB;UACxBC,IAAI,EAAE5B,aAAa;UACnB6B,OAAO,EAAEhE,cAAc,CAACE,MAAM;UAC9BmD,KAAK,EAAE,SAAS;UAChBG,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE;QACf,CAAC,EACD;UACIK,IAAI,EAAE,iBAAiB;UACvBC,IAAI,EAAE3B,YAAY;UAClB4B,OAAO,EAAEhE,cAAc,CAACG,KAAK;UAC7BkD,KAAK,EAAE,SAAS;UAChBG,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE;QACf,CAAC,EACD;UACIK,IAAI,EAAE,oBAAoB;UAC1BC,IAAI,EAAE1B,cAAc;UACpB2B,OAAO,EAAEhE,cAAc,CAACM,MAAM;UAC9B+C,KAAK,EAAE,SAAS;UAChBG,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE;QACf,CAAC,EACD;UACIK,IAAI,EAAE,wBAAwB;UAC9BC,IAAI,EAAEnC,eAAe;UACrBoC,OAAO,EAAEhE,cAAc,CAACI,KAAK;UAC7BoD,KAAK,EAAE,CAAC;UACRH,KAAK,EAAE,SAAS;UAChBI,SAAS,EAAE;QACf,CAAC,EACD;UACIK,IAAI,EAAE,wBAAwB;UAC9BC,IAAI,EAAElC,eAAe;UACrBmC,OAAO,EAAEhE,cAAc,CAACK,KAAK;UAC7BmD,KAAK,EAAE,CAAC;UACRH,KAAK,EAAE,SAAS;UAChBI,SAAS,EAAE;QACf,CAAC,EACD;UACIT,IAAI,EAAE,WAAW;UACjBc,IAAI,EAAE,gBAAgB;UACtBC,IAAI,EAAEjC,iBAAiB;UACvBkC,OAAO,EAAEhE,cAAc,CAACO,aAAa;UACrCiD,KAAK,EAAE,CAAC;UACRH,KAAK,EAAE,wBAAwB;UAAE;UACjCY,aAAa,EAAE,yBAAyB;UAAE;UAC1CC,OAAO,EAAE;YACLC,WAAW,EAAE;UACjB;QACJ,CAAC,EACD;UACIL,IAAI,EAAE,SAAS;UACfC,IAAI,EAAEzB,oBAAoB;UAC1BU,IAAI,EAAE,QAAQ;UACdQ,KAAK,EAAE,CAAC;UACRH,KAAK,EAAE;QACX,CAAC,CACJ;QACDa,OAAO,EAAE;UACLE,MAAM,EAAE,IAAI;UACZC,UAAU,EAAE;QAChB,CAAC;QACDC,MAAM,EAAE;UACJV,OAAO,EAAE;QACb,CAAC;QACDW,aAAa,EAAE;UACXC,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAClF,SAAS,EAAEE,YAAY,EAAEJ,SAAS,EAAEQ,SAAS,EAAEI,cAAc,CAAC,CAAC;EAEnE,MAAMyE,oBAAoB,GAAGC,IAAI,IAAI;IACjCzE,iBAAiB,CAAC0E,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACD,IAAI,GAAG,CAACC,IAAI,CAACD,IAAI;IAAE,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,oBACIxF,OAAA;IAAK0F,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B3F,OAAA;MAAA2F,QAAA,eACI3F,OAAA,CAACJ,eAAe;QAACgG,UAAU,EAAElG,UAAW;QAACmG,eAAe,EAAE,YAAa;QAACrF,OAAO,EAAEA;MAAQ;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC,eAENjG,OAAA;MAAK0F,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3B3F,OAAA;QAAQ0F,SAAS,EAAE,sBAAsBhF,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QAACwF,OAAO,EAAEA,CAAA,KAAMvF,YAAY,CAAC,MAAM,CAAE;QAAAgF,QAAA,EAAC;MAEtH;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjG,OAAA;QACI0F,SAAS,EAAE,wBAAwBhF,SAAS,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;QACjFwF,OAAO,EAAEA,CAAA,KAAMvF,YAAY,CAAC,aAAa,CAAE;QAAAgF,QAAA,EAC9C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjG,OAAA;QAAQkG,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAAC,IAAI,CAAE;QAAA8E,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,EAELrF,SAAS,iBACNZ,OAAA;MAAK0F,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAClB3F,OAAA;QAAA2F,QAAA,EAAI;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BjG,OAAA;QAAA2F,QAAA,gBACI3F,OAAA;UAAO8D,IAAI,EAAC,UAAU;UAACqC,OAAO,EAAErF,cAAc,CAACE,MAAO;UAACoF,QAAQ,EAAEA,CAAA,KAAMb,oBAAoB,CAAC,QAAQ;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,cAE7G;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRjG,OAAA;QAAA2F,QAAA,gBACI3F,OAAA;UAAO8D,IAAI,EAAC,UAAU;UAACqC,OAAO,EAAErF,cAAc,CAACG,KAAM;UAACmF,QAAQ,EAAEA,CAAA,KAAMb,oBAAoB,CAAC,OAAO;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,aAE3G;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRjG,OAAA;QAAA2F,QAAA,gBACI3F,OAAA;UAAO8D,IAAI,EAAC,UAAU;UAACqC,OAAO,EAAErF,cAAc,CAACI,KAAM;UAACkF,QAAQ,EAAEA,CAAA,KAAMb,oBAAoB,CAAC,OAAO;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,iBAE3G;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRjG,OAAA;QAAA2F,QAAA,gBACI3F,OAAA;UAAO8D,IAAI,EAAC,UAAU;UAACqC,OAAO,EAAErF,cAAc,CAACK,KAAM;UAACiF,QAAQ,EAAEA,CAAA,KAAMb,oBAAoB,CAAC,OAAO;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,iBAE3G;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRjG,OAAA;QAAA2F,QAAA,gBACI3F,OAAA;UAAO8D,IAAI,EAAC,UAAU;UAACqC,OAAO,EAAErF,cAAc,CAACM,MAAO;UAACgF,QAAQ,EAAEA,CAAA,KAAMb,oBAAoB,CAAC,QAAQ;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7G;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRjG,OAAA;QAAA2F,QAAA,gBACI3F,OAAA;UAAO8D,IAAI,EAAC,UAAU;UAACqC,OAAO,EAAErF,cAAc,CAACO,aAAc;UAAC+E,QAAQ,EAAEA,CAAA,KAAMb,oBAAoB,CAAC,eAAe;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kBAE3H;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRjG,OAAA;QAAQkG,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAAC,KAAK,CAAE;QAAA8E,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACR,eAEDjG,OAAA,CAACH,qBAAqB;MAACK,SAAS,EAAEA,SAAU;MAACmG,WAAW,EAAEhG;IAAa;MAAAyF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EjG,OAAA,CAACF,iBAAiB;MAACI,SAAS,EAAEA,SAAU;MAACoG,eAAe,EAAE/F;IAAgB;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEd;AAAC9F,EAAA,CA1RQF,eAAe;AAAAsG,EAAA,GAAftG,eAAe;AA4RxB,eAAeA,eAAe;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}