{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MACDAnalysis3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis3({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMACDHistogram = (macdData, period = 5) => {\n    if (macdData.length < period + 2) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = macdData.length - 1;\n\n    // 최근 period 기간 동안의 MACD와 Signal Line의 값 저장\n    const macdValues = [];\n    const signalValues = [];\n    const dates = [];\n    for (let i = lastIndex - period + 1; i <= lastIndex; i++) {\n      macdValues.push(macdData[i].MACD_Line);\n      signalValues.push(macdData[i].Signal_Line);\n      dates.push(i);\n    }\n\n    // MACD와 Signal Line의 기울기 계산 (선형 회귀)\n    const macdRegression = linearRegression(dates, macdValues);\n    const signalRegression = linearRegression(dates, signalValues);\n\n    // 두 선의 차이가 0이 되는 시점 계산\n    const a = macdRegression.slope - signalRegression.slope;\n    const b = macdRegression.intercept - signalRegression.intercept;\n    let daysToCrossover = null;\n    if (a !== 0) {\n      const t_crossover = -b / a;\n      const daysFromNow = t_crossover - dates[dates.length - 1];\n      if (daysFromNow >= 0) {\n        daysToCrossover = daysFromNow;\n      }\n    }\n    let result = '';\n    if (daysToCrossover !== null) {\n      result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 수 있습니다.<br/>`;\n    } else {\n      result += '현재 추세로는 가까운 시일 내에 크로스오버가 발생할 것으로 예상되지 않습니다.<br/>';\n    }\n\n    // Histogram의 0선 돌파 여부\n    const currentHistogram = macdData[lastIndex].Histogram;\n    const prevHistogram = macdData[lastIndex - 1].Histogram;\n    if (prevHistogram < 0 && currentHistogram > 0) {\n      result += '매수 모멘텀이 강화되고 있습니다. Histogram이 0선을 상향 돌파했습니다.<br/>';\n    } else if (prevHistogram > 0 && currentHistogram < 0) {\n      result += '매도 모멘텀이 강화되고 있습니다. Histogram이 0선을 하향 돌파했습니다.<br/>';\n    } else {\n      result += 'Histogram이 0선 근처에서 움직이고 있습니다.<br/>';\n    }\n\n    // Histogram 추세에 따른 모멘텀 해석\n    if (currentHistogram > prevHistogram) {\n      result += 'Histogram이 증가하고 있어 모멘텀이 강화되고 있습니다.<br/>';\n    } else if (currentHistogram < prevHistogram) {\n      result += 'Histogram이 감소하고 있어 모멘텀이 약화되고 있습니다.<br/>';\n    }\n    return result;\n  };\n\n  // 선형 회귀 함수\n  const linearRegression = (x, y) => {\n    const n = x.length;\n    const sumX = x.reduce((a, b) => a + b, 0);\n    const sumY = y.reduce((a, b) => a + b, 0);\n    const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumX2 = x.reduce((sum, xi) => sum + xi * xi, 0);\n    const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n    const intercept = (sumY - slope * sumX) / n;\n    return {\n      slope,\n      intercept\n    };\n  };\n  useEffect(() => {\n    if (macdData.length > 0) {\n      const result = analyzeMACDHistogram(macdData);\n      setAnalysisResult(result);\n    }\n  }, [macdData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MACD Histogram \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis3, \"27DMovUClVI7Ji8nju6vqnSpMCo=\");\n_c = MACDAnalysis3;\nexport default MACDAnalysis3;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis3\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","jsxDEV","_jsxDEV","MACDAnalysis3","stockCode","_s","macdData","setMACDData","analysisResult","setAnalysisResult","analyzeMACDHistogram","period","length","lastIndex","macdValues","signalValues","dates","i","push","MACD_Line","Signal_Line","macdRegression","linearRegression","signalRegression","a","slope","b","intercept","daysToCrossover","t_crossover","daysFromNow","result","toFixed","currentHistogram","Histogram","prevHistogram","x","y","n","sumX","reduce","sumY","sumXY","sum","xi","sumX2","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MACDAnalysis3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\r\n\r\nfunction MACDAnalysis3({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMACDHistogram = (macdData, period = 5) => {\r\n        if (macdData.length < period + 2) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = macdData.length - 1;\r\n\r\n        // 최근 period 기간 동안의 MACD와 Signal Line의 값 저장\r\n        const macdValues = [];\r\n        const signalValues = [];\r\n        const dates = [];\r\n\r\n        for (let i = lastIndex - period + 1; i <= lastIndex; i++) {\r\n            macdValues.push(macdData[i].MACD_Line);\r\n            signalValues.push(macdData[i].Signal_Line);\r\n            dates.push(i);\r\n        }\r\n\r\n        // MACD와 Signal Line의 기울기 계산 (선형 회귀)\r\n        const macdRegression = linearRegression(dates, macdValues);\r\n        const signalRegression = linearRegression(dates, signalValues);\r\n\r\n        // 두 선의 차이가 0이 되는 시점 계산\r\n        const a = macdRegression.slope - signalRegression.slope;\r\n        const b = macdRegression.intercept - signalRegression.intercept;\r\n\r\n        let daysToCrossover = null;\r\n\r\n        if (a !== 0) {\r\n            const t_crossover = -b / a;\r\n            const daysFromNow = t_crossover - dates[dates.length - 1];\r\n            if (daysFromNow >= 0) {\r\n                daysToCrossover = daysFromNow;\r\n            }\r\n        }\r\n\r\n        let result = '';\r\n\r\n        if (daysToCrossover !== null) {\r\n            result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 수 있습니다.<br/>`;\r\n        } else {\r\n            result += '현재 추세로는 가까운 시일 내에 크로스오버가 발생할 것으로 예상되지 않습니다.<br/>';\r\n        }\r\n\r\n        // Histogram의 0선 돌파 여부\r\n        const currentHistogram = macdData[lastIndex].Histogram;\r\n        const prevHistogram = macdData[lastIndex - 1].Histogram;\r\n\r\n        if (prevHistogram < 0 && currentHistogram > 0) {\r\n            result += '매수 모멘텀이 강화되고 있습니다. Histogram이 0선을 상향 돌파했습니다.<br/>';\r\n        } else if (prevHistogram > 0 && currentHistogram < 0) {\r\n            result += '매도 모멘텀이 강화되고 있습니다. Histogram이 0선을 하향 돌파했습니다.<br/>';\r\n        } else {\r\n            result += 'Histogram이 0선 근처에서 움직이고 있습니다.<br/>';\r\n        }\r\n\r\n        // Histogram 추세에 따른 모멘텀 해석\r\n        if (currentHistogram > prevHistogram) {\r\n            result += 'Histogram이 증가하고 있어 모멘텀이 강화되고 있습니다.<br/>';\r\n        } else if (currentHistogram < prevHistogram) {\r\n            result += 'Histogram이 감소하고 있어 모멘텀이 약화되고 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    // 선형 회귀 함수\r\n    const linearRegression = (x, y) => {\r\n        const n = x.length;\r\n        const sumX = x.reduce((a, b) => a + b, 0);\r\n        const sumY = y.reduce((a, b) => a + b, 0);\r\n        const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i], 0);\r\n        const sumX2 = x.reduce((sum, xi) => sum + xi * xi, 0);\r\n\r\n        const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\r\n        const intercept = (sumY - slope * sumX) / n;\r\n\r\n        return { slope, intercept };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0) {\r\n            const result = analyzeMACDHistogram(macdData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [macdData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <h4>MACD Histogram 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}