{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\ADXCalculations1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ADXCalculations1({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [adxData, setADXData] = useState([]);\n\n  // 지수 이동 평균(EMA) 계산 함수\n  const calculateEMA = (values, period) => {\n    const k = 2 / (period + 1);\n    return values.reduce((prev, curr, index) => {\n      if (index === 0) return curr;\n      return curr * k + prev * (1 - k);\n    });\n  };\n  const calculateTrendStrengthScore = (adxData, period = 14) => {\n    if (adxData.length < period) {\n      return null;\n    }\n    const adxValues = adxData.map(data => data.ADX);\n    const recentADX = adxValues.slice(-period);\n\n    // 최근 period 기간의 ADX 지수 이동 평균 계산\n    const avgADX = calculateEMA(recentADX, period);\n    let score = 5; // 기본 보통\n\n    if (avgADX >= 25) {\n      score = 5; // 추세는 강하나 방향성은 추가 분석 필요\n    } else if (avgADX <= 20) {\n      score = 5; // 추세 약함\n    } else {\n      score = 5; // 보통\n    }\n    return {\n      score,\n      avgADX\n    };\n  };\n  useEffect(() => {\n    if (adxData.length > 0) {\n      const result = calculateTrendStrengthScore(adxData);\n      if (result !== null && onScoreCalculated) {\n        onScoreCalculated(result);\n      }\n    }\n  }, [adxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FetchADXData, {\n      stockCode: stockCode,\n      onADXFetch: setADXData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(ADXCalculations1, \"r4FE7Ywn0QsXNQ9IphxNtY/DUFI=\");\n_c = ADXCalculations1;\nexport default ADXCalculations1;\nvar _c;\n$RefreshReg$(_c, \"ADXCalculations1\");","map":{"version":3,"names":["React","useState","useEffect","FetchADXData","jsxDEV","_jsxDEV","ADXCalculations1","stockCode","onScoreCalculated","_s","adxData","setADXData","calculateEMA","values","period","k","reduce","prev","curr","index","calculateTrendStrengthScore","length","adxValues","map","data","ADX","recentADX","slice","avgADX","score","result","children","onADXFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/ADXCalculations1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\r\n\r\nfunction ADXCalculations1({ stockCode, onScoreCalculated }) {\r\n    const [adxData, setADXData] = useState([]);\r\n\r\n    // 지수 이동 평균(EMA) 계산 함수\r\n    const calculateEMA = (values, period) => {\r\n        const k = 2 / (period + 1);\r\n        return values.reduce((prev, curr, index) => {\r\n            if (index === 0) return curr;\r\n            return curr * k + prev * (1 - k);\r\n        });\r\n    };\r\n\r\n    const calculateTrendStrengthScore = (adxData, period = 14) => {\r\n        if (adxData.length < period) {\r\n            return null;\r\n        }\r\n\r\n        const adxValues = adxData.map(data => data.ADX);\r\n        const recentADX = adxValues.slice(-period);\r\n\r\n        // 최근 period 기간의 ADX 지수 이동 평균 계산\r\n        const avgADX = calculateEMA(recentADX, period);\r\n\r\n        let score = 5; // 기본 보통\r\n\r\n        if (avgADX >= 25) {\r\n            score = 5; // 추세는 강하나 방향성은 추가 분석 필요\r\n        } else if (avgADX <= 20) {\r\n            score = 5; // 추세 약함\r\n        } else {\r\n            score = 5; // 보통\r\n        }\r\n\r\n        return {score, avgADX};\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (adxData.length > 0) {\r\n            const result = calculateTrendStrengthScore(adxData);\r\n            if (result !== null && onScoreCalculated) {\r\n                onScoreCalculated(result);\r\n            }\r\n        }\r\n    }, [adxData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchADXData stockCode={stockCode} onADXFetch={setADXData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ADXCalculations1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,gBAAgBA,CAAC;EAAEC,SAAS;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMW,YAAY,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,MAAMC,CAAC,GAAG,CAAC,IAAID,MAAM,GAAG,CAAC,CAAC;IAC1B,OAAOD,MAAM,CAACG,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,EAAEC,KAAK,KAAK;MACxC,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAOD,IAAI;MAC5B,OAAOA,IAAI,GAAGH,CAAC,GAAGE,IAAI,IAAI,CAAC,GAAGF,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,2BAA2B,GAAGA,CAACV,OAAO,EAAEI,MAAM,GAAG,EAAE,KAAK;IAC1D,IAAIJ,OAAO,CAACW,MAAM,GAAGP,MAAM,EAAE;MACzB,OAAO,IAAI;IACf;IAEA,MAAMQ,SAAS,GAAGZ,OAAO,CAACa,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,CAAC;IAC/C,MAAMC,SAAS,GAAGJ,SAAS,CAACK,KAAK,CAAC,CAACb,MAAM,CAAC;;IAE1C;IACA,MAAMc,MAAM,GAAGhB,YAAY,CAACc,SAAS,EAAEZ,MAAM,CAAC;IAE9C,IAAIe,KAAK,GAAG,CAAC,CAAC,CAAC;;IAEf,IAAID,MAAM,IAAI,EAAE,EAAE;MACdC,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,CAAC,MAAM,IAAID,MAAM,IAAI,EAAE,EAAE;MACrBC,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,CAAC,MAAM;MACHA,KAAK,GAAG,CAAC,CAAC,CAAC;IACf;IAEA,OAAO;MAACA,KAAK;MAAED;IAAM,CAAC;EAC1B,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,IAAIQ,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMS,MAAM,GAAGV,2BAA2B,CAACV,OAAO,CAAC;MACnD,IAAIoB,MAAM,KAAK,IAAI,IAAItB,iBAAiB,EAAE;QACtCA,iBAAiB,CAACsB,MAAM,CAAC;MAC7B;IACJ;EACJ,CAAC,EAAE,CAACpB,OAAO,CAAC,CAAC;EAEb,oBACIL,OAAA;IAAA0B,QAAA,eACI1B,OAAA,CAACF,YAAY;MAACI,SAAS,EAAEA,SAAU;MAACyB,UAAU,EAAErB;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd;AAAC3B,EAAA,CAlDQH,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAoDzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}