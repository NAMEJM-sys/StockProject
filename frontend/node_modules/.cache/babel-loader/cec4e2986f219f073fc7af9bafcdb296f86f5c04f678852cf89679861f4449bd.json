{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\MACDAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FetchMACDData from \"./FetchMACDData\";\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [priceData, setPriceData] = useState([]);\n  const [analysisText, setAnalysisText] = useState(\"\");\n  useEffect(() => {\n    if (macdData.length > 0 && priceData.length > 0) {\n      const analysis = performDivergenceAnalysis();\n      setAnalysisText(analysis);\n    }\n  }, [macdData, priceData]);\n  const performDivergenceAnalysis = () => {\n    const period = 10;\n    const firstLow = findLowPoint(priceData, period, priceData.length - 1);\n    if (firstLow) {\n      const secondLow = findLowPoint(priceData, period, priceData.length - 11);\n      console.log(\"Check Close Data:\", firstLow, secondLow);\n      console.log(\"Check Close Data:\", firstLow.price, secondLow.price);\n      if (secondLow) {\n        const firstMACDLow = macdData[firstLow.index].MACD;\n        const secondMACDLow = macdData[secondLow.index].MACD;\n        console.log(\"Check Close Data:\", firstMACDLow, secondMACDLow);\n        if (firstLow.price < secondLow.price && firstMACDLow > secondMACDLow) {\n          return `상승 다이버전스 발생: <br /><br />첫 번째 저점(${secondLow.date}, ${secondLow.price}원)<br /> 두 번째 저점(${firstLow.date})까지. 이는 강력한 매수 신호일 수 있습니다.`;\n        } else if (firstLow.price > secondLow.price && firstMACDLow < secondMACDLow) {\n          return `하락 다이버전스 발생: <br /><br />첫 번째 저점(${secondLow.date}, ${secondLow.price}원) \n                            두 번째 저점(${firstLow.date}, ${firstLow.price}원)까지. 이는 강력한 매도 신호일 수 있습니다.`;\n        } else {\n          return `다이버전스가 발생하지 않았습니다. 현재의 흐름은 안정적일 수 있습니다.`;\n        }\n      }\n    }\n    return `충분한 데이터가 없어 다이버전스를 계산할 수 없습니다.`;\n  };\n  const findLowPoint = (data, period, startIndex) => {\n    let lowest = {\n      price: Infinity,\n      index: -1,\n      date: \"\"\n    };\n    let currentPeriodEnd = startIndex;\n    let currentPeriodStart = Math.max(startIndex - period + 1, 0); // 경계 처리\n\n    for (let i = currentPeriodEnd; i >= currentPeriodStart && i >= 2; i--) {\n      const a = data[i - 2];\n      const b = data[i - 1];\n      const c = data[i];\n\n      // 저점 찾기: a > b < c 또는 a >= b <= c 조건\n      if (a.close > b.close && b.close < c.close || a.close >= b.close && b.close <= c.close) {\n        let validLow = true;\n\n        // 유효한 저점이라면 가장 낮은 가격을 업데이트\n        if (b.close < lowest.price) {\n          lowest = {\n            price: b.close,\n            index: i - 1,\n            date: b.date\n          };\n        }\n      }\n    }\n    return lowest.index !== -1 ? lowest : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setPriceData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"analysis-text\",\n      children: \"Divergence \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisText.replace(/\\n/g, '<br />')\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis2, \"IBe/grYsA7qaJUzsKJKvXlfBCSk=\");\n_c = MACDAnalysis2;\nexport default MACDAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis2\");","map":{"version":3,"names":["React","useEffect","useState","FetchMACDData","FetchStockDataForCode","jsxDEV","_jsxDEV","MACDAnalysis2","stockCode","_s","macdData","setMACDData","priceData","setPriceData","analysisText","setAnalysisText","length","analysis","performDivergenceAnalysis","period","firstLow","findLowPoint","secondLow","console","log","price","firstMACDLow","index","MACD","secondMACDLow","date","data","startIndex","lowest","Infinity","currentPeriodEnd","currentPeriodStart","Math","max","i","a","b","c","close","validLow","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","className","dangerouslySetInnerHTML","__html","replace","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/MACDAnalysis2.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FetchMACDData from \"./FetchMACDData\";\r\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\r\n\r\nfunction MACDAnalysis2({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [priceData, setPriceData] = useState([]);\r\n    const [analysisText, setAnalysisText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0 && priceData.length > 0) {\r\n            const analysis = performDivergenceAnalysis();\r\n            setAnalysisText(analysis);\r\n        }\r\n    }, [macdData, priceData]);\r\n\r\n    const performDivergenceAnalysis = () => {\r\n        const period = 10;\r\n\r\n        const firstLow = findLowPoint(priceData, period, priceData.length - 1);\r\n        if (firstLow) {\r\n            const secondLow = findLowPoint(priceData, period, priceData.length - 11);\r\n\r\n            console.log(\"Check Close Data:\", firstLow, secondLow);\r\n            console.log(\"Check Close Data:\", firstLow.price, secondLow.price);\r\n\r\n\r\n            if (secondLow) {\r\n                const firstMACDLow = macdData[firstLow.index].MACD;\r\n                const secondMACDLow = macdData[secondLow.index].MACD;\r\n\r\n                console.log(\"Check Close Data:\", firstMACDLow, secondMACDLow)\r\n\r\n                if (firstLow.price < secondLow.price && firstMACDLow > secondMACDLow) {\r\n                    return `상승 다이버전스 발생: <br /><br />첫 번째 저점(${secondLow.date}, ${secondLow.price}원)<br /> 두 번째 저점(${firstLow.date})까지. 이는 강력한 매수 신호일 수 있습니다.`;\r\n                }\r\n                else if (firstLow.price > secondLow.price && firstMACDLow < secondMACDLow) {\r\n                    return `하락 다이버전스 발생: <br /><br />첫 번째 저점(${secondLow.date}, ${secondLow.price}원) \r\n                            두 번째 저점(${firstLow.date}, ${firstLow.price}원)까지. 이는 강력한 매도 신호일 수 있습니다.`;\r\n                }\r\n                else {\r\n                    return `다이버전스가 발생하지 않았습니다. 현재의 흐름은 안정적일 수 있습니다.`;\r\n                }\r\n            }\r\n        }\r\n        return `충분한 데이터가 없어 다이버전스를 계산할 수 없습니다.`;\r\n    };\r\n\r\n    const findLowPoint = (data, period, startIndex) => {\r\n        let lowest = { price: Infinity, index: -1, date: \"\" };\r\n\r\n        let currentPeriodEnd = startIndex;\r\n        let currentPeriodStart = Math.max(startIndex - period + 1, 0);  // 경계 처리\r\n\r\n        for (let i = currentPeriodEnd; i >= currentPeriodStart && i >= 2; i--) {\r\n            const a = data[i - 2];\r\n            const b = data[i - 1];\r\n            const c = data[i];\r\n\r\n            // 저점 찾기: a > b < c 또는 a >= b <= c 조건\r\n            if ((a.close > b.close && b.close < c.close) || (a.close >= b.close && b.close <= c.close)) {\r\n                let validLow = true;\r\n\r\n                // 유효한 저점이라면 가장 낮은 가격을 업데이트\r\n                if (b.close < lowest.price) {\r\n                    lowest = { price: b.close, index: i - 1, date: b.date };\r\n                }\r\n            }\r\n        }\r\n\r\n        return lowest.index !== -1 ? lowest : null;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData}/>\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setPriceData}/>\r\n            <h4 className=\"analysis-text\">Divergence 분석</h4>\r\n            <p dangerouslySetInnerHTML={{__html: analysisText.replace(/\\n/g, '<br />')}}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}