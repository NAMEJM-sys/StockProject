{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\MACDAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FetchMACDData from \"./FetchMACDData\";\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [priceData, setPriceData] = useState([]);\n  const [analysisText, setAnalysisText] = useState(\"\");\n  useEffect(() => {\n    if (macdData.length > 0 && priceData.length > 0) {\n      const analysis = performDivergenceAnalysis();\n      setAnalysisText(analysis);\n    }\n  }, [macdData, priceData]);\n  const performDivergenceAnalysis = () => {\n    const period = 10; // 영업일 기준 10일\n\n    const firstLow = findLowPoint(priceData, period, priceData.length - 1);\n    const secondLow = firstLow ? findLowPoint(priceData, period, firstLow.index - 1) : null;\n    if (firstLow && secondLow) {\n      const firstMACDLow = macdData[firstLow.index].MACD;\n      const secondMACDLow = macdData[secondLow.index].MACD;\n      console.log(\"Check2: \", firstMACDLow);\n      if (firstLow.price > secondLow.price && firstMACDLow < secondMACDLow) {\n        return `상승 다이버전스 발생: 첫 번째 저점(${secondLow.date})부터 두 번째 저점(${firstLow.date})까지. 이는 강력한 매수 신호일 수 있습니다.`;\n      } else if (firstLow.price < secondLow.price && firstMACDLow > secondMACDLow) {\n        return `하락 다이버전스 발생: 첫 번째 고점(${secondLow.date})부터 두 번째 고점(${firstLow.date})까지. 이는 강력한 매도 신호일 수 있습니다.`;\n      } else {\n        return `다이버전스가 발생하지 않았습니다. 현재의 흐름은 안정적일 수 있습니다.`;\n      }\n    } else {\n      return `충분한 데이터가 없어 다이버전스를 계산할 수 없습니다.`;\n    }\n  };\n  const findLowPoint = (data, period, startIndex) => {\n    let lowest = {\n      price: Infinity,\n      index: -1,\n      date: \"\"\n    };\n    let currentPeriodEnd = startIndex;\n    let currentPeriodStart = startIndex - period + 1;\n    for (let i = currentPeriodEnd; i >= currentPeriodStart && i >= 2; i--) {\n      const a = data[i - 2];\n      const b = data[i - 1];\n      const c = data[i];\n\n      // a > b < c 조건 확인\n      if (a.close > b.close && b.close < c.close) {\n        let validLow = true;\n\n        // a >= b 일 경우, a 이전 값들과 비교하여 유효성 확인\n        if (a.close >= b.close) {\n          for (let j = i - 3; j >= 0; j--) {\n            if (data[j].close > a.close) {\n              validLow = false;\n              break;\n            }\n          }\n        }\n\n        // b <= c 일 경우, c 이후 값들과 비교하여 유효성 확인\n        if (c.close <= b.close) {\n          for (let j = i + 1; j < data.length; j++) {\n            if (data[j].close > c.close) {\n              validLow = false;\n              break;\n            }\n          }\n        }\n\n        // 유효한 저점이라면 가장 낮은 가격을 업데이트\n        if (validLow && b.close < lowest.price) {\n          lowest = {\n            price: b.close,\n            index: i - 1,\n            date: b.date\n          };\n        }\n      }\n    }\n    return lowest.index !== -1 ? lowest : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setPriceData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"analysis-text\",\n      children: \"Divergence \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis2, \"IBe/grYsA7qaJUzsKJKvXlfBCSk=\");\n_c = MACDAnalysis2;\nexport default MACDAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis2\");","map":{"version":3,"names":["React","useEffect","useState","FetchMACDData","FetchStockDataForCode","jsxDEV","_jsxDEV","MACDAnalysis2","stockCode","_s","macdData","setMACDData","priceData","setPriceData","analysisText","setAnalysisText","length","analysis","performDivergenceAnalysis","period","firstLow","findLowPoint","secondLow","index","firstMACDLow","MACD","secondMACDLow","console","log","price","date","data","startIndex","lowest","Infinity","currentPeriodEnd","currentPeriodStart","i","a","b","c","close","validLow","j","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","className","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/MACDAnalysis2.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FetchMACDData from \"./FetchMACDData\";\r\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\r\n\r\nfunction MACDAnalysis2({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [priceData, setPriceData] = useState([]);\r\n    const [analysisText, setAnalysisText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0 && priceData.length > 0) {\r\n            const analysis = performDivergenceAnalysis();\r\n            setAnalysisText(analysis);\r\n        }\r\n    }, [macdData, priceData]);\r\n\r\n    const performDivergenceAnalysis = () => {\r\n        const period = 10; // 영업일 기준 10일\r\n\r\n        const firstLow = findLowPoint(priceData, period, priceData.length - 1);\r\n        const secondLow = firstLow ? findLowPoint(priceData, period, firstLow.index - 1) : null;\r\n\r\n        if (firstLow && secondLow) {\r\n            const firstMACDLow = macdData[firstLow.index].MACD;\r\n            const secondMACDLow = macdData[secondLow.index].MACD;\r\n            console.log(\"Check2: \",firstMACDLow)\r\n\r\n\r\n            if (firstLow.price > secondLow.price && firstMACDLow < secondMACDLow) {\r\n                return `상승 다이버전스 발생: 첫 번째 저점(${secondLow.date})부터 두 번째 저점(${firstLow.date})까지. 이는 강력한 매수 신호일 수 있습니다.`;\r\n            } else if (firstLow.price < secondLow.price && firstMACDLow > secondMACDLow) {\r\n                return `하락 다이버전스 발생: 첫 번째 고점(${secondLow.date})부터 두 번째 고점(${firstLow.date})까지. 이는 강력한 매도 신호일 수 있습니다.`;\r\n            } else {\r\n                return `다이버전스가 발생하지 않았습니다. 현재의 흐름은 안정적일 수 있습니다.`;\r\n            }\r\n        } else {\r\n            return `충분한 데이터가 없어 다이버전스를 계산할 수 없습니다.`;\r\n        }\r\n    };\r\n\r\n    const findLowPoint = (data, period, startIndex) => {\r\n        let lowest = { price: Infinity, index: -1, date: \"\" };\r\n\r\n        let currentPeriodEnd = startIndex;\r\n        let currentPeriodStart = startIndex - period + 1;\r\n\r\n        for (let i = currentPeriodEnd; i >= currentPeriodStart && i >= 2; i--) {\r\n            const a = data[i - 2];\r\n            const b = data[i - 1];\r\n            const c = data[i];\r\n\r\n            // a > b < c 조건 확인\r\n            if (a.close > b.close && b.close < c.close) {\r\n                let validLow = true;\r\n\r\n                // a >= b 일 경우, a 이전 값들과 비교하여 유효성 확인\r\n                if (a.close >= b.close) {\r\n                    for (let j = i - 3; j >= 0; j--) {\r\n                        if (data[j].close > a.close) {\r\n                            validLow = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // b <= c 일 경우, c 이후 값들과 비교하여 유효성 확인\r\n                if (c.close <= b.close) {\r\n                    for (let j = i + 1; j < data.length; j++) {\r\n                        if (data[j].close > c.close) {\r\n                            validLow = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 유효한 저점이라면 가장 낮은 가격을 업데이트\r\n                if (validLow && b.close < lowest.price) {\r\n                    lowest = { price: b.close, index: i - 1, date: b.date };\r\n                }\r\n            }\r\n        }\r\n\r\n        return lowest.index !== -1 ? lowest : null;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setPriceData} />\r\n            <h4 className=\"analysis-text\">Divergence 분석</h4>\r\n            <p>{analysisText}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}