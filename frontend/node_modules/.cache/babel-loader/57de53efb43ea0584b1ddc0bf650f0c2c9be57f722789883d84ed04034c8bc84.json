{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MACDAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMACDCrossovers = (macdData, period = 14) => {\n    if (macdData.length < period) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = macdData.length - 1;\n    const currentMACD = macdData[lastIndex].MACD_Line;\n    const currentSignal = macdData[lastIndex].Signal_Line;\n    const currentHistogram = macdData[lastIndex].Histogram;\n    const prevMACD = macdData[lastIndex - 1].MACD_Line;\n    const prevSignal = macdData[lastIndex - 1].Signal_Line;\n    let result = `<strong>현재 MACD</strong><br/>`;\n    result += `ㆍMACD: ${currentMACD.toFixed(2)}<br/>`;\n    result += `ㆍSignal: ${currentSignal.toFixed(2)}<br/>`;\n    result += `ㆍHistogram: ${currentHistogram.toFixed(2)}<br/><br/>`;\n\n    // 1. 14일간의 MACD 추세 분석\n    const macdTrendData = macdData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.MACD_Line);\n    const totalMACDChange = macdTrendData[macdTrendData.length - 1] - macdTrendData[0];\n    const macdTrendDirection = totalMACDChange > 0 ? '상승' : '하락';\n\n    // 2. MACD Line과 Signal Line의 크로스 분석\n    if (prevMACD < prevSignal && currentMACD > currentSignal) {\n      result += '강한 매수 신호: MACD Line이 Signal Line을 아래에서 위로 교차했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/>';\n    } else if (prevMACD > prevSignal && currentMACD < currentSignal) {\n      result += '강한 매도 신호: MACD Line이 Signal Line을 위에서 아래로 교차했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/>';\n    } else {\n      result += '현재 MACD와 Signal Line 사이에 특별한 h교차 신호가 없습니다.<br/><br/>';\n    }\n\n    // 3. Histogram 분석 (추세 강화/약화)\n    const histogramTrend = macdData.slice(lastIndex - period + 1, lastIndex + 1).map(day => day.Histogram);\n    const histogramTrendDirection = histogramTrend[histogramTrend.length - 1] - histogramTrend[0];\n    if (histogramTrendDirection > 0) {\n      result += 'Histogram이 지속적으로 증가하고 있습니다. 모멘텀이 강화되고 있습니다.<br/>';\n    } else if (histogramTrendDirection < 0) {\n      result += 'Histogram이 지속적으로 감소하고 있습니다. 모멘텀이 약화되고 있습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (macdData.length > 0) {\n      const result = analyzeMACDCrossovers(macdData);\n      setAnalysisResult(result);\n    }\n  }, [macdData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MACD \\uD06C\\uB85C\\uC2A4\\uC624\\uBC84 \\uBC0F \\uCD94\\uC138 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis1, \"27DMovUClVI7Ji8nju6vqnSpMCo=\");\n_c = MACDAnalysis1;\nexport default MACDAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","jsxDEV","_jsxDEV","MACDAnalysis1","stockCode","_s","macdData","setMACDData","analysisResult","setAnalysisResult","analyzeMACDCrossovers","period","length","lastIndex","currentMACD","MACD_Line","currentSignal","Signal_Line","currentHistogram","Histogram","prevMACD","prevSignal","result","toFixed","macdTrendData","slice","map","data","totalMACDChange","macdTrendDirection","histogramTrend","day","histogramTrendDirection","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MACDAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\r\n\r\nfunction MACDAnalysis1({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMACDCrossovers = (macdData, period = 14) => {\r\n        if (macdData.length < period) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = macdData.length - 1;\r\n        const currentMACD = macdData[lastIndex].MACD_Line;\r\n        const currentSignal = macdData[lastIndex].Signal_Line;\r\n        const currentHistogram = macdData[lastIndex].Histogram;\r\n        const prevMACD = macdData[lastIndex - 1].MACD_Line;\r\n        const prevSignal = macdData[lastIndex - 1].Signal_Line;\r\n\r\n        let result = `<strong>현재 MACD</strong><br/>`;\r\n        result += `ㆍMACD: ${currentMACD.toFixed(2)}<br/>`;\r\n        result += `ㆍSignal: ${currentSignal.toFixed(2)}<br/>`;\r\n        result += `ㆍHistogram: ${currentHistogram.toFixed(2)}<br/><br/>`;\r\n\r\n        // 1. 14일간의 MACD 추세 분석\r\n        const macdTrendData = macdData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.MACD_Line);\r\n        const totalMACDChange = macdTrendData[macdTrendData.length - 1] - macdTrendData[0];\r\n        const macdTrendDirection = totalMACDChange > 0 ? '상승' : '하락';\r\n\r\n        // 2. MACD Line과 Signal Line의 크로스 분석\r\n        if (prevMACD < prevSignal && currentMACD > currentSignal) {\r\n            result += '강한 매수 신호: MACD Line이 Signal Line을 아래에서 위로 교차했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/>';\r\n        } else if (prevMACD > prevSignal && currentMACD < currentSignal) {\r\n            result += '강한 매도 신호: MACD Line이 Signal Line을 위에서 아래로 교차했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/>';\r\n        } else {\r\n            result += '현재 MACD와 Signal Line 사이에 특별한 h교차 신호가 없습니다.<br/><br/>';\r\n        }\r\n\r\n        // 3. Histogram 분석 (추세 강화/약화)\r\n        const histogramTrend = macdData.slice(lastIndex - period + 1, lastIndex + 1).map(day => day.Histogram);\r\n        const histogramTrendDirection = histogramTrend[histogramTrend.length - 1] - histogramTrend[0];\r\n\r\n        if (histogramTrendDirection > 0) {\r\n            result += 'Histogram이 지속적으로 증가하고 있습니다. 모멘텀이 강화되고 있습니다.<br/>';\r\n        } else if (histogramTrendDirection < 0) {\r\n            result += 'Histogram이 지속적으로 감소하고 있습니다. 모멘텀이 약화되고 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0) {\r\n            const result = analyzeMACDCrossovers(macdData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [macdData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <h4>MACD 크로스오버 및 추세 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}