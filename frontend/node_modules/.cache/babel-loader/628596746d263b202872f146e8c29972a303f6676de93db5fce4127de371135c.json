{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MFIAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFIAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMFITrend = (mfiData, stockData, period = 14) => {\n    var _mfiData, _stockData;\n    let lastIndex = mfiData.length - 1;\n    if (lastIndex < period || stockData.length < period) return '데이터가 충분하지 않습니다.';\n\n    // 현재 및 이전 MFI 값들\n    const currentMFI = mfiData[lastIndex].MFI;\n    const prevMFI = (_mfiData = mfiData[lastIndex - 1]) === null || _mfiData === void 0 ? void 0 : _mfiData.MFI;\n    const currentPrice = stockData[lastIndex].close;\n    const prevPrice = (_stockData = stockData[lastIndex - 1]) === null || _stockData === void 0 ? void 0 : _stockData.close;\n    const currentMACrossover = mfiData[lastIndex].MFI_MA_Crossover;\n\n    // MFI 추세 분석\n    const mfiTrend = currentMFI - prevMFI;\n    const mfiDirection = mfiTrend > 0 ? '상승' : '하락';\n\n    // 가격 추세 분석\n    const priceTrend = currentPrice - prevPrice;\n    const priceDirection = priceTrend > 0 ? '상승' : '하락';\n    let result = '';\n    result += `<strong>현재 MFI:</strong> ${currentMFI.toFixed(2)}점<br/>`;\n    result += `MFI가 이전 기간 대비 ${mfiDirection} 중입니다.<br/><br/>`;\n\n    // MFI 과매수/과매도 상태 분석\n    if (currentMFI > 80) {\n      result += `현재 MFI가 80을 초과하여 과매수 구간에 있습니다. 조정 가능성이 있습니다.<br/>`;\n    } else if (currentMFI < 20) {\n      result += `현재 MFI가 20 미만으로 과매도 구간에 있습니다. 반등 가능성이 있습니다.<br/>`;\n    } else {\n      result += `현재 MFI는 중립 상태입니다.<br/>`;\n    }\n\n    // MFI 이동평균 교차 신호\n    if (currentMACrossover === 1) {\n      result += `MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 신호일 수 있습니다.<br/>`;\n    } else if (currentMACrossover === -1) {\n      result += `MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 신호일 수 있습니다.<br/>`;\n    } else {\n      result += `MFI 이동평균에 특별한 교차 신호는 없습니다.<br/>`;\n    }\n\n    // 가격과 MFI 추세 비교\n    result += `<br/>가격은 ${priceDirection} 중입니다. MFI 추세와 가격 추세가 일치하는지 확인하세요.<br/>`;\n    return result;\n  };\n  useEffect(() => {\n    if (mfiData.length > 0 && stockData.length > 0) {\n      const result = analyzeMFITrend(mfiData, stockData);\n      setAnalysisResult(result);\n    }\n  }, [mfiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MFI \\uD750\\uB984 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(MFIAnalysis1, \"7bN3uFgPvWhQU38aocWDCHVSLbA=\");\n_c = MFIAnalysis1;\nexport default MFIAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"MFIAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","FetchStockDataForCode","jsxDEV","_jsxDEV","MFIAnalysis1","stockCode","_s","mfiData","setMFIData","stockData","setStockData","analysisResult","setAnalysisResult","analyzeMFITrend","period","_mfiData","_stockData","lastIndex","length","currentMFI","MFI","prevMFI","currentPrice","close","prevPrice","currentMACrossover","MFI_MA_Crossover","mfiTrend","mfiDirection","priceTrend","priceDirection","result","toFixed","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MFIAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nfunction MFIAnalysis1({ stockCode }) {\r\n    const [mfiData, setMFIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMFITrend = (mfiData, stockData, period = 14) => {\r\n        let lastIndex = mfiData.length - 1;\r\n        if (lastIndex < period || stockData.length < period) return '데이터가 충분하지 않습니다.';\r\n\r\n        // 현재 및 이전 MFI 값들\r\n        const currentMFI = mfiData[lastIndex].MFI;\r\n        const prevMFI = mfiData[lastIndex - 1]?.MFI;\r\n        const currentPrice = stockData[lastIndex].close;\r\n        const prevPrice = stockData[lastIndex - 1]?.close;\r\n\r\n        const currentMACrossover = mfiData[lastIndex].MFI_MA_Crossover;\r\n\r\n        // MFI 추세 분석\r\n        const mfiTrend = currentMFI - prevMFI;\r\n        const mfiDirection = mfiTrend > 0 ? '상승' : '하락';\r\n\r\n        // 가격 추세 분석\r\n        const priceTrend = currentPrice - prevPrice;\r\n        const priceDirection = priceTrend > 0 ? '상승' : '하락';\r\n\r\n        let result = '';\r\n        result += `<strong>현재 MFI:</strong> ${currentMFI.toFixed(2)}점<br/>`;\r\n        result += `MFI가 이전 기간 대비 ${mfiDirection} 중입니다.<br/><br/>`;\r\n\r\n        // MFI 과매수/과매도 상태 분석\r\n        if (currentMFI > 80) {\r\n            result += `현재 MFI가 80을 초과하여 과매수 구간에 있습니다. 조정 가능성이 있습니다.<br/>`;\r\n        } else if (currentMFI < 20) {\r\n            result += `현재 MFI가 20 미만으로 과매도 구간에 있습니다. 반등 가능성이 있습니다.<br/>`;\r\n        } else {\r\n            result += `현재 MFI는 중립 상태입니다.<br/>`;\r\n        }\r\n\r\n        // MFI 이동평균 교차 신호\r\n        if (currentMACrossover === 1) {\r\n            result += `MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 신호일 수 있습니다.<br/>`;\r\n        } else if (currentMACrossover === -1) {\r\n            result += `MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 신호일 수 있습니다.<br/>`;\r\n        } else {\r\n            result += `MFI 이동평균에 특별한 교차 신호는 없습니다.<br/>`;\r\n        }\r\n\r\n        // 가격과 MFI 추세 비교\r\n        result += `<br/>가격은 ${priceDirection} 중입니다. MFI 추세와 가격 추세가 일치하는지 확인하세요.<br/>`;\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mfiData.length > 0 && stockData.length > 0) {\r\n            const result = analyzeMFITrend(mfiData, stockData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [mfiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <h4>MFI 흐름 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MFIAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}