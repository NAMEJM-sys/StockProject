{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\RSICalculations2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchRSIData from '../ComponentsFetch/FetchRSIData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst findSwingLows = (data, range, valueKey) => {\n  let swingLows = [];\n  for (let i = range; i < data.length - range; i++) {\n    let isSwingLow = true;\n    for (let j = 1; j <= range; j++) {\n      if (data[i - j][valueKey] <= data[i][valueKey] || data[i + j][valueKey] <= data[i][valueKey]) {\n        isSwingLow = false;\n        break;\n      }\n    }\n    if (isSwingLow) {\n      swingLows.push({\n        value: data[i][valueKey],\n        index: i,\n        date: data[i].date\n      });\n    }\n  }\n  return swingLows;\n};\nconst findSwingHighs = (data, range, valueKey) => {\n  let swingHighs = [];\n  for (let i = range; i < data.length - range; i++) {\n    let isSwingHigh = true;\n    for (let j = 1; j <= range; j++) {\n      if (data[i - j][valueKey] >= data[i][valueKey] || data[i + j][valueKey] >= data[i][valueKey]) {\n        isSwingHigh = false;\n        break;\n      }\n    }\n    if (isSwingHigh) {\n      swingHighs.push({\n        value: data[i][valueKey],\n        index: i,\n        date: data[i].date\n      });\n    }\n  }\n  return swingHighs;\n};\nfunction RSICalculations2({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [rsiData, setRSIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [score, setScore] = useState(null);\n  const calculateDivergenceScore = () => {\n    const swingRange = 2;\n    const dataLength = Math.min(rsiData.length, stockData.length);\n    if (dataLength < swingRange * 2) {\n      setScore(null);\n      return;\n    }\n    const priceLows = findSwingLows(stockData, swingRange, 'close');\n    const priceHighs = findSwingHighs(stockData, swingRange, 'close');\n    const rsiLows = findSwingLows(rsiData, swingRange, 'RSI');\n    const rsiHighs = findSwingHighs(rsiData, swingRange, 'RSI');\n    let divergenceType = null; // 'bullish', 'bearish', null\n\n    // 상승 다이버전스 감지\n    if (priceLows.length >= 2 && rsiLows.length >= 2) {\n      const prevPriceLow = priceLows[priceLows.length - 2];\n      const recentPriceLow = priceLows[priceLows.length - 1];\n      const prevRSILow = rsiLows.find(rsiLow => rsiLow.date === prevPriceLow.date);\n      const recentRSILow = rsiLows.find(rsiLow => rsiLow.date === recentPriceLow.date);\n      if (prevRSILow && recentRSILow) {\n        if (recentPriceLow.value < prevPriceLow.value && recentRSILow.value > prevRSILow.value) {\n          divergenceType = 'bullish';\n        }\n      }\n    }\n\n    // 하락 다이버전스 감지\n    if (priceHighs.length >= 2 && rsiHighs.length >= 2) {\n      const prevPriceHigh = priceHighs[priceHighs.length - 2];\n      const recentPriceHigh = priceHighs[priceHighs.length - 1];\n      const prevRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === prevPriceHigh.date);\n      const recentRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === recentPriceHigh.date);\n      if (prevRSIHigh && recentRSIHigh) {\n        if (recentPriceHigh.value > prevPriceHigh.value && recentRSIHigh.value < prevRSIHigh.value) {\n          divergenceType = 'bearish';\n        }\n      }\n    }\n\n    // 점수 부여\n    let calculatedScore = 5; // 기본 보통\n    if (divergenceType === 'bullish') {\n      calculatedScore = 3; // 매수\n    } else if (divergenceType === 'bearish') {\n      calculatedScore = 7; // 매도\n    }\n    setScore(calculatedScore);\n    if (onScoreCalculated && calculatedScore !== null) {\n      onScoreCalculated(calculatedScore);\n    }\n  };\n  useEffect(() => {\n    if (rsiData.length > 0 && stockData.length > 0) {\n      calculateDivergenceScore();\n    }\n  }, [rsiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchRSIData, {\n      stockCode: stockCode,\n      onRSIFetch: setRSIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(RSICalculations2, \"4K+gihjHuqgH43qHPArxXiA0lDM=\");\n_c = RSICalculations2;\nexport default RSICalculations2;\nvar _c;\n$RefreshReg$(_c, \"RSICalculations2\");","map":{"version":3,"names":["React","useState","useEffect","FetchRSIData","FetchStockDataForCode","jsxDEV","_jsxDEV","findSwingLows","data","range","valueKey","swingLows","i","length","isSwingLow","j","push","value","index","date","findSwingHighs","swingHighs","isSwingHigh","RSICalculations2","stockCode","onScoreCalculated","_s","rsiData","setRSIData","stockData","setStockData","score","setScore","calculateDivergenceScore","swingRange","dataLength","Math","min","priceLows","priceHighs","rsiLows","rsiHighs","divergenceType","prevPriceLow","recentPriceLow","prevRSILow","find","rsiLow","recentRSILow","prevPriceHigh","recentPriceHigh","prevRSIHigh","rsiHigh","recentRSIHigh","calculatedScore","children","onRSIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/RSICalculations2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchRSIData from '../ComponentsFetch/FetchRSIData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nconst findSwingLows = (data, range, valueKey) => {\r\n    let swingLows = [];\r\n    for (let i = range; i < data.length - range; i++) {\r\n        let isSwingLow = true;\r\n        for (let j = 1; j <= range; j++) {\r\n            if (data[i - j][valueKey] <= data[i][valueKey] || data[i + j][valueKey] <= data[i][valueKey]) {\r\n                isSwingLow = false;\r\n                break;\r\n            }\r\n        }\r\n        if (isSwingLow) {\r\n            swingLows.push({ value: data[i][valueKey], index: i, date: data[i].date });\r\n        }\r\n    }\r\n    return swingLows;\r\n};\r\n\r\nconst findSwingHighs = (data, range, valueKey) => {\r\n    let swingHighs = [];\r\n    for (let i = range; i < data.length - range; i++) {\r\n        let isSwingHigh = true;\r\n        for (let j = 1; j <= range; j++) {\r\n            if (data[i - j][valueKey] >= data[i][valueKey] || data[i + j][valueKey] >= data[i][valueKey]) {\r\n                isSwingHigh = false;\r\n                break;\r\n            }\r\n        }\r\n        if (isSwingHigh) {\r\n            swingHighs.push({ value: data[i][valueKey], index: i, date: data[i].date });\r\n        }\r\n    }\r\n    return swingHighs;\r\n};\r\n\r\nfunction RSICalculations2({ stockCode, onScoreCalculated }) {\r\n    const [rsiData, setRSIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [score, setScore] = useState(null);\r\n\r\n    const calculateDivergenceScore = () => {\r\n        const swingRange = 2;\r\n        const dataLength = Math.min(rsiData.length, stockData.length);\r\n\r\n        if (dataLength < swingRange * 2) {\r\n            setScore(null);\r\n            return;\r\n        }\r\n\r\n        const priceLows = findSwingLows(stockData, swingRange, 'close');\r\n        const priceHighs = findSwingHighs(stockData, swingRange, 'close');\r\n\r\n        const rsiLows = findSwingLows(rsiData, swingRange, 'RSI');\r\n        const rsiHighs = findSwingHighs(rsiData, swingRange, 'RSI');\r\n\r\n        let divergenceType = null; // 'bullish', 'bearish', null\r\n\r\n        // 상승 다이버전스 감지\r\n        if (priceLows.length >= 2 && rsiLows.length >= 2) {\r\n            const prevPriceLow = priceLows[priceLows.length - 2];\r\n            const recentPriceLow = priceLows[priceLows.length - 1];\r\n\r\n            const prevRSILow = rsiLows.find(rsiLow => rsiLow.date === prevPriceLow.date);\r\n            const recentRSILow = rsiLows.find(rsiLow => rsiLow.date === recentPriceLow.date);\r\n\r\n            if (prevRSILow && recentRSILow) {\r\n                if (recentPriceLow.value < prevPriceLow.value && recentRSILow.value > prevRSILow.value) {\r\n                    divergenceType = 'bullish';\r\n                }\r\n            }\r\n        }\r\n\r\n        // 하락 다이버전스 감지\r\n        if (priceHighs.length >= 2 && rsiHighs.length >= 2) {\r\n            const prevPriceHigh = priceHighs[priceHighs.length - 2];\r\n            const recentPriceHigh = priceHighs[priceHighs.length - 1];\r\n\r\n            const prevRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === prevPriceHigh.date);\r\n            const recentRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === recentPriceHigh.date);\r\n\r\n            if (prevRSIHigh && recentRSIHigh) {\r\n                if (recentPriceHigh.value > prevPriceHigh.value && recentRSIHigh.value < prevRSIHigh.value) {\r\n                    divergenceType = 'bearish';\r\n                }\r\n            }\r\n        }\r\n\r\n        // 점수 부여\r\n        let calculatedScore = 5; // 기본 보통\r\n        if (divergenceType === 'bullish') {\r\n            calculatedScore = 3; // 매수\r\n        } else if (divergenceType === 'bearish') {\r\n            calculatedScore = 7; // 매도\r\n        }\r\n\r\n        setScore(calculatedScore);\r\n\r\n        if (onScoreCalculated && calculatedScore !== null) {\r\n            onScoreCalculated(calculatedScore);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (rsiData.length > 0 && stockData.length > 0) {\r\n            calculateDivergenceScore();\r\n        }\r\n    }, [rsiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchRSIData stockCode={stockCode} onRSIFetch={setRSIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RSICalculations2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}