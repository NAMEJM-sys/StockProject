{"ast":null,"code":"/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x) {\n  if (x.length === 0) {\n    throw new Error(\"harmonicMean requires at least one data point\");\n  }\n  let reciprocalSum = 0;\n  for (let i = 0; i < x.length; i++) {\n    // the harmonic mean is only valid for positive numbers\n    if (x[i] <= 0) {\n      throw new Error(\"harmonicMean requires only positive numbers as input\");\n    }\n    reciprocalSum += 1 / x[i];\n  }\n\n  // divide n by the reciprocal sum\n  return x.length / reciprocalSum;\n}\nexport default harmonicMean;","map":{"version":3,"names":["harmonicMean","x","length","Error","reciprocalSum","i"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/harmonic_mean.js"],"sourcesContent":["/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"harmonicMean requires at least one data point\");\n    }\n\n    let reciprocalSum = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        // the harmonic mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error(\n                \"harmonicMean requires only positive numbers as input\"\n            );\n        }\n\n        reciprocalSum += 1 / x[i];\n    }\n\n    // divide n by the reciprocal sum\n    return x.length / reciprocalSum;\n}\n\nexport default harmonicMean;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAYA,CAACC,CAAC,EAAE;EACrB,IAAIA,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EACpE;EAEA,IAAIC,aAAa,GAAG,CAAC;EAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;IAC/B;IACA,IAAIJ,CAAC,CAACI,CAAC,CAAC,IAAI,CAAC,EAAE;MACX,MAAM,IAAIF,KAAK,CACX,sDACJ,CAAC;IACL;IAEAC,aAAa,IAAI,CAAC,GAAGH,CAAC,CAACI,CAAC,CAAC;EAC7B;;EAEA;EACA,OAAOJ,CAAC,CAACC,MAAM,GAAGE,aAAa;AACnC;AAEA,eAAeJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}