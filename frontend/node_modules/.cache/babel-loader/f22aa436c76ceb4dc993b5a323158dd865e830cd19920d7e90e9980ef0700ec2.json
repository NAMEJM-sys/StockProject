{"ast":null,"code":"import epsilon from \"./epsilon.js\";\n\n/**\n * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n * is a discrete probability distribution that expresses the probability\n * of a given number of events occurring in a fixed interval of time\n * and/or space if these events occur with a known average rate and\n * independently of the time since the last event.\n *\n * The Poisson Distribution is characterized by the strictly positive\n * mean arrival or occurrence rate, `λ`.\n *\n * @param {number} lambda location poisson distribution\n * @returns {number[]} values of poisson distribution at that point\n */\nfunction poissonDistribution(lambda) /*: ?number[] */{\n  // Check that lambda is strictly positive\n  if (lambda <= 0) {\n    return undefined;\n  }\n\n  // our current place in the distribution\n  let x = 0;\n  // and we keep track of the current cumulative probability, in\n  // order to know when to stop calculating chances.\n  let cumulativeProbability = 0;\n  // the calculated cells to be returned\n  const cells = [];\n  let factorialX = 1;\n\n  // This algorithm iterates through each potential outcome,\n  // until the `cumulativeProbability` is very close to 1, at\n  // which point we've defined the vast majority of outcomes\n  do {\n    // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n    cells[x] = Math.exp(-lambda) * Math.pow(lambda, x) / factorialX;\n    cumulativeProbability += cells[x];\n    x++;\n    factorialX *= x;\n    // when the cumulativeProbability is nearly 1, we've calculated\n    // the useful range of this distribution\n  } while (cumulativeProbability < 1 - epsilon);\n  return cells;\n}\nexport default poissonDistribution;","map":{"version":3,"names":["epsilon","poissonDistribution","lambda","undefined","x","cumulativeProbability","cells","factorialX","Math","exp","pow"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/poisson_distribution.js"],"sourcesContent":["import epsilon from \"./epsilon.js\";\n\n/**\n * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n * is a discrete probability distribution that expresses the probability\n * of a given number of events occurring in a fixed interval of time\n * and/or space if these events occur with a known average rate and\n * independently of the time since the last event.\n *\n * The Poisson Distribution is characterized by the strictly positive\n * mean arrival or occurrence rate, `λ`.\n *\n * @param {number} lambda location poisson distribution\n * @returns {number[]} values of poisson distribution at that point\n */\nfunction poissonDistribution(lambda) /*: ?number[] */ {\n    // Check that lambda is strictly positive\n    if (lambda <= 0) {\n        return undefined;\n    }\n\n    // our current place in the distribution\n    let x = 0;\n    // and we keep track of the current cumulative probability, in\n    // order to know when to stop calculating chances.\n    let cumulativeProbability = 0;\n    // the calculated cells to be returned\n    const cells = [];\n    let factorialX = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] = (Math.exp(-lambda) * Math.pow(lambda, x)) / factorialX;\n        cumulativeProbability += cells[x];\n        x++;\n        factorialX *= x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default poissonDistribution;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,MAAM,EAAE,gBAAiB;EAClD;EACA,IAAIA,MAAM,IAAI,CAAC,EAAE;IACb,OAAOC,SAAS;EACpB;;EAEA;EACA,IAAIC,CAAC,GAAG,CAAC;EACT;EACA;EACA,IAAIC,qBAAqB,GAAG,CAAC;EAC7B;EACA,MAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,UAAU,GAAG,CAAC;;EAElB;EACA;EACA;EACA,GAAG;IACC;IACAD,KAAK,CAACF,CAAC,CAAC,GAAII,IAAI,CAACC,GAAG,CAAC,CAACP,MAAM,CAAC,GAAGM,IAAI,CAACE,GAAG,CAACR,MAAM,EAAEE,CAAC,CAAC,GAAIG,UAAU;IACjEF,qBAAqB,IAAIC,KAAK,CAACF,CAAC,CAAC;IACjCA,CAAC,EAAE;IACHG,UAAU,IAAIH,CAAC;IACf;IACA;EACJ,CAAC,QAAQC,qBAAqB,GAAG,CAAC,GAAGL,OAAO;EAE5C,OAAOM,KAAK;AAChB;AAEA,eAAeL,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}