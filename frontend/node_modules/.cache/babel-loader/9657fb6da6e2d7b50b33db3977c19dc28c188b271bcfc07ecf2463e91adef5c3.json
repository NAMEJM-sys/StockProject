{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\ADXAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ADXAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [adxData, setADXData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeDICrossovers = (adxData, period = 14) => {\n    if (adxData.length < period + 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n\n    // DI+와 DI-의 이동 평균 계산\n    const diPlusValues = adxData.map(data => data.DI14Plus);\n    const diMinusValues = adxData.map(data => data.DI14Minus);\n    const diPlusMA = diPlusValues.slice(-period).reduce((a, b) => a + b, 0) / period;\n    const diMinusMA = diMinusValues.slice(-period).reduce((a, b) => a + b, 0) / period;\n\n    // 이전 기간의 이동 평균 계산\n    const prevDiPlusMA = diPlusValues.slice(-period - 1, -1).reduce((a, b) => a + b, 0) / period;\n    const prevDiMinusMA = diMinusValues.slice(-period - 1, -1).reduce((a, b) => a + b, 0) / period;\n    let result = '<strong>DI+와 DI- 교차 분석</strong><br/><br/>';\n    if (prevDiPlusMA <= prevDiMinusMA && diPlusMA > diMinusMA) {\n      result += '매수 신호 발생: DI+의 이동 평균이 DI-의 이동 평균을 상향 돌파했습니다.<br/>';\n    } else if (prevDiPlusMA >= prevDiMinusMA && diPlusMA < diMinusMA) {\n      result += '매도 신호 발생: DI+의 이동 평균이 DI-의 이동 평균을 하향 돌파했습니다.<br/>';\n    } else {\n      result += 'DI+와 DI-의 이동 평균 사이에 특별한 교차 신호가 없습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (adxData.length > 0) {\n      const result = analyzeDICrossovers(adxData);\n      setAnalysisResult(result);\n    }\n  }, [adxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchADXData, {\n      stockCode: stockCode,\n      onADXFetch: setADXData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"DI+\\uC640 DI- \\uC774\\uB3D9 \\uD3C9\\uADE0 \\uAD50\\uCC28 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ADXAnalysis2, \"5Dm60htkzevDfgZ/oo7jhbn3XPE=\");\n_c = ADXAnalysis2;\nexport default ADXAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"ADXAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchADXData","jsxDEV","_jsxDEV","ADXAnalysis2","stockCode","_s","adxData","setADXData","analysisResult","setAnalysisResult","analyzeDICrossovers","period","length","diPlusValues","map","data","DI14Plus","diMinusValues","DI14Minus","diPlusMA","slice","reduce","a","b","diMinusMA","prevDiPlusMA","prevDiMinusMA","result","children","onADXFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/ADXAnalysis2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\r\n\r\nfunction ADXAnalysis2({ stockCode }) {\r\n    const [adxData, setADXData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeDICrossovers = (adxData, period = 14) => {\r\n        if (adxData.length < period + 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        // DI+와 DI-의 이동 평균 계산\r\n        const diPlusValues = adxData.map(data => data.DI14Plus);\r\n        const diMinusValues = adxData.map(data => data.DI14Minus);\r\n\r\n        const diPlusMA = diPlusValues.slice(-period).reduce((a, b) => a + b, 0) / period;\r\n        const diMinusMA = diMinusValues.slice(-period).reduce((a, b) => a + b, 0) / period;\r\n\r\n        // 이전 기간의 이동 평균 계산\r\n        const prevDiPlusMA = diPlusValues.slice(-period - 1, -1).reduce((a, b) => a + b, 0) / period;\r\n        const prevDiMinusMA = diMinusValues.slice(-period - 1, -1).reduce((a, b) => a + b, 0) / period;\r\n\r\n        let result = '<strong>DI+와 DI- 교차 분석</strong><br/><br/>';\r\n\r\n        if (prevDiPlusMA <= prevDiMinusMA && diPlusMA > diMinusMA) {\r\n            result += '매수 신호 발생: DI+의 이동 평균이 DI-의 이동 평균을 상향 돌파했습니다.<br/>';\r\n        } else if (prevDiPlusMA >= prevDiMinusMA && diPlusMA < diMinusMA) {\r\n            result += '매도 신호 발생: DI+의 이동 평균이 DI-의 이동 평균을 하향 돌파했습니다.<br/>';\r\n        } else {\r\n            result += 'DI+와 DI-의 이동 평균 사이에 특별한 교차 신호가 없습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (adxData.length > 0) {\r\n            const result = analyzeDICrossovers(adxData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [adxData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchADXData stockCode={stockCode} onADXFetch={setADXData} />\r\n            <h4>DI+와 DI- 이동 평균 교차 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ADXAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}