{"ast":null,"code":"import mean from \"./mean.js\";\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x) {\n  if (x.length < 3) {\n    throw new Error(\"sampleSkewness requires at least three data points\");\n  }\n  const meanValue = mean(x);\n  let tempValue;\n  let sumSquaredDeviations = 0;\n  let sumCubedDeviations = 0;\n  for (let i = 0; i < x.length; i++) {\n    tempValue = x[i] - meanValue;\n    sumSquaredDeviations += tempValue * tempValue;\n    sumCubedDeviations += tempValue * tempValue * tempValue;\n  }\n\n  // this is Bessels' Correction: an adjustment made to sample statistics\n  // that allows for the reduced degree of freedom entailed in calculating\n  // values from samples rather than complete populations.\n  const besselsCorrection = x.length - 1;\n\n  // Find the mean value of that list\n  const theSampleStandardDeviation = Math.sqrt(sumSquaredDeviations / besselsCorrection);\n  const n = x.length;\n  const cubedS = Math.pow(theSampleStandardDeviation, 3);\n  return n * sumCubedDeviations / ((n - 1) * (n - 2) * cubedS);\n}\nexport default sampleSkewness;","map":{"version":3,"names":["mean","sampleSkewness","x","length","Error","meanValue","tempValue","sumSquaredDeviations","sumCubedDeviations","i","besselsCorrection","theSampleStandardDeviation","Math","sqrt","n","cubedS","pow"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/sample_skewness.js"],"sourcesContent":["import mean from \"./mean.js\";\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x) {\n    if (x.length < 3) {\n        throw new Error(\"sampleSkewness requires at least three data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let sumSquaredDeviations = 0;\n    let sumCubedDeviations = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        tempValue = x[i] - meanValue;\n        sumSquaredDeviations += tempValue * tempValue;\n        sumCubedDeviations += tempValue * tempValue * tempValue;\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    const theSampleStandardDeviation = Math.sqrt(\n        sumSquaredDeviations / besselsCorrection\n    );\n\n    const n = x.length;\n    const cubedS = Math.pow(theSampleStandardDeviation, 3);\n\n    return (n * sumCubedDeviations) / ((n - 1) * (n - 2) * cubedS);\n}\n\nexport default sampleSkewness;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,CAAC,EAAE;EACvB,IAAIA,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACzE;EAEA,MAAMC,SAAS,GAAGL,IAAI,CAACE,CAAC,CAAC;EACzB,IAAII,SAAS;EACb,IAAIC,oBAAoB,GAAG,CAAC;EAC5B,IAAIC,kBAAkB,GAAG,CAAC;EAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,CAACC,MAAM,EAAEM,CAAC,EAAE,EAAE;IAC/BH,SAAS,GAAGJ,CAAC,CAACO,CAAC,CAAC,GAAGJ,SAAS;IAC5BE,oBAAoB,IAAID,SAAS,GAAGA,SAAS;IAC7CE,kBAAkB,IAAIF,SAAS,GAAGA,SAAS,GAAGA,SAAS;EAC3D;;EAEA;EACA;EACA;EACA,MAAMI,iBAAiB,GAAGR,CAAC,CAACC,MAAM,GAAG,CAAC;;EAEtC;EACA,MAAMQ,0BAA0B,GAAGC,IAAI,CAACC,IAAI,CACxCN,oBAAoB,GAAGG,iBAC3B,CAAC;EAED,MAAMI,CAAC,GAAGZ,CAAC,CAACC,MAAM;EAClB,MAAMY,MAAM,GAAGH,IAAI,CAACI,GAAG,CAACL,0BAA0B,EAAE,CAAC,CAAC;EAEtD,OAAQG,CAAC,GAAGN,kBAAkB,IAAK,CAACM,CAAC,GAAG,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,GAAGC,MAAM,CAAC;AAClE;AAEA,eAAed,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}