{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\ChartOfClose.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartOfClose({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [options, setOptions] = useState({});\n  useEffect(() => {\n    if (stockData.length > 0 && stockCode) {\n      const dataForChart = stockData.map(item => ({\n        date: new Date(item.date).toLocaleDateString('ko-KR', {\n          month: '2-digit',\n          day: '2-digit'\n        }),\n        close: item.close\n      })).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n      // 확인 사항: 데이터가 없는 경우 빈 배열 반환을 막기\n      const validData = dataForChart.length > 0 ? dataForChart : [{\n        date: 'N/A',\n        close: 0\n      }];\n\n      // Set chart options\n      setOptions({\n        chart: {\n          type: 'line',\n          height: 330,\n          // 높이 값을 NaN 대신 명시적으로 설정\n          events: {\n            load: function () {\n              // Chart 내부에 텍스트 추가\n              const chart = this;\n              chart.renderer.text('Close Price', 100, 50) // 위치 조정\n              .css({\n                color: '#0071e3',\n                // 텍스트 색상\n                fontSize: '18px',\n                // 폰트 크기\n                fontWeight: 'bold',\n                // 폰트 굵게\n                zIndex: 5 // 다른 요소 위에 그려지도록 설정\n              }).add();\n            }\n          }\n        },\n        title: {\n          text: ''\n        },\n        accessibility: {\n          enabled: false // 접근성 모듈 비활성화\n        },\n        xAxis: {\n          categories: validData.map(item => item.date),\n          labels: {\n            formatter: function () {\n              return this.value; // 날짜 형식 유지 (MM/DD)\n            }\n          }\n        },\n        yAxis: {\n          title: {\n            text: ''\n          }\n        },\n        series: [{\n          name: 'Close Price',\n          data: validData.map(item => item.close),\n          marker: {\n            enabled: false // 데이터 포인트 마커 비활성화\n          },\n          color: '#0071e3'\n        }],\n        legend: {\n          enabled: false // 하단 범례 비활성화\n        },\n        credits: {\n          enabled: false // \"Highcharts.com\" 텍스트 비활성화\n        },\n        tooltip: {\n          shared: true,\n          crosshairs: true\n        }\n      });\n    }\n  }, [stockData, stockCode]);\n  if (!stockCode) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfClose, \"92GZoLDJUsjBqNjCY/m6uqhLQ7o=\");\n_c = ChartOfClose;\nexport default ChartOfClose;\nvar _c;\n$RefreshReg$(_c, \"ChartOfClose\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsReact","FetchStockDataForCode","jsxDEV","_jsxDEV","ChartOfClose","stockCode","_s","stockData","setStockData","options","setOptions","length","dataForChart","map","item","date","Date","toLocaleDateString","month","day","close","sort","a","b","validData","chart","type","height","events","load","renderer","text","css","color","fontSize","fontWeight","zIndex","add","title","accessibility","enabled","xAxis","categories","labels","formatter","value","yAxis","series","name","data","marker","legend","credits","tooltip","shared","crosshairs","children","onSDFCFetch","fileName","_jsxFileName","lineNumber","columnNumber","highcharts","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/ChartOfClose.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\r\n\r\nfunction ChartOfClose({ stockCode }) {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [options, setOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && stockCode) {\r\n            const dataForChart = stockData\r\n                .map(item => ({\r\n                    date: new Date(item.date).toLocaleDateString('ko-KR', { month: '2-digit', day: '2-digit' }),\r\n                    close: item.close,\r\n                }))\r\n                .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n            // 확인 사항: 데이터가 없는 경우 빈 배열 반환을 막기\r\n            const validData = dataForChart.length > 0 ? dataForChart : [{ date: 'N/A', close: 0 }];\r\n\r\n            // Set chart options\r\n            setOptions({\r\n                chart: {\r\n                    type: 'line',\r\n                    height: 330, // 높이 값을 NaN 대신 명시적으로 설정\r\n                    events: {\r\n                        load: function () {\r\n                            // Chart 내부에 텍스트 추가\r\n                            const chart = this;\r\n                            chart.renderer.text('Close Price', 100, 50) // 위치 조정\r\n                                .css({\r\n                                    color: '#0071e3', // 텍스트 색상\r\n                                    fontSize: '18px', // 폰트 크기\r\n                                    fontWeight: 'bold', // 폰트 굵게\r\n                                    zIndex: 5 // 다른 요소 위에 그려지도록 설정\r\n                                })\r\n                                .add();\r\n                        }\r\n                    }\r\n                },\r\n                title: {\r\n                    text: '',\r\n                },\r\n                accessibility: {\r\n                    enabled: false, // 접근성 모듈 비활성화\r\n                },\r\n                xAxis: {\r\n                    categories: validData.map(item => item.date),\r\n                    labels: {\r\n                        formatter: function () {\r\n                            return this.value; // 날짜 형식 유지 (MM/DD)\r\n                        },\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: '',\r\n                    },\r\n                },\r\n                series: [\r\n                    {\r\n                        name: 'Close Price',\r\n                        data: validData.map(item => item.close),\r\n                        marker: {\r\n                            enabled: false, // 데이터 포인트 마커 비활성화\r\n                        },\r\n                        color: '#0071e3',\r\n                    },\r\n                ],\r\n                legend: {\r\n                    enabled: false, // 하단 범례 비활성화\r\n                },\r\n                credits: {\r\n                    enabled: false, // \"Highcharts.com\" 텍스트 비활성화\r\n                },\r\n                tooltip: {\r\n                    shared: true,\r\n                    crosshairs: true,\r\n                },\r\n            });\r\n        }\r\n    }, [stockData, stockCode]);\r\n\r\n    if (!stockCode) return null;\r\n\r\n    return (\r\n        <div>\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <HighchartsReact highcharts={Highcharts} options={options} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartOfClose;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,IAAIS,SAAS,CAACI,MAAM,GAAG,CAAC,IAAIN,SAAS,EAAE;MACnC,MAAMO,YAAY,GAAGL,SAAS,CACzBM,GAAG,CAACC,IAAI,KAAK;QACVC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;UAAEC,KAAK,EAAE,SAAS;UAAEC,GAAG,EAAE;QAAU,CAAC,CAAC;QAC3FC,KAAK,EAAEN,IAAI,CAACM;MAChB,CAAC,CAAC,CAAC,CACFC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIP,IAAI,CAACM,CAAC,CAACP,IAAI,CAAC,GAAG,IAAIC,IAAI,CAACO,CAAC,CAACR,IAAI,CAAC,CAAC;;MAExD;MACA,MAAMS,SAAS,GAAGZ,YAAY,CAACD,MAAM,GAAG,CAAC,GAAGC,YAAY,GAAG,CAAC;QAAEG,IAAI,EAAE,KAAK;QAAEK,KAAK,EAAE;MAAE,CAAC,CAAC;;MAEtF;MACAV,UAAU,CAAC;QACPe,KAAK,EAAE;UACHC,IAAI,EAAE,MAAM;UACZC,MAAM,EAAE,GAAG;UAAE;UACbC,MAAM,EAAE;YACJC,IAAI,EAAE,SAAAA,CAAA,EAAY;cACd;cACA,MAAMJ,KAAK,GAAG,IAAI;cAClBA,KAAK,CAACK,QAAQ,CAACC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;cAAA,CACvCC,GAAG,CAAC;gBACDC,KAAK,EAAE,SAAS;gBAAE;gBAClBC,QAAQ,EAAE,MAAM;gBAAE;gBAClBC,UAAU,EAAE,MAAM;gBAAE;gBACpBC,MAAM,EAAE,CAAC,CAAC;cACd,CAAC,CAAC,CACDC,GAAG,CAAC,CAAC;YACd;UACJ;QACJ,CAAC;QACDC,KAAK,EAAE;UACHP,IAAI,EAAE;QACV,CAAC;QACDQ,aAAa,EAAE;UACXC,OAAO,EAAE,KAAK,CAAE;QACpB,CAAC;QACDC,KAAK,EAAE;UACHC,UAAU,EAAElB,SAAS,CAACX,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;UAC5C4B,MAAM,EAAE;YACJC,SAAS,EAAE,SAAAA,CAAA,EAAY;cACnB,OAAO,IAAI,CAACC,KAAK,CAAC,CAAC;YACvB;UACJ;QACJ,CAAC;QACDC,KAAK,EAAE;UACHR,KAAK,EAAE;YACHP,IAAI,EAAE;UACV;QACJ,CAAC;QACDgB,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,aAAa;UACnBC,IAAI,EAAEzB,SAAS,CAACX,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACM,KAAK,CAAC;UACvC8B,MAAM,EAAE;YACJV,OAAO,EAAE,KAAK,CAAE;UACpB,CAAC;UACDP,KAAK,EAAE;QACX,CAAC,CACJ;QACDkB,MAAM,EAAE;UACJX,OAAO,EAAE,KAAK,CAAE;QACpB,CAAC;QACDY,OAAO,EAAE;UACLZ,OAAO,EAAE,KAAK,CAAE;QACpB,CAAC;QACDa,OAAO,EAAE;UACLC,MAAM,EAAE,IAAI;UACZC,UAAU,EAAE;QAChB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAChD,SAAS,EAAEF,SAAS,CAAC,CAAC;EAE1B,IAAI,CAACA,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACIF,OAAA;IAAAqD,QAAA,gBACIrD,OAAA,CAACF,qBAAqB;MAACI,SAAS,EAAEA,SAAU;MAACoD,WAAW,EAAEjD;IAAa;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E1D,OAAA,CAACH,eAAe;MAAC8D,UAAU,EAAE/D,UAAW;MAACU,OAAO,EAAEA;IAAQ;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd;AAACvD,EAAA,CAvFQF,YAAY;AAAA2D,EAAA,GAAZ3D,YAAY;AAyFrB,eAAeA,YAAY;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}