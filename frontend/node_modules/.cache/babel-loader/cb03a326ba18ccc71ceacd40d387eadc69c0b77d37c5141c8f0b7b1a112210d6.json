{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MACDAnalysis3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis3({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMACDHistogram = (macdData, period = 5) => {\n    if (macdData.length < period + 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = macdData.length - 1;\n    const currentMACD = macdData[lastIndex].MACD_Line;\n    const currentSignal = macdData[lastIndex].Signal_Line;\n    const currentHistogram = macdData[lastIndex].Histogram;\n\n    // MACD와 Signal의 차이 계산\n    const macdSignalDiff = currentMACD - currentSignal;\n\n    // 최근 period 기간 동안 MACD와 Signal의 변화량 계산\n    const macdChanges = [];\n    const signalChanges = [];\n    for (let i = lastIndex - period + 1; i <= lastIndex; i++) {\n      macdChanges.push(macdData[i].MACD_Line - macdData[i - 1].MACD_Line);\n      signalChanges.push(macdData[i].Signal_Line - macdData[i - 1].Signal_Line);\n    }\n\n    // 평균 변화량 계산\n    const avgMACDChange = macdChanges.reduce((a, b) => a + b, 0) / period;\n    const avgSignalChange = signalChanges.reduce((a, b) => a + b, 0) / period;\n\n    // 두 선이 현재 속도로 언제 교차할지 예측\n    const combinedChange = avgMACDChange - avgSignalChange;\n    let result = '';\n    if (combinedChange !== 0) {\n      const daysToCrossover = Math.abs(macdSignalDiff / combinedChange);\n      if (daysToCrossover >= 0) {\n        result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 수 있습니다.<br/>`;\n      } else {\n        result += '현재 추세로는 크로스오버가 발생하지 않을 것으로 예상됩니다.<br/>';\n      }\n    } else {\n      result += 'MACD와 Signal Line의 변화율이 동일하여 크로스오버 시점을 예측할 수 없습니다.<br/>';\n    }\n\n    // Histogram의 0선 돌파 여부\n    const prevHistogram = macdData[lastIndex - 1].Histogram;\n    if (prevHistogram < 0 && currentHistogram > 0) {\n      result += '매수 모멘텀이 강화되고 있습니다. Histogram이 0선을 상향 돌파했습니다.<br/>';\n    } else if (prevHistogram > 0 && currentHistogram < 0) {\n      result += '매도 모멘텀이 강화되고 있습니다. Histogram이 0선을 하향 돌파했습니다.<br/>';\n    }\n\n    // Histogram 추세에 따른 크로스오버 예측\n    if (currentHistogram < 0 && avgMACDChange > avgSignalChange) {\n      result += 'Histogram 값이 음수이고 상승 추세입니다.<br/>';\n      result += 'MACD Line이 Signal Line을 상향 돌파할 가능성이 있습니다.<br/>';\n    } else if (currentHistogram > 0 && avgMACDChange < avgSignalChange) {\n      result += 'Histogram 값이 양수이고 하락 추세입니다.<br/>';\n      result += 'MACD Line이 Signal Line을 하향 돌파할 가능성이 있습니다.<br/>';\n    } else if (currentHistogram > 0 && avgMACDChange > avgSignalChange) {\n      result += '강한 상승 모멘텀이 지속되고 있습니다.<br/>';\n    } else if (currentHistogram < 0 && avgMACDChange < avgSignalChange) {\n      result += '강한 하락 모멘텀이 지속되고 있습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (macdData.length > 0) {\n      const result = analyzeMACDHistogram(macdData);\n      setAnalysisResult(result);\n    }\n  }, [macdData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MACD Histogram \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis3, \"27DMovUClVI7Ji8nju6vqnSpMCo=\");\n_c = MACDAnalysis3;\nexport default MACDAnalysis3;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis3\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","jsxDEV","_jsxDEV","MACDAnalysis3","stockCode","_s","macdData","setMACDData","analysisResult","setAnalysisResult","analyzeMACDHistogram","period","length","lastIndex","currentMACD","MACD_Line","currentSignal","Signal_Line","currentHistogram","Histogram","macdSignalDiff","macdChanges","signalChanges","i","push","avgMACDChange","reduce","a","b","avgSignalChange","combinedChange","result","daysToCrossover","Math","abs","toFixed","prevHistogram","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MACDAnalysis3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\r\n\r\nfunction MACDAnalysis3({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMACDHistogram = (macdData, period = 5) => {\r\n        if (macdData.length < period + 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = macdData.length - 1;\r\n        const currentMACD = macdData[lastIndex].MACD_Line;\r\n        const currentSignal = macdData[lastIndex].Signal_Line;\r\n        const currentHistogram = macdData[lastIndex].Histogram;\r\n\r\n        // MACD와 Signal의 차이 계산\r\n        const macdSignalDiff = currentMACD - currentSignal;\r\n\r\n        // 최근 period 기간 동안 MACD와 Signal의 변화량 계산\r\n        const macdChanges = [];\r\n        const signalChanges = [];\r\n\r\n        for (let i = lastIndex - period + 1; i <= lastIndex; i++) {\r\n            macdChanges.push(macdData[i].MACD_Line - macdData[i - 1].MACD_Line);\r\n            signalChanges.push(macdData[i].Signal_Line - macdData[i - 1].Signal_Line);\r\n        }\r\n\r\n        // 평균 변화량 계산\r\n        const avgMACDChange = macdChanges.reduce((a, b) => a + b, 0) / period;\r\n        const avgSignalChange = signalChanges.reduce((a, b) => a + b, 0) / period;\r\n\r\n        // 두 선이 현재 속도로 언제 교차할지 예측\r\n        const combinedChange = avgMACDChange - avgSignalChange;\r\n\r\n        let result = '';\r\n\r\n        if (combinedChange !== 0) {\r\n            const daysToCrossover = Math.abs(macdSignalDiff / combinedChange);\r\n\r\n            if (daysToCrossover >= 0) {\r\n                result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 수 있습니다.<br/>`;\r\n            } else {\r\n                result += '현재 추세로는 크로스오버가 발생하지 않을 것으로 예상됩니다.<br/>';\r\n            }\r\n        } else {\r\n            result += 'MACD와 Signal Line의 변화율이 동일하여 크로스오버 시점을 예측할 수 없습니다.<br/>';\r\n        }\r\n\r\n        // Histogram의 0선 돌파 여부\r\n        const prevHistogram = macdData[lastIndex - 1].Histogram;\r\n\r\n        if (prevHistogram < 0 && currentHistogram > 0) {\r\n            result += '매수 모멘텀이 강화되고 있습니다. Histogram이 0선을 상향 돌파했습니다.<br/>';\r\n        } else if (prevHistogram > 0 && currentHistogram < 0) {\r\n            result += '매도 모멘텀이 강화되고 있습니다. Histogram이 0선을 하향 돌파했습니다.<br/>';\r\n        }\r\n\r\n        // Histogram 추세에 따른 크로스오버 예측\r\n        if (currentHistogram < 0 && avgMACDChange > avgSignalChange) {\r\n            result += 'Histogram 값이 음수이고 상승 추세입니다.<br/>';\r\n            result += 'MACD Line이 Signal Line을 상향 돌파할 가능성이 있습니다.<br/>';\r\n        } else if (currentHistogram > 0 && avgMACDChange < avgSignalChange) {\r\n            result += 'Histogram 값이 양수이고 하락 추세입니다.<br/>';\r\n            result += 'MACD Line이 Signal Line을 하향 돌파할 가능성이 있습니다.<br/>';\r\n        } else if (currentHistogram > 0 && avgMACDChange > avgSignalChange) {\r\n            result += '강한 상승 모멘텀이 지속되고 있습니다.<br/>';\r\n        } else if (currentHistogram < 0 && avgMACDChange < avgSignalChange) {\r\n            result += '강한 하락 모멘텀이 지속되고 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0) {\r\n            const result = analyzeMACDHistogram(macdData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [macdData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <h4>MACD Histogram 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis3;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,aAAaA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,oBAAoB,GAAGA,CAACJ,QAAQ,EAAEK,MAAM,GAAG,CAAC,KAAK;IACnD,IAAIL,QAAQ,CAACM,MAAM,GAAGD,MAAM,GAAG,CAAC,EAAE;MAC9B,OAAO,iBAAiB;IAC5B;IAEA,MAAME,SAAS,GAAGP,QAAQ,CAACM,MAAM,GAAG,CAAC;IACrC,MAAME,WAAW,GAAGR,QAAQ,CAACO,SAAS,CAAC,CAACE,SAAS;IACjD,MAAMC,aAAa,GAAGV,QAAQ,CAACO,SAAS,CAAC,CAACI,WAAW;IACrD,MAAMC,gBAAgB,GAAGZ,QAAQ,CAACO,SAAS,CAAC,CAACM,SAAS;;IAEtD;IACA,MAAMC,cAAc,GAAGN,WAAW,GAAGE,aAAa;;IAElD;IACA,MAAMK,WAAW,GAAG,EAAE;IACtB,MAAMC,aAAa,GAAG,EAAE;IAExB,KAAK,IAAIC,CAAC,GAAGV,SAAS,GAAGF,MAAM,GAAG,CAAC,EAAEY,CAAC,IAAIV,SAAS,EAAEU,CAAC,EAAE,EAAE;MACtDF,WAAW,CAACG,IAAI,CAAClB,QAAQ,CAACiB,CAAC,CAAC,CAACR,SAAS,GAAGT,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACR,SAAS,CAAC;MACnEO,aAAa,CAACE,IAAI,CAAClB,QAAQ,CAACiB,CAAC,CAAC,CAACN,WAAW,GAAGX,QAAQ,CAACiB,CAAC,GAAG,CAAC,CAAC,CAACN,WAAW,CAAC;IAC7E;;IAEA;IACA,MAAMQ,aAAa,GAAGJ,WAAW,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGjB,MAAM;IACrE,MAAMkB,eAAe,GAAGP,aAAa,CAACI,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGjB,MAAM;;IAEzE;IACA,MAAMmB,cAAc,GAAGL,aAAa,GAAGI,eAAe;IAEtD,IAAIE,MAAM,GAAG,EAAE;IAEf,IAAID,cAAc,KAAK,CAAC,EAAE;MACtB,MAAME,eAAe,GAAGC,IAAI,CAACC,GAAG,CAACd,cAAc,GAAGU,cAAc,CAAC;MAEjE,IAAIE,eAAe,IAAI,CAAC,EAAE;QACtBD,MAAM,IAAI,kBAAkBC,eAAe,CAACG,OAAO,CAAC,CAAC,CAAC,mCAAmC;MAC7F,CAAC,MAAM;QACHJ,MAAM,IAAI,wCAAwC;MACtD;IACJ,CAAC,MAAM;MACHA,MAAM,IAAI,yDAAyD;IACvE;;IAEA;IACA,MAAMK,aAAa,GAAG9B,QAAQ,CAACO,SAAS,GAAG,CAAC,CAAC,CAACM,SAAS;IAEvD,IAAIiB,aAAa,GAAG,CAAC,IAAIlB,gBAAgB,GAAG,CAAC,EAAE;MAC3Ca,MAAM,IAAI,mDAAmD;IACjE,CAAC,MAAM,IAAIK,aAAa,GAAG,CAAC,IAAIlB,gBAAgB,GAAG,CAAC,EAAE;MAClDa,MAAM,IAAI,mDAAmD;IACjE;;IAEA;IACA,IAAIb,gBAAgB,GAAG,CAAC,IAAIO,aAAa,GAAGI,eAAe,EAAE;MACzDE,MAAM,IAAI,kCAAkC;MAC5CA,MAAM,IAAI,gDAAgD;IAC9D,CAAC,MAAM,IAAIb,gBAAgB,GAAG,CAAC,IAAIO,aAAa,GAAGI,eAAe,EAAE;MAChEE,MAAM,IAAI,kCAAkC;MAC5CA,MAAM,IAAI,gDAAgD;IAC9D,CAAC,MAAM,IAAIb,gBAAgB,GAAG,CAAC,IAAIO,aAAa,GAAGI,eAAe,EAAE;MAChEE,MAAM,IAAI,4BAA4B;IAC1C,CAAC,MAAM,IAAIb,gBAAgB,GAAG,CAAC,IAAIO,aAAa,GAAGI,eAAe,EAAE;MAChEE,MAAM,IAAI,4BAA4B;IAC1C;IAEA,OAAOA,MAAM;EACjB,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMmB,MAAM,GAAGrB,oBAAoB,CAACJ,QAAQ,CAAC;MAC7CG,iBAAiB,CAACsB,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACzB,QAAQ,CAAC,CAAC;EAEd,oBACIJ,OAAA;IAAAmC,QAAA,gBACInC,OAAA,CAACF,aAAa;MAACI,SAAS,EAAEA,SAAU;MAACkC,WAAW,EAAE/B;IAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjExC,OAAA;MAAAmC,QAAA,EAAI;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxC,OAAA;MAAGyC,uBAAuB,EAAE;QAAEC,MAAM,EAAEpC;MAAe;IAAE;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAACrC,EAAA,CAtFQF,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AAwFtB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}