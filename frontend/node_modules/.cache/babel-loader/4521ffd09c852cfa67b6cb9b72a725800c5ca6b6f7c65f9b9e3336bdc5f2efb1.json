{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\findSupportZones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction findSupportZones(stockData) {\n  const sortedStockData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\n  let lows = [];\n  let firstLow = null;\n  let previousHigh = null;\n  const minimumDaysGap = 5; // 최소 일수 간격 예시\n  const minimumPriceDifference = 3; // 최소 가격 차이 예시 (%)\n\n  for (let i = 1; i < sortedStockData.length - 1; i++) {\n    if (sortedStockData[i - 1].close > sortedStockData[i].close && sortedStockData[i].close < sortedStockData[i + 1].close) {\n      if (previousHigh && firstLow === null) {\n        firstLow = {\n          date: sortedStockData[i].date,\n          close: sortedStockData[i].close\n        };\n      } else if (firstLow) {\n        const priceDifference = (firstLow.close - sortedStockData[i].close) / firstLow.close * 100;\n        const daysGap = (new Date(sortedStockData[i].date) - new Date(firstLow.date)) / (1000 * 60 * 60 * 24);\n        if (priceDifference >= minimumPriceDifference && daysGap >= minimumDaysGap || sortedStockData[i].close < firstLow.close) {\n          lows.push(firstLow);\n          firstLow = {\n            date: sortedStockData[i].date,\n            close: sortedStockData[i].close\n          };\n        }\n      }\n    }\n    if (sortedStockData[i - 1].close < sortedStockData[i].close) {\n      previousHigh = sortedStockData[i];\n    }\n  }\n  if (firstLow) {\n    lows.push(firstLow);\n  }\n  return lows;\n}\nfunction StockAnalysis({\n  stockData\n}) {\n  _s();\n  const [supportZones, setSupportZones] = useState([]);\n  useEffect(() => {\n    if (stockData.length > 0) {\n      const zones = findSupportZones(stockData);\n      setSupportZones(zones);\n    }\n  }, [stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Support Zones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: supportZones.map((zone, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Date: \", zone.date, \", Close: \", zone.close]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(StockAnalysis, \"O3Fdvyyy24KebpM8KHBVqc7zi90=\");\n_c = StockAnalysis;\nexport default StockAnalysis;\nvar _c;\n$RefreshReg$(_c, \"StockAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","findSupportZones","stockData","sortedStockData","sort","a","b","Date","date","lows","firstLow","previousHigh","minimumDaysGap","minimumPriceDifference","i","length","close","priceDifference","daysGap","push","StockAnalysis","_s","supportZones","setSupportZones","zones","children","fileName","_jsxFileName","lineNumber","columnNumber","map","zone","index","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/findSupportZones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction findSupportZones(stockData) {\r\n    const sortedStockData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    let lows = [];\r\n    let firstLow = null;\r\n    let previousHigh = null;\r\n    const minimumDaysGap = 5; // 최소 일수 간격 예시\r\n    const minimumPriceDifference = 3; // 최소 가격 차이 예시 (%)\r\n\r\n    for (let i = 1; i < sortedStockData.length - 1; i++) {\r\n        if (sortedStockData[i - 1].close > sortedStockData[i].close && sortedStockData[i].close < sortedStockData[i + 1].close) {\r\n            if (previousHigh && firstLow === null) {\r\n                firstLow = { date: sortedStockData[i].date, close: sortedStockData[i].close };\r\n            } else if (firstLow) {\r\n                const priceDifference = ((firstLow.close - sortedStockData[i].close) / firstLow.close) * 100;\r\n                const daysGap = (new Date(sortedStockData[i].date) - new Date(firstLow.date)) / (1000 * 60 * 60 * 24);\r\n\r\n                if ((priceDifference >= minimumPriceDifference && daysGap >= minimumDaysGap) || sortedStockData[i].close < firstLow.close) {\r\n                    lows.push(firstLow);\r\n                    firstLow = { date: sortedStockData[i].date, close: sortedStockData[i].close };\r\n                }\r\n            }\r\n        }\r\n\r\n        if (sortedStockData[i - 1].close < sortedStockData[i].close) {\r\n            previousHigh = sortedStockData[i];\r\n        }\r\n    }\r\n\r\n    if (firstLow) {\r\n        lows.push(firstLow);\r\n    }\r\n\r\n    return lows;\r\n}\r\n\r\nfunction StockAnalysis({ stockData }) {\r\n    const [supportZones, setSupportZones] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0) {\r\n            const zones = findSupportZones(stockData);\r\n            setSupportZones(zones);\r\n        }\r\n    }, [stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Support Zones</h3>\r\n            <ul>\r\n                {supportZones.map((zone, index) => (\r\n                    <li key={index}>\r\n                        Date: {zone.date}, Close: {zone.close}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}