{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\ChartOfClose.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport FetchStockData from \"../components/FetchStockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartOfClose({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    console.log('Stock Data:', stockData);\n    const dataForChart = stockData.filter(item => item.stock_code === stockCode) // 선택된 종목 코드에 따른 필터링\n    .map(item => ({\n      date: item.date,\n      close: item.close\n    }));\n    console.log('Data for Chart:', dataForChart); // 이곳에 콘솔 로그 추가\n    setFilteredData(dataForChart);\n  }, [stockData, stockCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchStockData, {\n      onDataFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 300,\n        data: filteredData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"close\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfClose, \"xlQWdXhL2VMgXDKiaqHvoIJpWxY=\");\n_c = ChartOfClose;\nexport default ChartOfClose;\nvar _c;\n$RefreshReg$(_c, \"ChartOfClose\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","FetchStockData","jsxDEV","_jsxDEV","ChartOfClose","stockCode","_s","stockData","setStockData","filteredData","setFilteredData","console","log","dataForChart","filter","item","stock_code","map","date","close","children","onDataFetch","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/ChartOfClose.js"],"sourcesContent":["import React,{ useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport FetchStockData from \"../components/FetchStockData\";\r\n\r\nfunction ChartOfClose({ stockCode }){\r\n    const [stockData, setStockData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log('Stock Data:', stockData);\r\n        const dataForChart = stockData\r\n            .filter(item => item.stock_code === stockCode) // 선택된 종목 코드에 따른 필터링\r\n            .map(item => ({\r\n                date: item.date,\r\n                close: item.close,\r\n            }));\r\n\r\n        console.log('Data for Chart:', dataForChart);  // 이곳에 콘솔 로그 추가\r\n        setFilteredData(dataForChart);\r\n    }, [stockData, stockCode]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchStockData onDataFetch={setStockData}/>\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={filteredData}\r\n                    margin={{\r\n                        top: 5, right: 30, left: 20, bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <XAxis dataKey=\"date\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Legend/>\r\n                    <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChartOfClose;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC7G,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAC;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZmB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,SAAS,CAAC;IACrC,MAAMM,YAAY,GAAGN,SAAS,CACzBO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAKX,SAAS,CAAC,CAAC;IAAA,CAC9CY,GAAG,CAACF,IAAI,KAAK;MACVG,IAAI,EAAEH,IAAI,CAACG,IAAI;MACfC,KAAK,EAAEJ,IAAI,CAACI;IAChB,CAAC,CAAC,CAAC;IAEPR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,YAAY,CAAC,CAAC,CAAE;IAC/CH,eAAe,CAACG,YAAY,CAAC;EACjC,CAAC,EAAE,CAACN,SAAS,EAAEF,SAAS,CAAC,CAAC;EAE1B,oBACIF,OAAA;IAAAiB,QAAA,gBACIjB,OAAA,CAACF,cAAc;MAACoB,WAAW,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5CtB,OAAA,CAACH,mBAAmB;MAAC0B,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAP,QAAA,eAC1CjB,OAAA,CAACV,SAAS;QACNiC,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZC,IAAI,EAAEnB,YAAa;QACnBoB,MAAM,EAAE;UACJC,GAAG,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QACzC,CAAE;QAAAb,QAAA,gBAEFjB,OAAA,CAACN,aAAa;UAACqC,eAAe,EAAC;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtCtB,OAAA,CAACR,KAAK;UAACwC,OAAO,EAAC;QAAM;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvBtB,OAAA,CAACP,KAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACRtB,OAAA,CAACL,OAAO;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACVtB,OAAA,CAACJ,MAAM;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACTtB,OAAA,CAACT,IAAI;UAAC0C,IAAI,EAAC,UAAU;UAACD,OAAO,EAAC,OAAO;UAACE,MAAM,EAAC,SAAS;UAACC,SAAS,EAAE;YAACC,CAAC,EAAE;UAAC;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAGd;AAACnB,EAAA,CAxCQF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}