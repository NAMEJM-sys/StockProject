{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\ADXAnalysis2.js\",\n  _s = $RefreshSig$();\n// ADXAnalysis2.js\n\nimport React, { useState, useEffect } from 'react';\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ADXAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [adxData, setADXData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n\n  // 지수 이동 평균(EMA) 계산 함수\n  const calculateEMA = (values, period) => {\n    const k = 2 / (period + 1);\n    let ema = [];\n    values.forEach((value, index) => {\n      if (index === 0) {\n        ema.push(value);\n      } else {\n        ema.push(value * k + ema[index - 1] * (1 - k));\n      }\n    });\n    return ema;\n  };\n  const analyzeDICrossovers = (adxData, period = 14) => {\n    if (adxData.length < period + 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n\n    // DI+와 DI-의 값 추출\n    const diPlusValues = adxData.map(data => data.DI14Plus);\n    const diMinusValues = adxData.map(data => data.DI14Minus);\n\n    // EMA 계산\n    const diPlusEMA = calculateEMA(diPlusValues, period);\n    const diMinusEMA = calculateEMA(diMinusValues, period);\n\n    // 최근 값과 이전 값 가져오기\n    const currentDiPlusEMA = diPlusEMA[diPlusEMA.length - 1];\n    const currentDiMinusEMA = diMinusEMA[diMinusEMA.length - 1];\n    const prevDiPlusEMA = diPlusEMA[diPlusEMA.length - 2];\n    const prevDiMinusEMA = diMinusEMA[diMinusEMA.length - 2];\n    let result = '<strong>DI+와 DI- 이동 평균 교차 분석</strong><br/><br/>';\n    result += 'DI+는 상승 압력을, DI-는 하락 압력을 나타냅니다. 두 지표의 이동 평균 교차를 통해 추세 전환 신호를 파악할 수 있습니다.<br/><br/>';\n    if (prevDiPlusEMA <= prevDiMinusEMA && currentDiPlusEMA > currentDiMinusEMA) {\n      result += '매수 신호 발생: DI+의 EMA가 DI-의 EMA를 상향 돌파했습니다.<br/>';\n    } else if (prevDiPlusEMA >= prevDiMinusEMA && currentDiPlusEMA < currentDiMinusEMA) {\n      result += '매도 신호 발생: DI+의 EMA가 DI-의 EMA를 하향 돌파했습니다.<br/>';\n    } else {\n      result += 'DI+와 DI-의 EMA 사이에 특별한 교차 신호가 없습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (adxData.length > 0) {\n      const result = analyzeDICrossovers(adxData);\n      setAnalysisResult(result);\n    }\n  }, [adxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchADXData, {\n      stockCode: stockCode,\n      onADXFetch: setADXData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"DI+\\uC640 DI- \\uC774\\uB3D9 \\uD3C9\\uADE0 \\uAD50\\uCC28 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(ADXAnalysis2, \"5Dm60htkzevDfgZ/oo7jhbn3XPE=\");\n_c = ADXAnalysis2;\nexport default ADXAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"ADXAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchADXData","jsxDEV","_jsxDEV","ADXAnalysis2","stockCode","_s","adxData","setADXData","analysisResult","setAnalysisResult","calculateEMA","values","period","k","ema","forEach","value","index","push","analyzeDICrossovers","length","diPlusValues","map","data","DI14Plus","diMinusValues","DI14Minus","diPlusEMA","diMinusEMA","currentDiPlusEMA","currentDiMinusEMA","prevDiPlusEMA","prevDiMinusEMA","result","children","onADXFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/ADXAnalysis2.js"],"sourcesContent":["// ADXAnalysis2.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\r\n\r\nfunction ADXAnalysis2({ stockCode }) {\r\n    const [adxData, setADXData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    // 지수 이동 평균(EMA) 계산 함수\r\n    const calculateEMA = (values, period) => {\r\n        const k = 2 / (period + 1);\r\n        let ema = [];\r\n        values.forEach((value, index) => {\r\n            if (index === 0) {\r\n                ema.push(value);\r\n            } else {\r\n                ema.push(value * k + ema[index - 1] * (1 - k));\r\n            }\r\n        });\r\n        return ema;\r\n    };\r\n\r\n    const analyzeDICrossovers = (adxData, period = 14) => {\r\n        if (adxData.length < period + 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        // DI+와 DI-의 값 추출\r\n        const diPlusValues = adxData.map(data => data.DI14Plus);\r\n        const diMinusValues = adxData.map(data => data.DI14Minus);\r\n\r\n        // EMA 계산\r\n        const diPlusEMA = calculateEMA(diPlusValues, period);\r\n        const diMinusEMA = calculateEMA(diMinusValues, period);\r\n\r\n        // 최근 값과 이전 값 가져오기\r\n        const currentDiPlusEMA = diPlusEMA[diPlusEMA.length - 1];\r\n        const currentDiMinusEMA = diMinusEMA[diMinusEMA.length - 1];\r\n        const prevDiPlusEMA = diPlusEMA[diPlusEMA.length - 2];\r\n        const prevDiMinusEMA = diMinusEMA[diMinusEMA.length - 2];\r\n\r\n        let result = '<strong>DI+와 DI- 이동 평균 교차 분석</strong><br/><br/>';\r\n        result += 'DI+는 상승 압력을, DI-는 하락 압력을 나타냅니다. 두 지표의 이동 평균 교차를 통해 추세 전환 신호를 파악할 수 있습니다.<br/><br/>';\r\n\r\n        if (prevDiPlusEMA <= prevDiMinusEMA && currentDiPlusEMA > currentDiMinusEMA) {\r\n            result += '매수 신호 발생: DI+의 EMA가 DI-의 EMA를 상향 돌파했습니다.<br/>';\r\n        } else if (prevDiPlusEMA >= prevDiMinusEMA && currentDiPlusEMA < currentDiMinusEMA) {\r\n            result += '매도 신호 발생: DI+의 EMA가 DI-의 EMA를 하향 돌파했습니다.<br/>';\r\n        } else {\r\n            result += 'DI+와 DI-의 EMA 사이에 특별한 교차 신호가 없습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (adxData.length > 0) {\r\n            const result = analyzeDICrossovers(adxData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [adxData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchADXData stockCode={stockCode} onADXFetch={setADXData} />\r\n            <h4>DI+와 DI- 이동 평균 교차 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ADXAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}