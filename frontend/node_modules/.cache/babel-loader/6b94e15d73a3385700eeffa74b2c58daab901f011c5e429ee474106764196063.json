{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\IchimokuAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchIchimokuData from '../ComponentsFetch/FetchStockOrignal/FetchIchimokuData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IchimokuAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [ichimokuData, setIchimokuData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeTenkanKijunCross = data => {\n    if (data.length < 2) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = data.length - 1;\n    const prevData = data[lastIndex - 1];\n    const currentData = data[lastIndex];\n    const prevTenkan = prevData.Tenkan_sen;\n    const prevKijun = prevData.Kijun_sen;\n    const currentTenkan = currentData.Tenkan_sen;\n    const currentKijun = currentData.Kijun_sen;\n    let result = '<strong>전환선과 기준선의 교차 분석</strong><br/><br/>';\n\n    // 골든 크로스 확인 (매수 신호)\n    if (prevTenkan <= prevKijun && currentTenkan > currentKijun) {\n      result += '매수 신호 발생: 전환선이 기준선을 상향 돌파했습니다.<br/>';\n    }\n    // 데드 크로스 확인 (매도 신호)\n    else if (prevTenkan >= prevKijun && currentTenkan < currentKijun) {\n      result += '매도 신호 발생: 전환선이 기준선을 하향 돌파했습니다.<br/>';\n    } else {\n      result += '전환선과 기준선 사이에 교차 신호가 없습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (ichimokuData.length > 0) {\n      const result = analyzeTenkanKijunCross(ichimokuData);\n      setAnalysisResult(result);\n    }\n  }, [ichimokuData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchIchimokuData, {\n      stockCode: stockCode,\n      onIchimokuFetch: setIchimokuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Ichimoku Cloud \\uC804\\uD658\\uC120\\uACFC \\uAE30\\uC900\\uC120 \\uAD50\\uCC28 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(IchimokuAnalysis1, \"cbvlJTPc1AjlqxLi3pd4z1dZId0=\");\n_c = IchimokuAnalysis1;\nexport default IchimokuAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"IchimokuAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchIchimokuData","jsxDEV","_jsxDEV","IchimokuAnalysis1","stockCode","_s","ichimokuData","setIchimokuData","analysisResult","setAnalysisResult","analyzeTenkanKijunCross","data","length","lastIndex","prevData","currentData","prevTenkan","Tenkan_sen","prevKijun","Kijun_sen","currentTenkan","currentKijun","result","children","onIchimokuFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/IchimokuAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchIchimokuData from '../ComponentsFetch/FetchStockOrignal/FetchIchimokuData';\r\n\r\nfunction IchimokuAnalysis1({ stockCode }) {\r\n    const [ichimokuData, setIchimokuData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeTenkanKijunCross = (data) => {\r\n        if (data.length < 2) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = data.length - 1;\r\n        const prevData = data[lastIndex - 1];\r\n        const currentData = data[lastIndex];\r\n\r\n        const prevTenkan = prevData.Tenkan_sen;\r\n        const prevKijun = prevData.Kijun_sen;\r\n        const currentTenkan = currentData.Tenkan_sen;\r\n        const currentKijun = currentData.Kijun_sen;\r\n\r\n        let result = '<strong>전환선과 기준선의 교차 분석</strong><br/><br/>';\r\n\r\n        // 골든 크로스 확인 (매수 신호)\r\n        if (prevTenkan <= prevKijun && currentTenkan > currentKijun) {\r\n            result += '매수 신호 발생: 전환선이 기준선을 상향 돌파했습니다.<br/>';\r\n        }\r\n        // 데드 크로스 확인 (매도 신호)\r\n        else if (prevTenkan >= prevKijun && currentTenkan < currentKijun) {\r\n            result += '매도 신호 발생: 전환선이 기준선을 하향 돌파했습니다.<br/>';\r\n        } else {\r\n            result += '전환선과 기준선 사이에 교차 신호가 없습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ichimokuData.length > 0) {\r\n            const result = analyzeTenkanKijunCross(ichimokuData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [ichimokuData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchIchimokuData stockCode={stockCode} onIchimokuFetch={setIchimokuData} />\r\n            <h4>Ichimoku Cloud 전환선과 기준선 교차 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IchimokuAnalysis1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,wDAAwD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,SAASC,iBAAiBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,uBAAuB,GAAIC,IAAI,IAAK;IACtC,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACjB,OAAO,iBAAiB;IAC5B;IAEA,MAAMC,SAAS,GAAGF,IAAI,CAACC,MAAM,GAAG,CAAC;IACjC,MAAME,QAAQ,GAAGH,IAAI,CAACE,SAAS,GAAG,CAAC,CAAC;IACpC,MAAME,WAAW,GAAGJ,IAAI,CAACE,SAAS,CAAC;IAEnC,MAAMG,UAAU,GAAGF,QAAQ,CAACG,UAAU;IACtC,MAAMC,SAAS,GAAGJ,QAAQ,CAACK,SAAS;IACpC,MAAMC,aAAa,GAAGL,WAAW,CAACE,UAAU;IAC5C,MAAMI,YAAY,GAAGN,WAAW,CAACI,SAAS;IAE1C,IAAIG,MAAM,GAAG,4CAA4C;;IAEzD;IACA,IAAIN,UAAU,IAAIE,SAAS,IAAIE,aAAa,GAAGC,YAAY,EAAE;MACzDC,MAAM,IAAI,qCAAqC;IACnD;IACA;IAAA,KACK,IAAIN,UAAU,IAAIE,SAAS,IAAIE,aAAa,GAAGC,YAAY,EAAE;MAC9DC,MAAM,IAAI,qCAAqC;IACnD,CAAC,MAAM;MACHA,MAAM,IAAI,gCAAgC;IAC9C;IAEA,OAAOA,MAAM;EACjB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZ,IAAIO,YAAY,CAACM,MAAM,GAAG,CAAC,EAAE;MACzB,MAAMU,MAAM,GAAGZ,uBAAuB,CAACJ,YAAY,CAAC;MACpDG,iBAAiB,CAACa,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAAChB,YAAY,CAAC,CAAC;EAElB,oBACIJ,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACF,iBAAiB;MAACI,SAAS,EAAEA,SAAU;MAACoB,eAAe,EAAEjB;IAAgB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7E1B,OAAA;MAAAqB,QAAA,EAAI;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtC1B,OAAA;MAAG2B,uBAAuB,EAAE;QAAEC,MAAM,EAAEtB;MAAe;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAACvB,EAAA,CAhDQF,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAkD1B,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}