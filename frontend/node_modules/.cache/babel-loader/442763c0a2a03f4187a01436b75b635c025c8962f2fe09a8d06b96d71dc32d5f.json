{"ast":null,"code":"import mean from \"./mean.js\";\nimport standardDeviation from \"./standard_deviation.js\";\n\n/**\n * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean\n * of a sample to a known value, x.\n *\n * in this case, we're trying to determine whether the\n * population mean is equal to the value that we know, which is `x`\n * here. Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} expectedValue expected value of the population mean\n * @returns {number} value\n * @example\n * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'\n */\nfunction tTest(x, expectedValue) {\n  // The mean of the sample\n  const sampleMean = mean(x);\n\n  // The standard deviation of the sample\n  const sd = standardDeviation(x);\n\n  // Square root the length of the sample\n  const rootN = Math.sqrt(x.length);\n\n  // returning the t value\n  return (sampleMean - expectedValue) / (sd / rootN);\n}\nexport default tTest;","map":{"version":3,"names":["mean","standardDeviation","tTest","x","expectedValue","sampleMean","sd","rootN","Math","sqrt","length"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/t_test.js"],"sourcesContent":["import mean from \"./mean.js\";\nimport standardDeviation from \"./standard_deviation.js\";\n\n/**\n * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean\n * of a sample to a known value, x.\n *\n * in this case, we're trying to determine whether the\n * population mean is equal to the value that we know, which is `x`\n * here. Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} expectedValue expected value of the population mean\n * @returns {number} value\n * @example\n * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'\n */\nfunction tTest(x, expectedValue) {\n    // The mean of the sample\n    const sampleMean = mean(x);\n\n    // The standard deviation of the sample\n    const sd = standardDeviation(x);\n\n    // Square root the length of the sample\n    const rootN = Math.sqrt(x.length);\n\n    // returning the t value\n    return (sampleMean - expectedValue) / (sd / rootN);\n}\n\nexport default tTest;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,iBAAiB,MAAM,yBAAyB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,CAAC,EAAEC,aAAa,EAAE;EAC7B;EACA,MAAMC,UAAU,GAAGL,IAAI,CAACG,CAAC,CAAC;;EAE1B;EACA,MAAMG,EAAE,GAAGL,iBAAiB,CAACE,CAAC,CAAC;;EAE/B;EACA,MAAMI,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACN,CAAC,CAACO,MAAM,CAAC;;EAEjC;EACA,OAAO,CAACL,UAAU,GAAGD,aAAa,KAAKE,EAAE,GAAGC,KAAK,CAAC;AACtD;AAEA,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}