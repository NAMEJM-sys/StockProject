{"ast":null,"code":"/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) {\n  // Return a function that computes a `y` value for each\n  // x value it is given, based on the values of `b` and `a`\n  // that we just computed.\n  return function (x) {\n    return mb.b + mb.m * x;\n  };\n}\nexport default linearRegressionLine;","map":{"version":3,"names":["linearRegressionLine","mb","x","b","m"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/linear_regression_line.js"],"sourcesContent":["/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nexport default linearRegressionLine;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoBA,CAACC,EAAE,CAAC,gCAAgC;EAC7D;EACA;EACA;EACA,OAAO,UAAUC,CAAC,EAAE;IAChB,OAAOD,EAAE,CAACE,CAAC,GAAGF,EAAE,CAACG,CAAC,GAAGF,CAAC;EAC1B,CAAC;AACL;AAEA,eAAeF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}