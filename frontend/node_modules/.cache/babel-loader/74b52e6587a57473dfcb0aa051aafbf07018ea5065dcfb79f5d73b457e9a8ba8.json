{"ast":null,"code":"/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var values = [1, 2, 3, 4];\n * sampleWithReplacement(values, 2); // returns 2 random values, like [2, 4];\n */\nfunction sampleWithReplacement(x, n, randomSource) {\n  if (x.length === 0) {\n    return [];\n  }\n\n  // a custom random number source can be provided if you want to use\n  // a fixed seed or another random number generator, like\n  // [random-js](https://www.npmjs.org/package/random-js)\n  randomSource = randomSource || Math.random;\n  const length = x.length;\n  const sample = [];\n  for (let i = 0; i < n; i++) {\n    const index = Math.floor(randomSource() * length);\n    sample.push(x[index]);\n  }\n  return sample;\n}\nexport default sampleWithReplacement;","map":{"version":3,"names":["sampleWithReplacement","x","n","randomSource","length","Math","random","sample","i","index","floor","push"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/sample_with_replacement.js"],"sourcesContent":["/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var values = [1, 2, 3, 4];\n * sampleWithReplacement(values, 2); // returns 2 random values, like [2, 4];\n */\nfunction sampleWithReplacement(x, n, randomSource) {\n    if (x.length === 0) {\n        return [];\n    }\n\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    const length = x.length;\n    const sample = [];\n\n    for (let i = 0; i < n; i++) {\n        const index = Math.floor(randomSource() * length);\n\n        sample.push(x[index]);\n    }\n\n    return sample;\n}\n\nexport default sampleWithReplacement;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAqBA,CAACC,CAAC,EAAEC,CAAC,EAAEC,YAAY,EAAE;EAC/C,IAAIF,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;IAChB,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACAD,YAAY,GAAGA,YAAY,IAAIE,IAAI,CAACC,MAAM;EAE1C,MAAMF,MAAM,GAAGH,CAAC,CAACG,MAAM;EACvB,MAAMG,MAAM,GAAG,EAAE;EAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,CAAC,EAAEM,CAAC,EAAE,EAAE;IACxB,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAAC,CAAC,GAAGC,MAAM,CAAC;IAEjDG,MAAM,CAACI,IAAI,CAACV,CAAC,CAACQ,KAAK,CAAC,CAAC;EACzB;EAEA,OAAOF,MAAM;AACjB;AAEA,eAAeP,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}