{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\RSIAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FetchRSIData from \"./FetchRSIData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RSIAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [RsiData, setRsiData] = useState(null);\n  const [recentRsiValue, setRecentRsiValue] = useState({\n    value: null,\n    date: null\n  });\n  const handleTodayRsi = data => {\n    setRsiData(data);\n  };\n  useEffect(() => {\n    if (RsiData && RsiData.length > 0) {\n      const recentRsiData = RsiData[RsiData.length - 1];\n      const recentRsiDate1 = recentRsiData.date;\n      const recentRsiDate = recentRsiDate1.split(recentRsiDate1[0]);\n      const newRecentRsiValue = recentRsiData.RSI.toFixed(2);\n      if (recentRsiValue.value !== newRecentRsiValue || recentRsiDate.date !== newRecentRsiValue) {\n        setRecentRsiValue({\n          value: newRecentRsiValue,\n          date: recentRsiDate\n        });\n      }\n    }\n  }, [RsiData, {\n    recentRsiValue,\n    setRecentRsiValue\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchRSIData, {\n      stockCode: stockCode,\n      onRSIFetch: handleTodayRsi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), recentRsiValue !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [recentRsiValue.date, \"\\uC758 RSI\\uC758 \\uAC12\\uC740 \", recentRsiValue.value, \" \\uC785\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(RSIAnalysis1, \"e++G7qi9khouV+QxCLYT9Zgq7HU=\");\n_c = RSIAnalysis1;\nexport default RSIAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"RSIAnalysis1\");","map":{"version":3,"names":["React","useEffect","useState","FetchRSIData","jsxDEV","_jsxDEV","RSIAnalysis1","stockCode","_s","RsiData","setRsiData","recentRsiValue","setRecentRsiValue","value","date","handleTodayRsi","data","length","recentRsiData","recentRsiDate1","recentRsiDate","split","newRecentRsiValue","RSI","toFixed","children","onRSIFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/RSIAnalysis1.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport FetchRSIData from \"./FetchRSIData\";\r\n\r\nfunction RSIAnalysis1({ stockCode }){\r\n    const [RsiData, setRsiData] = useState(null)\r\n    const [recentRsiValue, setRecentRsiValue] = useState({ value: null, date: null });\r\n\r\n    const handleTodayRsi = (data) => {\r\n        setRsiData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (RsiData && RsiData.length > 0) {\r\n            const recentRsiData = RsiData[RsiData.length - 1];\r\n            const recentRsiDate1 = recentRsiData.date;\r\n            const recentRsiDate = recentRsiDate1.split(recentRsiDate1[0])\r\n            const newRecentRsiValue = recentRsiData.RSI.toFixed(2);\r\n\r\n\r\n            if (recentRsiValue.value !== newRecentRsiValue || recentRsiDate.date !== newRecentRsiValue) {\r\n                setRecentRsiValue({ value: newRecentRsiValue, date: recentRsiDate });\r\n            }\r\n        }\r\n    }, [RsiData, {recentRsiValue, setRecentRsiValue}]);\r\n\r\n    return(\r\n        <div>\r\n            <FetchRSIData stockCode={stockCode} onRSIFetch={handleTodayRsi} />\r\n            {recentRsiValue !== null && (\r\n                <p>{recentRsiValue.date}의 RSI의 값은 {recentRsiValue.value} 입니다.</p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RSIAnalysis1"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAC;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;EAEjF,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7BN,UAAU,CAACM,IAAI,CAAC;EACpB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ,IAAIQ,OAAO,IAAIA,OAAO,CAACQ,MAAM,GAAG,CAAC,EAAE;MAC/B,MAAMC,aAAa,GAAGT,OAAO,CAACA,OAAO,CAACQ,MAAM,GAAG,CAAC,CAAC;MACjD,MAAME,cAAc,GAAGD,aAAa,CAACJ,IAAI;MACzC,MAAMM,aAAa,GAAGD,cAAc,CAACE,KAAK,CAACF,cAAc,CAAC,CAAC,CAAC,CAAC;MAC7D,MAAMG,iBAAiB,GAAGJ,aAAa,CAACK,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;MAGtD,IAAIb,cAAc,CAACE,KAAK,KAAKS,iBAAiB,IAAIF,aAAa,CAACN,IAAI,KAAKQ,iBAAiB,EAAE;QACxFV,iBAAiB,CAAC;UAAEC,KAAK,EAAES,iBAAiB;UAAER,IAAI,EAAEM;QAAc,CAAC,CAAC;MACxE;IACJ;EACJ,CAAC,EAAE,CAACX,OAAO,EAAE;IAACE,cAAc;IAAEC;EAAiB,CAAC,CAAC,CAAC;EAElD,oBACIP,OAAA;IAAAoB,QAAA,gBACIpB,OAAA,CAACF,YAAY;MAACI,SAAS,EAAEA,SAAU;MAACmB,UAAU,EAAEX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjEnB,cAAc,KAAK,IAAI,iBACpBN,OAAA;MAAAoB,QAAA,GAAId,cAAc,CAACG,IAAI,EAAC,gCAAU,EAACH,cAAc,CAACE,KAAK,EAAC,sBAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACtB,EAAA,CA9BQF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAgCrB,eAAeA,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}