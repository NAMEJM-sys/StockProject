{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\MFICalculations1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFICalculations1({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n\n  // 점수 부여 함수들\n  const getMFIStateScore = currentMFI => {\n    if (currentMFI > 80) {\n      return 7; // 매도\n    } else if (currentMFI < 20) {\n      return 3; // 매수\n    } else {\n      return 5; // 보통\n    }\n  };\n  const getMACrossoverScore = currentMFI_MA_Crossover => {\n    if (currentMFI_MA_Crossover === 1) {\n      return 3; // 매수\n    } else if (currentMFI_MA_Crossover === -1) {\n      return 7; // 매도\n    } else {\n      return 5; // 보통\n    }\n  };\n  const getPriceMFITrendScore = (priceTrendDirection, mfiTrendDirection) => {\n    if (priceTrendDirection === '상승' && mfiTrendDirection === '상승') {\n      return 1; // 강한 매수\n    } else if (priceTrendDirection === '하락' && mfiTrendDirection === '하락') {\n      return 10; // 강한 매도\n    } else if (priceTrendDirection === '상승' && mfiTrendDirection === '하락') {\n      return 7; // 매도\n    } else if (priceTrendDirection === '하락' && mfiTrendDirection === '상승') {\n      return 3; // 매수\n    } else {\n      return 5; // 보통\n    }\n  };\n  const calculateOverallScore = (currentMFI, currentMFI_MA_Crossover, priceTrendDirection, mfiTrendDirection) => {\n    const mfiStateScore = getMFIStateScore(currentMFI);\n    const macrossoverScore = getMACrossoverScore(currentMFI_MA_Crossover);\n    const trendScore = getPriceMFITrendScore(priceTrendDirection, mfiTrendDirection);\n    const elementScores = [mfiStateScore, macrossoverScore, trendScore];\n    const weights = [1, 2, 3]; // 중요도 가중치\n    const weightedScores = elementScores.map((score, index) => score * weights[index]);\n    const totalWeight = weights.reduce((a, b) => a + b, 0);\n    const overallScore = weightedScores.reduce((a, b) => a + b, 0) / totalWeight;\n    return overallScore;\n  };\n  const analyzeMFITrend = (mfiData, period = 14) => {\n    var _mfiData$lastIndex, _mfiData, _mfiData$lastIndex2;\n    const lastIndex = mfiData.length - 1;\n    if (lastIndex < period) return null;\n    const currentMFI = (_mfiData$lastIndex = mfiData[lastIndex]) === null || _mfiData$lastIndex === void 0 ? void 0 : _mfiData$lastIndex.MFI;\n    const prevMFI = (_mfiData = mfiData[lastIndex - 1]) === null || _mfiData === void 0 ? void 0 : _mfiData.MFI;\n    const mfiTrendData = mfiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.MFI);\n    const totalChange = mfiTrendData[mfiTrendData.length - 1] - mfiTrendData[0];\n    const mfiTrendDirection = totalChange > 0 ? '상승' : '하락';\n    const priceTrend = mfiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.close);\n    const priceChange = priceTrend[priceTrend.length - 1] - priceTrend[0];\n    const priceTrendDirection = priceChange > 0 ? '상승' : '하락';\n    const currentMFI_MA_Crossover = (_mfiData$lastIndex2 = mfiData[lastIndex]) === null || _mfiData$lastIndex2 === void 0 ? void 0 : _mfiData$lastIndex2.MFI_MA_Crossover;\n    if (currentMFI === undefined || prevMFI === undefined) {\n      return null;\n    }\n    const overallScore = calculateOverallScore(currentMFI, currentMFI_MA_Crossover, priceTrendDirection, mfiTrendDirection);\n    console.log(\"MFI1\", overallScore.toFixed(2));\n    return {\n      overallScore,\n      currentMFI\n    };\n  };\n  useEffect(() => {\n    if (mfiData.length > 0) {\n      const result = analyzeMFITrend(mfiData);\n      if (result !== null) {\n        if (onScoreCalculated) {\n          onScoreCalculated(result);\n        }\n      }\n    }\n  }, [mfiData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(MFICalculations1, \"lM8TmYUTBMrFnBeQ0YovbUa8P7s=\");\n_c = MFICalculations1;\nexport default MFICalculations1;\nvar _c;\n$RefreshReg$(_c, \"MFICalculations1\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","jsxDEV","_jsxDEV","MFICalculations1","stockCode","onScoreCalculated","_s","mfiData","setMFIData","getMFIStateScore","currentMFI","getMACrossoverScore","currentMFI_MA_Crossover","getPriceMFITrendScore","priceTrendDirection","mfiTrendDirection","calculateOverallScore","mfiStateScore","macrossoverScore","trendScore","elementScores","weights","weightedScores","map","score","index","totalWeight","reduce","a","b","overallScore","analyzeMFITrend","period","_mfiData$lastIndex","_mfiData","_mfiData$lastIndex2","lastIndex","length","MFI","prevMFI","mfiTrendData","slice","data","totalChange","priceTrend","close","priceChange","MFI_MA_Crossover","undefined","console","log","toFixed","result","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/MFICalculations1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\r\n\r\nfunction MFICalculations1({ stockCode, onScoreCalculated }) {\r\n    const [mfiData, setMFIData] = useState([]);\r\n\r\n    // 점수 부여 함수들\r\n    const getMFIStateScore = (currentMFI) => {\r\n        if (currentMFI > 80) {\r\n            return 7; // 매도\r\n        } else if (currentMFI < 20) {\r\n            return 3; // 매수\r\n        } else {\r\n            return 5; // 보통\r\n        }\r\n    };\r\n\r\n    const getMACrossoverScore = (currentMFI_MA_Crossover) => {\r\n        if (currentMFI_MA_Crossover === 1) {\r\n            return 3; // 매수\r\n        } else if (currentMFI_MA_Crossover === -1) {\r\n            return 7; // 매도\r\n        } else {\r\n            return 5; // 보통\r\n        }\r\n    };\r\n\r\n    const getPriceMFITrendScore = (priceTrendDirection, mfiTrendDirection) => {\r\n        if (priceTrendDirection === '상승' && mfiTrendDirection === '상승') {\r\n            return 1; // 강한 매수\r\n        } else if (priceTrendDirection === '하락' && mfiTrendDirection === '하락') {\r\n            return 10; // 강한 매도\r\n        } else if (priceTrendDirection === '상승' && mfiTrendDirection === '하락') {\r\n            return 7; // 매도\r\n        } else if (priceTrendDirection === '하락' && mfiTrendDirection === '상승') {\r\n            return 3; // 매수\r\n        } else {\r\n            return 5; // 보통\r\n        }\r\n    };\r\n\r\n    const calculateOverallScore = (currentMFI, currentMFI_MA_Crossover,\r\n                                   priceTrendDirection, mfiTrendDirection) => {\r\n        const mfiStateScore = getMFIStateScore(currentMFI);\r\n        const macrossoverScore = getMACrossoverScore(currentMFI_MA_Crossover);\r\n        const trendScore = getPriceMFITrendScore(priceTrendDirection, mfiTrendDirection);\r\n\r\n        const elementScores = [mfiStateScore, macrossoverScore, trendScore];\r\n        const weights = [1, 2, 3]; // 중요도 가중치\r\n        const weightedScores = elementScores.map((score, index) => score * weights[index]);\r\n        const totalWeight = weights.reduce((a, b) => a + b, 0);\r\n        const overallScore = weightedScores.reduce((a, b) => a + b, 0) / totalWeight;\r\n\r\n        return overallScore;\r\n    };\r\n\r\n    const analyzeMFITrend = (mfiData, period = 14) => {\r\n        const lastIndex = mfiData.length - 1;\r\n        if (lastIndex < period) return null;\r\n\r\n        const currentMFI = mfiData[lastIndex]?.MFI;\r\n        const prevMFI = mfiData[lastIndex - 1]?.MFI;\r\n\r\n        const mfiTrendData = mfiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.MFI);\r\n        const totalChange = mfiTrendData[mfiTrendData.length - 1] - mfiTrendData[0];\r\n        const mfiTrendDirection = totalChange > 0 ? '상승' : '하락';\r\n\r\n        const priceTrend = mfiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.close);\r\n        const priceChange = priceTrend[priceTrend.length - 1] - priceTrend[0];\r\n        const priceTrendDirection = priceChange > 0 ? '상승' : '하락';\r\n\r\n        const currentMFI_MA_Crossover = mfiData[lastIndex]?.MFI_MA_Crossover;\r\n\r\n        if (currentMFI === undefined || prevMFI === undefined) {\r\n            return null;\r\n        }\r\n\r\n        const overallScore = calculateOverallScore(currentMFI, currentMFI_MA_Crossover, priceTrendDirection, mfiTrendDirection);\r\n        console.log(\"MFI1\", overallScore.toFixed(2));\r\n        return {overallScore, currentMFI };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mfiData.length > 0) {\r\n            const result = analyzeMFITrend(mfiData);\r\n            if (result !== null) {\r\n                if (onScoreCalculated) {\r\n                    onScoreCalculated(result);\r\n                }\r\n            }\r\n        }\r\n    }, [mfiData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MFICalculations1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}