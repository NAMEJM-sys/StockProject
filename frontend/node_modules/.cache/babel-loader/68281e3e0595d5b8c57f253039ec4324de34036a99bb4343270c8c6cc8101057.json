{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\IchimokuCalculations2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchIchimokuData from '../Fetch/FetchStockOrignal/FetchIchimokuData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IchimokuCalculations2({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [ichimokuData, setIchimokuData] = useState([]);\n  const calculatePriceCloudRelationScore = data => {\n    if (data.length < 26) {\n      return null;\n    }\n    const lastIndex = data.length - 1;\n    const currentData = data[lastIndex];\n    const currentClose = currentData.close;\n    const senkouA = currentData.Senkou_Span_A;\n    const senkouB = currentData.Senkou_Span_B;\n    const upperCloud = Math.max(senkouA, senkouB);\n    const lowerCloud = Math.min(senkouA, senkouB);\n    let score = 5; // 기본 보통\n\n    if (currentClose > upperCloud) {\n      score = 3; // 매수\n    } else if (currentClose < lowerCloud) {\n      score = 7; // 매도\n    }\n\n    // 구름대 돌파 여부 확인\n    const prevData = data[lastIndex - 1];\n    const prevClose = prevData.close;\n    if (prevClose <= lowerCloud && currentClose > upperCloud) {\n      score -= 1; // 매수 신호 강화\n    } else if (prevClose >= upperCloud && currentClose < lowerCloud) {\n      score += 1; // 매도 신호 강화\n    }\n\n    // 점수 범위 조정\n    score = Math.max(1, Math.min(10, score));\n    return score;\n  };\n  useEffect(() => {\n    if (ichimokuData.length > 0) {\n      const score = calculatePriceCloudRelationScore(ichimokuData);\n      if (score !== null && onScoreCalculated) {\n        onScoreCalculated(score);\n      }\n    }\n  }, [ichimokuData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FetchIchimokuData, {\n      stockCode: stockCode,\n      onIchimokuFetch: setIchimokuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(IchimokuCalculations2, \"9QlyzRC3VtbJaaxGJs3zFsM5sUg=\");\n_c = IchimokuCalculations2;\nexport default IchimokuCalculations2;\nvar _c;\n$RefreshReg$(_c, \"IchimokuCalculations2\");","map":{"version":3,"names":["React","useState","useEffect","FetchIchimokuData","jsxDEV","_jsxDEV","IchimokuCalculations2","stockCode","onScoreCalculated","_s","ichimokuData","setIchimokuData","calculatePriceCloudRelationScore","data","length","lastIndex","currentData","currentClose","close","senkouA","Senkou_Span_A","senkouB","Senkou_Span_B","upperCloud","Math","max","lowerCloud","min","score","prevData","prevClose","children","onIchimokuFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/IchimokuCalculations2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchIchimokuData from '../Fetch/FetchStockOrignal/FetchIchimokuData';\r\n\r\nfunction IchimokuCalculations2({ stockCode, onScoreCalculated }) {\r\n  const [ichimokuData, setIchimokuData] = useState([]);\r\n\r\n  const calculatePriceCloudRelationScore = (data) => {\r\n    if (data.length < 26) {\r\n      return null;\r\n    }\r\n\r\n    const lastIndex = data.length - 1;\r\n    const currentData = data[lastIndex];\r\n\r\n    const currentClose = currentData.close;\r\n    const senkouA = currentData.Senkou_Span_A;\r\n    const senkouB = currentData.Senkou_Span_B;\r\n\r\n    const upperCloud = Math.max(senkouA, senkouB);\r\n    const lowerCloud = Math.min(senkouA, senkouB);\r\n\r\n    let score = 5; // 기본 보통\r\n\r\n    if (currentClose > upperCloud) {\r\n      score = 3; // 매수\r\n    } else if (currentClose < lowerCloud) {\r\n      score = 7; // 매도\r\n    }\r\n\r\n    // 구름대 돌파 여부 확인\r\n    const prevData = data[lastIndex - 1];\r\n    const prevClose = prevData.close;\r\n\r\n    if (prevClose <= lowerCloud && currentClose > upperCloud) {\r\n      score -= 1; // 매수 신호 강화\r\n    } else if (prevClose >= upperCloud && currentClose < lowerCloud) {\r\n      score += 1; // 매도 신호 강화\r\n    }\r\n\r\n    // 점수 범위 조정\r\n    score = Math.max(1, Math.min(10, score));\r\n\r\n    return score;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ichimokuData.length > 0) {\r\n      const score = calculatePriceCloudRelationScore(ichimokuData);\r\n      if (score !== null && onScoreCalculated) {\r\n        onScoreCalculated(score);\r\n      }\r\n    }\r\n  }, [ichimokuData]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchIchimokuData stockCode={stockCode} onIchimokuFetch={setIchimokuData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IchimokuCalculations2;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,SAASC,qBAAqBA,CAAC;EAAEC,SAAS;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,gCAAgC,GAAIC,IAAI,IAAK;IACjD,IAAIA,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;MACpB,OAAO,IAAI;IACb;IAEA,MAAMC,SAAS,GAAGF,IAAI,CAACC,MAAM,GAAG,CAAC;IACjC,MAAME,WAAW,GAAGH,IAAI,CAACE,SAAS,CAAC;IAEnC,MAAME,YAAY,GAAGD,WAAW,CAACE,KAAK;IACtC,MAAMC,OAAO,GAAGH,WAAW,CAACI,aAAa;IACzC,MAAMC,OAAO,GAAGL,WAAW,CAACM,aAAa;IAEzC,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACN,OAAO,EAAEE,OAAO,CAAC;IAC7C,MAAMK,UAAU,GAAGF,IAAI,CAACG,GAAG,CAACR,OAAO,EAAEE,OAAO,CAAC;IAE7C,IAAIO,KAAK,GAAG,CAAC,CAAC,CAAC;;IAEf,IAAIX,YAAY,GAAGM,UAAU,EAAE;MAC7BK,KAAK,GAAG,CAAC,CAAC,CAAC;IACb,CAAC,MAAM,IAAIX,YAAY,GAAGS,UAAU,EAAE;MACpCE,KAAK,GAAG,CAAC,CAAC,CAAC;IACb;;IAEA;IACA,MAAMC,QAAQ,GAAGhB,IAAI,CAACE,SAAS,GAAG,CAAC,CAAC;IACpC,MAAMe,SAAS,GAAGD,QAAQ,CAACX,KAAK;IAEhC,IAAIY,SAAS,IAAIJ,UAAU,IAAIT,YAAY,GAAGM,UAAU,EAAE;MACxDK,KAAK,IAAI,CAAC,CAAC,CAAC;IACd,CAAC,MAAM,IAAIE,SAAS,IAAIP,UAAU,IAAIN,YAAY,GAAGS,UAAU,EAAE;MAC/DE,KAAK,IAAI,CAAC,CAAC,CAAC;IACd;;IAEA;IACAA,KAAK,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACG,GAAG,CAAC,EAAE,EAAEC,KAAK,CAAC,CAAC;IAExC,OAAOA,KAAK;EACd,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMc,KAAK,GAAGhB,gCAAgC,CAACF,YAAY,CAAC;MAC5D,IAAIkB,KAAK,KAAK,IAAI,IAAIpB,iBAAiB,EAAE;QACvCA,iBAAiB,CAACoB,KAAK,CAAC;MAC1B;IACF;EACF,CAAC,EAAE,CAAClB,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAA0B,QAAA,eACE1B,OAAA,CAACF,iBAAiB;MAACI,SAAS,EAAEA,SAAU;MAACyB,eAAe,EAAErB;IAAgB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEV;AAAC3B,EAAA,CAxDQH,qBAAqB;AAAA+B,EAAA,GAArB/B,qBAAqB;AA0D9B,eAAeA,qBAAqB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}