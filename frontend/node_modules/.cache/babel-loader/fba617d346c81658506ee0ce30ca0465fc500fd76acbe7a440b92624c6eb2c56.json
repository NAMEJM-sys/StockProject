{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\SARAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchSARData from '../ComponentsFetch/FetchStockOrignal/FetchParabolicSARData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SARAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [sarData, setSARData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeTrendDirection = (sarData, period = 5) => {\n    if (sarData.length < period + 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    let result = '<strong>추세 방향 및 반전 지점 식별</strong><br/><br/>';\n    const recentData = sarData.slice(-period);\n    let upTrendCount = 0;\n    let downTrendCount = 0;\n    recentData.forEach(data => {\n      if (data.close > data.Parabolic_SAR) {\n        upTrendCount++;\n      } else if (data.close < data.Parabolic_SAR) {\n        downTrendCount++;\n      }\n    });\n\n    // 추세 방향 판단\n    if (upTrendCount === period) {\n      result += `최근 ${period}일 동안 가격이 SAR보다 위에 있어 <strong>상승 추세</strong>가 지속되고 있습니다.<br/>`;\n    } else if (downTrendCount === period) {\n      result += `최근 ${period}일 동안 가격이 SAR보다 아래에 있어 <strong>하락 추세</strong>가 지속되고 있습니다.<br/>`;\n    } else {\n      result += `최근 ${period}일 동안 추세가 명확하지 않습니다. 변동성이 높을 수 있습니다.<br/>`;\n    }\n\n    // 추세 반전 신호 감지\n    const prevData = sarData.slice(-period - 1, -1);\n    let trendReversal = false;\n    for (let i = 0; i < period; i++) {\n      var _prevData$i, _prevData$i2;\n      const prevClose = (_prevData$i = prevData[i]) === null || _prevData$i === void 0 ? void 0 : _prevData$i.close;\n      const prevSAR = (_prevData$i2 = prevData[i]) === null || _prevData$i2 === void 0 ? void 0 : _prevData$i2.Parabolic_SAR;\n      const currentClose = recentData[i].close;\n      const currentSAR = recentData[i].Parabolic_SAR;\n      if (prevClose <= prevSAR && currentClose > currentSAR) {\n        trendReversal = true;\n        result += `날짜 ${recentData[i].date}에 <strong>상승 추세로의 반전</strong> 신호가 발생했습니다.<br/>`;\n        break;\n      } else if (prevClose >= prevSAR && currentClose < currentSAR) {\n        trendReversal = true;\n        result += `날짜 ${recentData[i].date}에 <strong>하락 추세로의 반전</strong> 신호가 발생했습니다.<br/>`;\n        break;\n      }\n    }\n    if (!trendReversal) {\n      result += '최근 기간 동안 추세 반전 신호가 없습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (sarData.length > 0) {\n      const result = analyzeTrendDirection(sarData);\n      setAnalysisResult(result);\n    }\n  }, [sarData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchSARData, {\n      stockCode: stockCode,\n      onSARFetch: setSARData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Parabolic SAR \\uCD94\\uC138 \\uBC29\\uD5A5 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(SARAnalysis1, \"uaY1iG1v6plEnEC8Cn4dnZoyKP8=\");\n_c = SARAnalysis1;\nexport default SARAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"SARAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchSARData","jsxDEV","_jsxDEV","SARAnalysis1","stockCode","_s","sarData","setSARData","analysisResult","setAnalysisResult","analyzeTrendDirection","period","length","result","recentData","slice","upTrendCount","downTrendCount","forEach","data","close","Parabolic_SAR","prevData","trendReversal","i","_prevData$i","_prevData$i2","prevClose","prevSAR","currentClose","currentSAR","date","children","onSARFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/SARAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchSARData from '../ComponentsFetch/FetchStockOrignal/FetchParabolicSARData';\r\n\r\nfunction SARAnalysis1({ stockCode }) {\r\n    const [sarData, setSARData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeTrendDirection = (sarData, period = 5) => {\r\n        if (sarData.length < period + 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        let result = '<strong>추세 방향 및 반전 지점 식별</strong><br/><br/>';\r\n\r\n        const recentData = sarData.slice(-period);\r\n        let upTrendCount = 0;\r\n        let downTrendCount = 0;\r\n\r\n        recentData.forEach((data) => {\r\n            if (data.close > data.Parabolic_SAR) {\r\n                upTrendCount++;\r\n            } else if (data.close < data.Parabolic_SAR) {\r\n                downTrendCount++;\r\n            }\r\n        });\r\n\r\n        // 추세 방향 판단\r\n        if (upTrendCount === period) {\r\n            result += `최근 ${period}일 동안 가격이 SAR보다 위에 있어 <strong>상승 추세</strong>가 지속되고 있습니다.<br/>`;\r\n        } else if (downTrendCount === period) {\r\n            result += `최근 ${period}일 동안 가격이 SAR보다 아래에 있어 <strong>하락 추세</strong>가 지속되고 있습니다.<br/>`;\r\n        } else {\r\n            result += `최근 ${period}일 동안 추세가 명확하지 않습니다. 변동성이 높을 수 있습니다.<br/>`;\r\n        }\r\n\r\n        // 추세 반전 신호 감지\r\n        const prevData = sarData.slice(-period - 1, -1);\r\n        let trendReversal = false;\r\n\r\n        for (let i = 0; i < period; i++) {\r\n            const prevClose = prevData[i]?.close;\r\n            const prevSAR = prevData[i]?.Parabolic_SAR;\r\n            const currentClose = recentData[i].close;\r\n            const currentSAR = recentData[i].Parabolic_SAR;\r\n\r\n            if (prevClose <= prevSAR && currentClose > currentSAR) {\r\n                trendReversal = true;\r\n                result += `날짜 ${recentData[i].date}에 <strong>상승 추세로의 반전</strong> 신호가 발생했습니다.<br/>`;\r\n                break;\r\n            } else if (prevClose >= prevSAR && currentClose < currentSAR) {\r\n                trendReversal = true;\r\n                result += `날짜 ${recentData[i].date}에 <strong>하락 추세로의 반전</strong> 신호가 발생했습니다.<br/>`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!trendReversal) {\r\n            result += '최근 기간 동안 추세 반전 신호가 없습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (sarData.length > 0) {\r\n            const result = analyzeTrendDirection(sarData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [sarData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchSARData stockCode={stockCode} onSARFetch={setSARData} />\r\n            <h4>Parabolic SAR 추세 방향 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SARAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}