{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\ADXAnalysis4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\nimport { linearRegression } from 'simple-statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ADXAnalysis4({\n  stockCode\n}) {\n  _s();\n  const [adxData, setADXData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n\n  // 지수 이동 평균(EMA) 계산 함수\n  const calculateEMA = (values, period) => {\n    const k = 2 / (period + 1);\n    let ema = [];\n    values.forEach((value, index) => {\n      if (index === 0) {\n        ema.push(value);\n      } else {\n        ema.push(value * k + ema[index - 1] * (1 - k));\n      }\n    });\n    return ema;\n  };\n  const analyzeCombinedADX = (adxData, period = 14) => {\n    if (adxData.length < period) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const recentData = adxData.slice(-period);\n    const adxValues = recentData.map(data => data.ADX);\n    const diPlusValues = recentData.map(data => data.DI14Plus);\n    const diMinusValues = recentData.map(data => data.DI14Minus);\n    const indices = [...Array(period).keys()];\n\n    // ADX의 EMA 계산\n    const adxEMAArray = calculateEMA(adxValues, period);\n    const avgADX = adxEMAArray[adxEMAArray.length - 1];\n\n    // DI+와 DI-의 EMA 계산\n    const diPlusEMAArray = calculateEMA(diPlusValues, period);\n    const avgDIPlus = diPlusEMAArray[diPlusEMAArray.length - 1];\n    const diMinusEMAArray = calculateEMA(diMinusValues, period);\n    const avgDIMinus = diMinusEMAArray[diMinusEMAArray.length - 1];\n\n    // 선형 회귀를 통한 ADX 추세 분석\n    const regressionData = indices.map((x, i) => [x, adxValues[i]]);\n    const {\n      m: adxSlope\n    } = linearRegression(regressionData);\n    let result = '<strong>ADX 종합 분석</strong><br/><br/>';\n    result += 'ADX는 추세의 강도를, DI+와 DI-는 추세의 방향을 나타냅니다. 이들을 종합하여 현재 시장의 추세를 판단합니다.<br/><br/>';\n    result += `최근 ${period}일간 ADX의 EMA 값은 <strong>${avgADX.toFixed(2)}</strong>입니다.<br/>`;\n    result += `DI+의 EMA 값은 <strong>${avgDIPlus.toFixed(2)}</strong>, DI-의 EMA 값은 <strong>${avgDIMinus.toFixed(2)}</strong>입니다.<br/><br/>`;\n\n    // ADX 추세 방향\n    if (adxSlope > 0) {\n      result += 'ADX가 상승 추세에 있어 추세의 강도가 강화되고 있습니다.<br/>';\n    } else if (adxSlope < 0) {\n      result += 'ADX가 하락 추세에 있어 추세의 강도가 약화되고 있습니다.<br/>';\n    } else {\n      result += 'ADX의 추세 변화가 없어 추세의 강도가 유지되고 있습니다.<br/>';\n    }\n\n    // 종합적인 추세 판단\n    if (avgADX >= 25) {\n      if (avgDIPlus > avgDIMinus) {\n        result += '→ ADX가 높고 DI+ > DI-이므로 <strong>강한 상승 추세</strong>입니다.<br/>';\n        result += '매수 기회를 고려해볼 수 있습니다.<br/>';\n      } else if (avgDIPlus < avgDIMinus) {\n        result += '→ ADX가 높고 DI+ < DI-이므로 <strong>강한 하락 추세</strong>입니다.<br/>';\n        result += '매도 또는 관망을 고려해볼 수 있습니다.<br/>';\n      } else {\n        result += '→ ADX가 높지만 DI+와 DI-가 유사하여 방향성을 판단하기 어렵습니다.<br/>';\n      }\n    } else if (avgADX <= 20) {\n      result += '→ ADX가 낮아 추세가 약합니다. 횡보장으로 판단되며, 신중한 접근이 필요합니다.<br/>';\n    } else {\n      result += '→ 추세의 강도가 애매하므로 신중한 접근이 필요합니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (adxData.length > 0) {\n      const result = analyzeCombinedADX(adxData);\n      setAnalysisResult(result);\n    }\n  }, [adxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchADXData, {\n      stockCode: stockCode,\n      onADXFetch: setADXData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"ADX \\uC885\\uD569 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(ADXAnalysis4, \"5Dm60htkzevDfgZ/oo7jhbn3XPE=\");\n_c = ADXAnalysis4;\nexport default ADXAnalysis4;\nvar _c;\n$RefreshReg$(_c, \"ADXAnalysis4\");","map":{"version":3,"names":["React","useState","useEffect","FetchADXData","linearRegression","jsxDEV","_jsxDEV","ADXAnalysis4","stockCode","_s","adxData","setADXData","analysisResult","setAnalysisResult","calculateEMA","values","period","k","ema","forEach","value","index","push","analyzeCombinedADX","length","recentData","slice","adxValues","map","data","ADX","diPlusValues","DI14Plus","diMinusValues","DI14Minus","indices","Array","keys","adxEMAArray","avgADX","diPlusEMAArray","avgDIPlus","diMinusEMAArray","avgDIMinus","regressionData","x","i","m","adxSlope","result","toFixed","children","onADXFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/ADXAnalysis4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchADXData from '../ComponentsFetch/FetchADXData';\r\nimport { linearRegression } from 'simple-statistics';\r\n\r\nfunction ADXAnalysis4({ stockCode }) {\r\n    const [adxData, setADXData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    // 지수 이동 평균(EMA) 계산 함수\r\n    const calculateEMA = (values, period) => {\r\n        const k = 2 / (period + 1);\r\n        let ema = [];\r\n        values.forEach((value, index) => {\r\n            if (index === 0) {\r\n                ema.push(value);\r\n            } else {\r\n                ema.push(value * k + ema[index - 1] * (1 - k));\r\n            }\r\n        });\r\n        return ema;\r\n    };\r\n\r\n    const analyzeCombinedADX = (adxData, period = 14) => {\r\n        if (adxData.length < period) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const recentData = adxData.slice(-period);\r\n        const adxValues = recentData.map(data => data.ADX);\r\n        const diPlusValues = recentData.map(data => data.DI14Plus);\r\n        const diMinusValues = recentData.map(data => data.DI14Minus);\r\n        const indices = [...Array(period).keys()];\r\n\r\n        // ADX의 EMA 계산\r\n        const adxEMAArray = calculateEMA(adxValues, period);\r\n        const avgADX = adxEMAArray[adxEMAArray.length - 1];\r\n\r\n        // DI+와 DI-의 EMA 계산\r\n        const diPlusEMAArray = calculateEMA(diPlusValues, period);\r\n        const avgDIPlus = diPlusEMAArray[diPlusEMAArray.length - 1];\r\n        const diMinusEMAArray = calculateEMA(diMinusValues, period);\r\n        const avgDIMinus = diMinusEMAArray[diMinusEMAArray.length - 1];\r\n\r\n        // 선형 회귀를 통한 ADX 추세 분석\r\n        const regressionData = indices.map((x, i) => [x, adxValues[i]]);\r\n        const { m: adxSlope } = linearRegression(regressionData);\r\n\r\n        let result = '<strong>ADX 종합 분석</strong><br/><br/>';\r\n        result += 'ADX는 추세의 강도를, DI+와 DI-는 추세의 방향을 나타냅니다. 이들을 종합하여 현재 시장의 추세를 판단합니다.<br/><br/>';\r\n\r\n        result += `최근 ${period}일간 ADX의 EMA 값은 <strong>${avgADX.toFixed(2)}</strong>입니다.<br/>`;\r\n        result += `DI+의 EMA 값은 <strong>${avgDIPlus.toFixed(2)}</strong>, DI-의 EMA 값은 <strong>${avgDIMinus.toFixed(2)}</strong>입니다.<br/><br/>`;\r\n\r\n        // ADX 추세 방향\r\n        if (adxSlope > 0) {\r\n            result += 'ADX가 상승 추세에 있어 추세의 강도가 강화되고 있습니다.<br/>';\r\n        } else if (adxSlope < 0) {\r\n            result += 'ADX가 하락 추세에 있어 추세의 강도가 약화되고 있습니다.<br/>';\r\n        } else {\r\n            result += 'ADX의 추세 변화가 없어 추세의 강도가 유지되고 있습니다.<br/>';\r\n        }\r\n\r\n        // 종합적인 추세 판단\r\n        if (avgADX >= 25) {\r\n            if (avgDIPlus > avgDIMinus) {\r\n                result += '→ ADX가 높고 DI+ > DI-이므로 <strong>강한 상승 추세</strong>입니다.<br/>';\r\n                result += '매수 기회를 고려해볼 수 있습니다.<br/>';\r\n            } else if (avgDIPlus < avgDIMinus) {\r\n                result += '→ ADX가 높고 DI+ < DI-이므로 <strong>강한 하락 추세</strong>입니다.<br/>';\r\n                result += '매도 또는 관망을 고려해볼 수 있습니다.<br/>';\r\n            } else {\r\n                result += '→ ADX가 높지만 DI+와 DI-가 유사하여 방향성을 판단하기 어렵습니다.<br/>';\r\n            }\r\n        } else if (avgADX <= 20) {\r\n            result += '→ ADX가 낮아 추세가 약합니다. 횡보장으로 판단되며, 신중한 접근이 필요합니다.<br/>';\r\n        } else {\r\n            result += '→ 추세의 강도가 애매하므로 신중한 접근이 필요합니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (adxData.length > 0) {\r\n            const result = analyzeCombinedADX(adxData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [adxData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchADXData stockCode={stockCode} onADXFetch={setADXData} />\r\n            <h4>ADX 종합 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ADXAnalysis4;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}