{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsChart\\\\ChartOfClose.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsMore from \"highcharts/highcharts-more\"; // highcharts-more 모듈 추가\nimport HighchartsStock from \"highcharts/modules/stock\"; // Highcharts Stock 모듈 추가\n\n// 모듈 활성화\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsMore(Highcharts);\nHighchartsStock(Highcharts);\nfunction ChartOfClose({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [options, setOptions] = useState({});\n  const [chartType, setChartType] = useState('line'); // 차트 유형 상태 추가 ('line'이 기본값)\n\n  useEffect(() => {\n    if (stockData.length > 0 && stockCode) {\n      const dataForChart = stockData.map(item => ({\n        date: new Date(item.date).getTime(),\n        open: item.open,\n        high: item.high,\n        low: item.low,\n        close: item.close\n      })).sort((a, b) => a.date - b.date);\n\n      // Set chart options based on chartType\n      setOptions({\n        chart: {\n          type: chartType,\n          // chartType 상태에 따라 차트 유형 변경\n          zoomType: 'x',\n          spacing: [10, 0, 10, 10],\n          height: 330\n        },\n        title: {\n          text: ''\n        },\n        accessibility: {\n          enabled: false // 접근성 모듈 비활성화\n        },\n        xAxis: {\n          type: 'datetime',\n          // datetime 유형으로 변경\n          labels: {\n            format: '{value:%m-%d}' // 날짜 형식\n          }\n        },\n        yAxis: {\n          title: {\n            text: ''\n          },\n          lineWidth: 1,\n          opposite: true\n        },\n        series: [{\n          name: chartType === 'line' ? 'Close Price' : 'Candlestick',\n          data: chartType === 'line' ? dataForChart.map(item => [item.date, item.close]) : dataForChart.map(item => [item.date, item.open, item.high, item.low, item.close]),\n          marker: {\n            enabled: chartType === '' // Line chart에서만 마커 표시\n          },\n          type: chartType,\n          // 차트 유형 설정\n          pointWidth: chartType === 'candlestick' ? 2 : undefined,\n          // 캔들의 너비를 수동으로 조정 (값을 줄이면 얇아짐)\n          color: chartType === 'line' ? '#0071e3' : '#d32f2f',\n          // Line 차트의 색상 (파란색) 및 Candlestick 하락 색상 (빨간색)\n          upColor: chartType === 'candlestick' ? '#0071e3' : undefined // 상승 캔들 색상 (파란색)\n        }],\n        legend: {\n          enabled: false\n        },\n        credits: {\n          enabled: false // Disable the \"Highcharts.com\" text\n        },\n        tooltip: {\n          shared: true,\n          crosshairs: true,\n          valueDecimals: 2\n        },\n        scrollbar: {\n          enabled: true // 하단 스크롤바 활성화\n        }\n      });\n    }\n  }, [stockData, stockCode, chartType]); // chartType이 변경될 때마다 차트 업데이트\n\n  if (!stockCode) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setChartType('line'),\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setChartType('candlestick'),\n        children: \"Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfClose, \"L28K1TqSH4s+HwNzI4o5SiGad78=\");\n_c = ChartOfClose;\nexport default ChartOfClose;\nvar _c;\n$RefreshReg$(_c, \"ChartOfClose\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","FetchStockDataForCode","HighchartsReact","HighchartsMore","HighchartsStock","jsxDEV","_jsxDEV","ChartOfClose","stockCode","_s","stockData","setStockData","options","setOptions","chartType","setChartType","length","dataForChart","map","item","date","Date","getTime","open","high","low","close","sort","a","b","chart","type","zoomType","spacing","height","title","text","accessibility","enabled","xAxis","labels","format","yAxis","lineWidth","opposite","series","name","data","marker","pointWidth","undefined","color","upColor","legend","credits","tooltip","shared","crosshairs","valueDecimals","scrollbar","children","onSDFCFetch","fileName","_jsxFileName","lineNumber","columnNumber","onClick","highcharts","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsChart/ChartOfClose.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport HighchartsMore from \"highcharts/highcharts-more\"; // highcharts-more 모듈 추가\r\nimport HighchartsStock from \"highcharts/modules/stock\";  // Highcharts Stock 모듈 추가\r\n\r\n// 모듈 활성화\r\nHighchartsMore(Highcharts);\r\nHighchartsStock(Highcharts);\r\n\r\nfunction ChartOfClose({ stockCode }) {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [options, setOptions] = useState({});\r\n    const [chartType, setChartType] = useState('line'); // 차트 유형 상태 추가 ('line'이 기본값)\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && stockCode) {\r\n            const dataForChart = stockData\r\n                .map(item => ({\r\n                    date: new Date(item.date).getTime(),\r\n                    open: item.open,\r\n                    high: item.high,\r\n                    low: item.low,\r\n                    close: item.close,\r\n                }))\r\n                .sort((a, b) => a.date - b.date);\r\n\r\n            // Set chart options based on chartType\r\n            setOptions({\r\n                chart: {\r\n                    type: chartType, // chartType 상태에 따라 차트 유형 변경\r\n                    zoomType: 'x',\r\n                    spacing: [10, 0, 10, 10],\r\n                    height: 330,\r\n                },\r\n                title: {\r\n                    text: '',\r\n                },\r\n                accessibility: {\r\n                    enabled: false // 접근성 모듈 비활성화\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime', // datetime 유형으로 변경\r\n                    labels: {\r\n                        format: '{value:%m-%d}', // 날짜 형식\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: '',\r\n                    },\r\n                    lineWidth: 1,\r\n                    opposite: true\r\n                },\r\n                series: [\r\n                    {\r\n                        name: chartType === 'line' ? 'Close Price' : 'Candlestick',\r\n                        data: chartType === 'line'\r\n                            ? dataForChart.map(item => [item.date, item.close])\r\n                            : dataForChart.map(item => [item.date, item.open, item.high, item.low, item.close]),\r\n                        marker: {\r\n                            enabled: chartType === '', // Line chart에서만 마커 표시\r\n                        },\r\n\r\n                        type: chartType, // 차트 유형 설정\r\n                        pointWidth: chartType === 'candlestick' ? 2 : undefined, // 캔들의 너비를 수동으로 조정 (값을 줄이면 얇아짐)\r\n                        color: chartType === 'line' ? '#0071e3' : '#d32f2f', // Line 차트의 색상 (파란색) 및 Candlestick 하락 색상 (빨간색)\r\n                        upColor: chartType === 'candlestick' ? '#0071e3' : undefined, // 상승 캔들 색상 (파란색)\r\n                    },\r\n                ],\r\n                legend: {\r\n                    enabled: false,\r\n                },\r\n                credits: {\r\n                    enabled: false, // Disable the \"Highcharts.com\" text\r\n                },\r\n                tooltip: {\r\n                    shared: true,\r\n                    crosshairs: true,\r\n                    valueDecimals: 2,\r\n                },\r\n                scrollbar: {\r\n                    enabled: true, // 하단 스크롤바 활성화\r\n                },\r\n            });\r\n        }\r\n    }, [stockData, stockCode, chartType]); // chartType이 변경될 때마다 차트 업데이트\r\n\r\n    if (!stockCode) return null;\r\n\r\n    return (\r\n        <div>\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData}/>\r\n            <div>\r\n                <button onClick={() => setChartType('line')}>Line</button>\r\n                <button onClick={() => setChartType('candlestick')}>Candle</button>\r\n            </div>\r\n            <HighchartsReact highcharts={Highcharts} options={options}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartOfClose;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}