{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\RSIAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchRSIData from '../ComponentsFetch/FetchRSIData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RSIAnalysis1({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [rsiData, setRSIData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const [score, setScore] = useState(null);\n  const getRSIStateScore = currentRSI => {\n    if (currentRSI > 70) {\n      return 7; // 매도\n    } else if (currentRSI < 30) {\n      return 3; // 매수\n    } else {\n      return 5; // 보통\n    }\n  };\n  const analyzeRSITrend = (rsiData, period = 14) => {\n    var _rsiData$lastIndex, _rsiData, _rsiData$lastIndex2;\n    const lastIndex = rsiData.length - 1;\n    if (lastIndex < period) return '데이터가 충분하지 않습니다.';\n    const currentRSI = (_rsiData$lastIndex = rsiData[lastIndex]) === null || _rsiData$lastIndex === void 0 ? void 0 : _rsiData$lastIndex.RSI;\n    const prevRSI = (_rsiData = rsiData[lastIndex - 1]) === null || _rsiData === void 0 ? void 0 : _rsiData.RSI;\n    const rsiTrendData = rsiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.RSI);\n    const totalChange = rsiTrendData[rsiTrendData.length - 1] - rsiTrendData[0];\n    const rsiTrendDirection = totalChange > 0 ? '상승' : '하락';\n    const priceTrend = rsiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.close);\n    const priceChange = priceTrend[priceTrend.length - 1] - priceTrend[0];\n    const priceTrendDirection = priceChange > 0 ? '상승' : '하락';\n    const currentRSI_MACrossover = (_rsiData$lastIndex2 = rsiData[lastIndex]) === null || _rsiData$lastIndex2 === void 0 ? void 0 : _rsiData$lastIndex2.RSI_MA_Crossover;\n    if (currentRSI === undefined || prevRSI === undefined) {\n      return 'RSI 데이터를 불러오는 데 문제가 발생했습니다.';\n    }\n\n    // RSI 과매수/과매도 상태 판단\n    let rsiState = '';\n    if (currentRSI > 70) {\n      rsiState = '과매수 상태';\n    } else if (currentRSI < 30) {\n      rsiState = '과매도 상태';\n    } else {\n      rsiState = '중립 상태';\n    }\n    const rsiChange = currentRSI - prevRSI;\n    const rsiTrend = rsiChange > 0 ? '상승' : '하락';\n    let result = '';\n    result += `<strong>현재 RSI:</strong> ${currentRSI.toFixed(2)} (${rsiState})<br/>`;\n    result += `ㆍ 가격 흐름: ${priceTrendDirection} 추세<br/>`;\n    result += `ㆍ RSI 흐름: ${rsiTrendDirection} 추세<br/>`;\n    result += `ㆍ RSI 이동평균 교차 신호: ${currentRSI_MACrossover === 1 ? '골든 크로스' : '데드 크로스'}<br/><br/>`;\n    if (currentRSI_MACrossover === 1) {\n      result += `RSI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/><br/>`;\n    } else if (currentRSI_MACrossover === -1) {\n      result += `RSI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/><br/>`;\n    } else {\n      result += `RSI 이동평균에 특별한 교차 신호가 없습니다.<br/><br/>`;\n    }\n    if (rsiTrendDirection === '상승' && priceTrendDirection === '상승') {\n      result += `RSI와 가격 모두 상승세를 보이고 있습니다. 강한 상승 추세일 가능성이 큽니다.<br/>`;\n    } else if (rsiTrendDirection === '하락' && priceTrendDirection === '하락') {\n      result += `RSI와 가격 모두 하락세를 보이고 있습니다. 하락 추세가 강화될 가능성이 있습니다.<br/>`;\n    } else if (rsiTrendDirection === '상승' && priceTrendDirection === '하락') {\n      result += `가격은 하락 중이나 RSI는 상승세를 보이고 있습니다. 이는 가격 반등 가능성을 시사할 수 있습니다.<br/>`;\n    } else if (rsiTrendDirection === '하락' && priceTrendDirection === '상승') {\n      result += `가격은 상승 중이나 RSI는 하락세를 보이고 있습니다. 이는 상승 추세가 약화될 수 있음을 나타냅니다.<br/>`;\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (rsiData.length > 0) {\n      const result = analyzeRSITrend(rsiData);\n      setAnalysisResult(result);\n    }\n  }, [rsiData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchRSIData, {\n      stockCode: stockCode,\n      onRSIFetch: setRSIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"RSI \\uD750\\uB984 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(RSIAnalysis1, \"d6zUTea03Tp03rOIKeH4V/CrCCo=\");\n_c = RSIAnalysis1;\nexport default RSIAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"RSIAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchRSIData","jsxDEV","_jsxDEV","RSIAnalysis1","stockCode","onScoreCalculated","_s","rsiData","setRSIData","analysisResult","setAnalysisResult","score","setScore","getRSIStateScore","currentRSI","analyzeRSITrend","period","_rsiData$lastIndex","_rsiData","_rsiData$lastIndex2","lastIndex","length","RSI","prevRSI","rsiTrendData","slice","map","data","totalChange","rsiTrendDirection","priceTrend","close","priceChange","priceTrendDirection","currentRSI_MACrossover","RSI_MA_Crossover","undefined","rsiState","rsiChange","rsiTrend","result","toFixed","children","onRSIFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/RSIAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchRSIData from '../ComponentsFetch/FetchRSIData';\r\n\r\nfunction RSIAnalysis1({ stockCode, onScoreCalculated }) {\r\n    const [rsiData, setRSIData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n    const [score, setScore] = useState(null);\r\n\r\n    const getRSIStateScore = (currentRSI) => {\r\n        if (currentRSI > 70) {\r\n            return 7; // 매도\r\n        } else if (currentRSI < 30) {\r\n            return 3; // 매수\r\n        } else {\r\n            return 5; // 보통\r\n        }\r\n    };\r\n\r\n\r\n    const analyzeRSITrend = (rsiData, period = 14) => {\r\n        const lastIndex = rsiData.length - 1;\r\n        if (lastIndex < period) return '데이터가 충분하지 않습니다.';\r\n\r\n        const currentRSI = rsiData[lastIndex]?.RSI;\r\n        const prevRSI = rsiData[lastIndex - 1]?.RSI;\r\n\r\n        const rsiTrendData = rsiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.RSI);\r\n        const totalChange = rsiTrendData[rsiTrendData.length - 1] - rsiTrendData[0];\r\n        const rsiTrendDirection = totalChange > 0 ? '상승' : '하락';\r\n\r\n        const priceTrend = rsiData.slice(lastIndex - period + 1, lastIndex + 1).map(data => data.close);\r\n        const priceChange = priceTrend[priceTrend.length - 1] - priceTrend[0];\r\n        const priceTrendDirection = priceChange > 0 ? '상승' : '하락';\r\n\r\n        const currentRSI_MACrossover = rsiData[lastIndex]?.RSI_MA_Crossover;\r\n\r\n        if (currentRSI === undefined || prevRSI === undefined) {\r\n            return 'RSI 데이터를 불러오는 데 문제가 발생했습니다.';\r\n        }\r\n\r\n        // RSI 과매수/과매도 상태 판단\r\n        let rsiState = '';\r\n        if (currentRSI > 70) {\r\n            rsiState = '과매수 상태';\r\n        } else if (currentRSI < 30) {\r\n            rsiState = '과매도 상태';\r\n        } else {\r\n            rsiState = '중립 상태';\r\n        }\r\n\r\n        const rsiChange = currentRSI - prevRSI;\r\n        const rsiTrend = rsiChange > 0 ? '상승' : '하락';\r\n\r\n        let result = '';\r\n        result += `<strong>현재 RSI:</strong> ${currentRSI.toFixed(2)} (${rsiState})<br/>`;\r\n        result += `ㆍ 가격 흐름: ${priceTrendDirection} 추세<br/>`;\r\n        result += `ㆍ RSI 흐름: ${rsiTrendDirection} 추세<br/>`;\r\n        result += `ㆍ RSI 이동평균 교차 신호: ${currentRSI_MACrossover === 1 ? '골든 크로스' : '데드 크로스'}<br/><br/>`;\r\n\r\n        if (currentRSI_MACrossover === 1) {\r\n            result += `RSI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/><br/>`;\r\n        } else if (currentRSI_MACrossover === -1) {\r\n            result += `RSI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/><br/>`;\r\n        } else {\r\n            result += `RSI 이동평균에 특별한 교차 신호가 없습니다.<br/><br/>`;\r\n        }\r\n\r\n        if (rsiTrendDirection  === '상승' && priceTrendDirection === '상승') {\r\n            result += `RSI와 가격 모두 상승세를 보이고 있습니다. 강한 상승 추세일 가능성이 큽니다.<br/>`;\r\n        } else if (rsiTrendDirection  === '하락' && priceTrendDirection === '하락') {\r\n            result += `RSI와 가격 모두 하락세를 보이고 있습니다. 하락 추세가 강화될 가능성이 있습니다.<br/>`;\r\n        } else if (rsiTrendDirection  === '상승' && priceTrendDirection === '하락') {\r\n            result += `가격은 하락 중이나 RSI는 상승세를 보이고 있습니다. 이는 가격 반등 가능성을 시사할 수 있습니다.<br/>`;\r\n        } else if (rsiTrendDirection  === '하락' && priceTrendDirection === '상승') {\r\n            result += `가격은 상승 중이나 RSI는 하락세를 보이고 있습니다. 이는 상승 추세가 약화될 수 있음을 나타냅니다.<br/>`;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (rsiData.length > 0) {\r\n            const result = analyzeRSITrend(rsiData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [rsiData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchRSIData stockCode={stockCode} onRSIFetch={setRSIData} />\r\n            <h4>RSI 흐름 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RSIAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}