{"ast":null,"code":"/**\n * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array\n * is the result of adding all numbers together, starting from zero.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sumSimple([1, 2, 3]); // => 6\n */\nfunction sumSimple(x) {\n  let value = 0;\n  for (let i = 0; i < x.length; i++) {\n    if (typeof x[i] !== \"number\") {\n      return Number.NaN;\n    }\n    value += x[i];\n  }\n  return value;\n}\nexport default sumSimple;","map":{"version":3,"names":["sumSimple","x","value","i","length","Number","NaN"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/sum_simple.js"],"sourcesContent":["/**\n * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array\n * is the result of adding all numbers together, starting from zero.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sumSimple([1, 2, 3]); // => 6\n */\nfunction sumSimple(x) {\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        if (typeof x[i] !== \"number\") {\n            return Number.NaN;\n        }\n        value += x[i];\n    }\n    return value;\n}\n\nexport default sumSimple;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAASA,CAACC,CAAC,EAAE;EAClB,IAAIC,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAC/B,IAAI,OAAOF,CAAC,CAACE,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC1B,OAAOE,MAAM,CAACC,GAAG;IACrB;IACAJ,KAAK,IAAID,CAAC,CAACE,CAAC,CAAC;EACjB;EACA,OAAOD,KAAK;AAChB;AAEA,eAAeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}