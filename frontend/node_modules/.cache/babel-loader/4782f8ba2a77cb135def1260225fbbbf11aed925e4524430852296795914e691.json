{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsFetch\\\\FetchAnalysis\\\\FetchSARAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchSARAnalysis({\n  stockCode,\n  selectedAnalysis\n}) {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null); // 분석 결과 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지를 저장할 상태\n\n  useEffect(() => {\n    const query = selectedAnalysis.join(',');\n    fetch(`http://127.0.0.1:8000/api/analyze_sar/${stockCode}/?analysis=${query}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setAnalysisResult(data);\n    });\n  }, [stockCode]);\n  if (!analysisResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  const renderSARAnalysis1 = analysisData => {\n    if (!analysisData || analysisData.error) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const {\n      trend,\n      trend_reversal\n    } = analysisData;\n    let result = '<strong>추세 방향 및 반전 지점 식별</strong><br/><br/>';\n    if (trend === \"상승 추세\") {\n      result += `최근 기간 동안 가격이 SAR보다 위에 있어 <strong>상승 추세</strong>가 지속되고 있습니다.<br/><br/>`;\n    } else if (trend === \"하락 추세\") {\n      result += `최근 기간 동안 가격이 SAR보다 아래에 있어 <strong>하락 추세</strong>가 지속되고 있습니다.<br/><br/>`;\n    } else {\n      result += `최근 기간 동안 추세가 명확하지 않습니다. 변동성이 높을 수 있습니다.<br/><br/>`;\n    }\n    if (trend_reversal) {\n      result += `날짜 ${trend_reversal.date}에 <strong>${trend_reversal.type}</strong> 신호가 발생했습니다.<br/>`;\n    } else {\n      result += '최근 기간 동안 추세 반전 신호가 없습니다.<br/>';\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedAnalysis.includes('1') && (analysisResult === null || analysisResult === void 0 ? void 0 : analysisResult.sar_analysis1) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: renderSARAnalysis1(analysisResult.sar_analysis1)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchSARAnalysis, \"ouRX2WpcByH/FMIrkcHTha1nqaw=\");\n_c = FetchSARAnalysis;\nexport default FetchSARAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FetchSARAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchSARAnalysis","stockCode","selectedAnalysis","_s","analysisResult","setAnalysisResult","error","setError","query","join","fetch","then","response","ok","Error","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","renderSARAnalysis1","analysisData","trend","trend_reversal","result","date","type","includes","sar_analysis1","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsFetch/FetchAnalysis/FetchSARAnalysis.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nfunction FetchSARAnalysis({ stockCode, selectedAnalysis }) {\r\n    const [analysisResult, setAnalysisResult] = useState(null);  // 분석 결과 저장할 상태\r\n    const [error, setError] = useState(null);  // 에러 메시지를 저장할 상태\r\n\r\n    useEffect(() => {\r\n        const query = selectedAnalysis.join(',');\r\n        fetch(`http://127.0.0.1:8000/api/analyze_sar/${stockCode}/?analysis=${query}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            }).then(data => {\r\n                setAnalysisResult(data);\r\n        });\r\n    }, [stockCode]);\r\n\r\n    if (!analysisResult) {\r\n        return <div>로딩 중...</div>;\r\n    }\r\n\r\n    const renderSARAnalysis1 = (analysisData) => {\r\n        if (!analysisData || analysisData.error) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const { trend, trend_reversal } = analysisData;\r\n\r\n        let result = '<strong>추세 방향 및 반전 지점 식별</strong><br/><br/>';\r\n\r\n        if (trend === \"상승 추세\") {\r\n            result += `최근 기간 동안 가격이 SAR보다 위에 있어 <strong>상승 추세</strong>가 지속되고 있습니다.<br/><br/>`;\r\n        } else if (trend === \"하락 추세\") {\r\n            result += `최근 기간 동안 가격이 SAR보다 아래에 있어 <strong>하락 추세</strong>가 지속되고 있습니다.<br/><br/>`;\r\n        } else {\r\n            result += `최근 기간 동안 추세가 명확하지 않습니다. 변동성이 높을 수 있습니다.<br/><br/>`;\r\n        }\r\n\r\n        if (trend_reversal) {\r\n            result += `날짜 ${trend_reversal.date}에 <strong>${trend_reversal.type}</strong> 신호가 발생했습니다.<br/>`;\r\n        } else {\r\n            result += '최근 기간 동안 추세 반전 신호가 없습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {selectedAnalysis.includes('1') && analysisResult?.sar_analysis1 && (\r\n                <div>\r\n                    <p dangerouslySetInnerHTML={{__html: renderSARAnalysis1(analysisResult.sar_analysis1)}}></p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchSARAnalysis"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,gBAAgBA,CAAC;EAAEC,SAAS;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC7D,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3CC,SAAS,CAAC,MAAM;IACZ,MAAMW,KAAK,GAAGN,gBAAgB,CAACO,IAAI,CAAC,GAAG,CAAC;IACxCC,KAAK,CAAC,yCAAyCT,SAAS,cAAcO,KAAK,EAAE,CAAC,CACzEG,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACJ,IAAI,CAACK,IAAI,IAAI;MACZX,iBAAiB,CAACW,IAAI,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,IAAI,CAACG,cAAc,EAAE;IACjB,oBAAOL,OAAA;MAAAkB,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7B;EAEA,MAAMC,kBAAkB,GAAIC,YAAY,IAAK;IACzC,IAAI,CAACA,YAAY,IAAIA,YAAY,CAACjB,KAAK,EAAE;MACrC,OAAO,iBAAiB;IAC5B;IAEA,MAAM;MAAEkB,KAAK;MAAEC;IAAe,CAAC,GAAGF,YAAY;IAE9C,IAAIG,MAAM,GAAG,6CAA6C;IAE1D,IAAIF,KAAK,KAAK,OAAO,EAAE;MACnBE,MAAM,IAAI,uEAAuE;IACrF,CAAC,MAAM,IAAIF,KAAK,KAAK,OAAO,EAAE;MAC1BE,MAAM,IAAI,wEAAwE;IACtF,CAAC,MAAM;MACHA,MAAM,IAAI,mDAAmD;IACjE;IAEA,IAAID,cAAc,EAAE;MAChBC,MAAM,IAAI,MAAMD,cAAc,CAACE,IAAI,aAAaF,cAAc,CAACG,IAAI,4BAA4B;IACnG,CAAC,MAAM;MACHF,MAAM,IAAI,+BAA+B;IAC7C;IAEA,OAAOA,MAAM;EACjB,CAAC;EAED,oBACI3B,OAAA;IAAAkB,QAAA,EACKf,gBAAgB,CAAC2B,QAAQ,CAAC,GAAG,CAAC,KAAIzB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE0B,aAAa,kBAC5D/B,OAAA;MAAAkB,QAAA,eACIlB,OAAA;QAAGgC,uBAAuB,EAAE;UAACC,MAAM,EAAEV,kBAAkB,CAAClB,cAAc,CAAC0B,aAAa;QAAC;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAClB,EAAA,CAxDQH,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AA0DzB,eAAeA,gBAAgB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}