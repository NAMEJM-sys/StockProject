{"ast":null,"code":"export const login = async (username, password) => {\n  try {\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok && data.success) {\n      return {\n        success: true,\n        message: data.message\n      };\n    } else {\n      return {\n        success: false,\n        message: data.message || 'Login failed'\n      };\n    }\n  } catch (error) {\n    // 클라이언트 오류 로깅 및 디버깅용 메시지 추가\n    console.error('Error during login:', error);\n    return {\n      success: false,\n      message: 'An unexpected error occurred'\n    };\n  }\n};","map":{"version":3,"names":["login","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","message","error","console"],"sources":["C:/ProPython/Stock2/frontend/src/services/authService.js"],"sourcesContent":["export const login = async (username, password) => {\r\n    try {\r\n        const response = await fetch('/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok && data.success) {\r\n            return { success: true, message: data.message };\r\n        } else {\r\n            return { success: false, message: data.message || 'Login failed' };\r\n        }\r\n    } catch (error) {\r\n        // 클라이언트 오류 로깅 및 디버깅용 메시지 추가\r\n        console.error('Error during login:', error);\r\n        return { success: false, message: 'An unexpected error occurred' };\r\n    }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAIR,QAAQ,CAACS,EAAE,IAAIF,IAAI,CAACG,OAAO,EAAE;MAC7B,OAAO;QAAEA,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAEJ,IAAI,CAACI;MAAQ,CAAC;IACnD,CAAC,MAAM;MACH,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEJ,IAAI,CAACI,OAAO,IAAI;MAAe,CAAC;IACtE;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;IACAC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO;MAAEF,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA+B,CAAC;EACtE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}