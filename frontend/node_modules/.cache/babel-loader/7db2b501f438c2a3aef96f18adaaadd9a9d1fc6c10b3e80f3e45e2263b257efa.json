{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\MACDAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FetchMACDData from \"./FetchMACDData\";\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [priceData, setPriceData] = useState([]);\n  const [divergence, setDivergence] = useState(null);\n  useEffect(() => {\n    if (macdData.length > 0 && priceData.length > 0) {\n      detectDivergence();\n    }\n  }, [macdData, priceData]);\n  const detectDivergence = () => {\n    let divergenceType = null;\n\n    // 최신 고점과 저점을 각각 두 개씩 찾기\n    const recentPriceHighs = findRecentExtremes(priceData, 'high', 'desc');\n    const recentPriceLows = findRecentExtremes(priceData, 'low', 'asc');\n    const recentMACDHighs = findRecentExtremes(macdData, 'MACD', 'desc');\n    const recentMACDLows = findRecentExtremes(macdData, 'MACD', 'asc');\n\n    // 상승 다이버전스: 가격이 더 낮은 저점을 찍었으나 MACD는 그렇지 않은 경우\n    if (recentPriceLows.length === 2 && recentMACDLows.length === 2) {\n      if (recentPriceLows[0].value > recentPriceLows[1].value && recentMACDLows[0].value < recentMACDLows[1].value) {\n        divergenceType = \"상승 다이버전스: 가격은 하락했지만 MACD는 상승했습니다.\";\n      }\n    }\n\n    // 하락 다이버전스: 가격이 더 높은 고점을 찍었으나 MACD는 그렇지 않은 경우\n    if (recentPriceHighs.length === 2 && recentMACDHighs.length === 2) {\n      if (recentPriceHighs[0].value < recentPriceHighs[1].value && recentMACDHighs[0].value > recentMACDHighs[1].value) {\n        divergenceType = \"하락 다이버전스: 가격은 상승했지만 MACD는 하락했습니다.\";\n      }\n    }\n    setDivergence(divergenceType);\n  };\n  const findRecentExtremes = (data, key, direction) => {\n    const extremes = [];\n    let finding = false;\n    for (let i = data.length - 1; i > 0; i--) {\n      if (direction === 'desc') {\n        if (data[i][key] > data[i - 1][key]) {\n          if (finding) {\n            extremes.push({\n              index: i,\n              value: data[i][key]\n            });\n            if (extremes.length === 2) break; // 두 개의 고점만 찾음\n          } else {\n            finding = true;\n          }\n        }\n      } else if (direction === 'asc') {\n        if (data[i][key] < data[i - 1][key]) {\n          if (finding) {\n            extremes.push({\n              index: i,\n              value: data[i][key]\n            });\n            if (extremes.length === 2) break; // 두 개의 저점만 찾음\n          } else {\n            finding = true;\n          }\n        }\n      }\n    }\n    return extremes;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setPriceData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"analysis-text\",\n      children: \"Divergence \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), divergence ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: divergence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD604\\uC7AC MACD\\uC640 \\uAC00\\uACA9 \\uAC04\\uC758 \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis2, \"vCFT91M5zu7KnE8up3Ofjzq6QgQ=\");\n_c = MACDAnalysis2;\nexport default MACDAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis2\");","map":{"version":3,"names":["React","useEffect","useState","FetchMACDData","FetchStockDataForCode","jsxDEV","_jsxDEV","MACDAnalysis2","stockCode","_s","macdData","setMACDData","priceData","setPriceData","divergence","setDivergence","length","detectDivergence","divergenceType","recentPriceHighs","findRecentExtremes","recentPriceLows","recentMACDHighs","recentMACDLows","value","data","key","direction","extremes","finding","i","push","index","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","className","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/MACDAnalysis2.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FetchMACDData from \"./FetchMACDData\";\r\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\r\n\r\nfunction MACDAnalysis2({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [priceData, setPriceData] = useState([]);\r\n    const [divergence, setDivergence] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0 && priceData.length > 0) {\r\n            detectDivergence();\r\n        }\r\n    }, [macdData, priceData]);\r\n\r\n    const detectDivergence = () => {\r\n        let divergenceType = null;\r\n\r\n        // 최신 고점과 저점을 각각 두 개씩 찾기\r\n        const recentPriceHighs = findRecentExtremes(priceData, 'high', 'desc');\r\n        const recentPriceLows = findRecentExtremes(priceData, 'low', 'asc');\r\n        const recentMACDHighs = findRecentExtremes(macdData, 'MACD', 'desc');\r\n        const recentMACDLows = findRecentExtremes(macdData, 'MACD', 'asc');\r\n\r\n        // 상승 다이버전스: 가격이 더 낮은 저점을 찍었으나 MACD는 그렇지 않은 경우\r\n        if (recentPriceLows.length === 2 && recentMACDLows.length === 2) {\r\n            if (recentPriceLows[0].value > recentPriceLows[1].value &&\r\n                recentMACDLows[0].value < recentMACDLows[1].value) {\r\n                divergenceType = \"상승 다이버전스: 가격은 하락했지만 MACD는 상승했습니다.\";\r\n            }\r\n        }\r\n\r\n        // 하락 다이버전스: 가격이 더 높은 고점을 찍었으나 MACD는 그렇지 않은 경우\r\n        if (recentPriceHighs.length === 2 && recentMACDHighs.length === 2) {\r\n            if (recentPriceHighs[0].value < recentPriceHighs[1].value &&\r\n                recentMACDHighs[0].value > recentMACDHighs[1].value) {\r\n                divergenceType = \"하락 다이버전스: 가격은 상승했지만 MACD는 하락했습니다.\";\r\n            }\r\n        }\r\n\r\n        setDivergence(divergenceType);\r\n    };\r\n\r\n    const findRecentExtremes = (data, key, direction) => {\r\n        const extremes = [];\r\n        let finding = false;\r\n\r\n        for (let i = data.length - 1; i > 0; i--) {\r\n            if (direction === 'desc') {\r\n                if (data[i][key] > data[i - 1][key]) {\r\n                    if (finding) {\r\n                        extremes.push({ index: i, value: data[i][key] });\r\n                        if (extremes.length === 2) break; // 두 개의 고점만 찾음\r\n                    } else {\r\n                        finding = true;\r\n                    }\r\n                }\r\n            } else if (direction === 'asc') {\r\n                if (data[i][key] < data[i - 1][key]) {\r\n                    if (finding) {\r\n                        extremes.push({ index: i, value: data[i][key] });\r\n                        if (extremes.length === 2) break; // 두 개의 저점만 찾음\r\n                    } else {\r\n                        finding = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return extremes;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setPriceData} />\r\n            <h4 className=\"analysis-text\">Divergence 분석</h4>\r\n            {divergence ? (\r\n                <p>{divergence}</p>\r\n            ) : (\r\n                <p>현재 MACD와 가격 간의 다이버전스가 없습니다.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}