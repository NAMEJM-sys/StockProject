{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\findSupportZones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction findSupportZones(stockData) {\n  let lows = [];\n  let firstLow = null;\n  let previousHigh = null;\n  for (let i = 1; i < stockData.length - 1; i++) {\n    // 상승 후 하락하여 저점을 형성\n    if (stockData[i - 1].close > stockData[i].close && stockData[i].close < stockData[i + 1].close) {\n      // 이전 고점이 있는 경우\n      if (previousHigh && firstLow === null) {\n        firstLow = {\n          date: stockData[i].date,\n          close: stockData[i].close\n        };\n      }\n      // 첫 번째 저점이 이미 설정된 경우\n      else if (firstLow) {\n        const priceDifference = (firstLow.close - stockData[i].close) / firstLow.close * 100;\n        // 두 번째 저점이 첫 번째 저점보다 낮고, 3% 이상의 차이가 발생할 때만 유효한 두 번째 저점으로 간주\n        if (stockData[i].close < firstLow.close && priceDifference >= 3) {\n          lows.push(firstLow);\n          firstLow = {\n            date: stockData[i].date,\n            close: stockData[i].close\n          };\n        }\n      }\n    }\n\n    // 상승 구간을 확인해 고점을 갱신\n    if (stockData[i - 1].close < stockData[i].close) {\n      previousHigh = stockData[i];\n    }\n  }\n\n  // 마지막 저점을 추가\n  if (firstLow) {\n    lows.push(firstLow);\n  }\n\n  // 날짜순으로 정렬\n  lows.sort((a, b) => new Date(a.date) - new Date(b.date));\n  return lows;\n}\nfunction StockAnalysis({\n  stockData\n}) {\n  _s();\n  const [supportZones, setSupportZones] = useState([]);\n  useEffect(() => {\n    if (stockData.length > 0) {\n      const zones = findSupportZones(stockData);\n      setSupportZones(zones);\n    }\n  }, [stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC800\\uC810 \\uC9C0\\uC9C0 \\uAD6C\\uAC04\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: supportZones.map((zone, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uB0A0\\uC9DC: \", zone.date, \", \\uC885\\uAC00: \", zone.close]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(StockAnalysis, \"O3Fdvyyy24KebpM8KHBVqc7zi90=\");\n_c = StockAnalysis;\nexport default StockAnalysis;\nvar _c;\n$RefreshReg$(_c, \"StockAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","findSupportZones","stockData","lows","firstLow","previousHigh","i","length","close","date","priceDifference","push","sort","a","b","Date","StockAnalysis","_s","supportZones","setSupportZones","zones","children","fileName","_jsxFileName","lineNumber","columnNumber","map","zone","index","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/findSupportZones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction findSupportZones(stockData) {\r\n    let lows = [];\r\n    let firstLow = null;\r\n    let previousHigh = null;\r\n\r\n    for (let i = 1; i < stockData.length - 1; i++) {\r\n        // 상승 후 하락하여 저점을 형성\r\n        if (stockData[i - 1].close > stockData[i].close && stockData[i].close < stockData[i + 1].close) {\r\n            // 이전 고점이 있는 경우\r\n            if (previousHigh && firstLow === null) {\r\n                firstLow = { date: stockData[i].date, close: stockData[i].close };\r\n            }\r\n            // 첫 번째 저점이 이미 설정된 경우\r\n            else if (firstLow) {\r\n                const priceDifference = ((firstLow.close - stockData[i].close) / firstLow.close) * 100;\r\n                // 두 번째 저점이 첫 번째 저점보다 낮고, 3% 이상의 차이가 발생할 때만 유효한 두 번째 저점으로 간주\r\n                if (stockData[i].close < firstLow.close && priceDifference >= 3) {\r\n                    lows.push(firstLow);\r\n                    firstLow = { date: stockData[i].date, close: stockData[i].close };\r\n                }\r\n            }\r\n        }\r\n\r\n        // 상승 구간을 확인해 고점을 갱신\r\n        if (stockData[i - 1].close < stockData[i].close) {\r\n            previousHigh = stockData[i];\r\n        }\r\n    }\r\n\r\n    // 마지막 저점을 추가\r\n    if (firstLow) {\r\n        lows.push(firstLow);\r\n    }\r\n\r\n    // 날짜순으로 정렬\r\n    lows.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    return lows;\r\n}\r\n\r\nfunction StockAnalysis({ stockData }) {\r\n    const [supportZones, setSupportZones] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0) {\r\n            const zones = findSupportZones(stockData);\r\n            setSupportZones(zones);\r\n        }\r\n    }, [stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>저점 지지 구간</h3>\r\n            <ul>\r\n                {supportZones.map((zone, index) => (\r\n                    <li key={index}>\r\n                        날짜: {zone.date}, 종가: {zone.close}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}