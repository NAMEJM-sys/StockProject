{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsChart\\\\ChartOfCCI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FetchCCIData from \"../ComponentsFetch/FetchCCIData\";\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartOfCCI({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [CCIData, setCCIData] = useState([]);\n  const [options, setOptions] = useState({});\n  useEffect(() => {\n    if (stockData.length > 0 && CCIData.length > 0 && stockCode) {\n      const formattedCCIData = CCIData.map(item => {\n        return [new Date(item.date).getTime(), item.CCI];\n      });\n      setOptions({\n        chart: {\n          type: 'line',\n          height: 220\n        },\n        title: {\n          text: ''\n        },\n        accessibility: {\n          enabled: false\n        },\n        xAxis: {\n          type: 'datetime',\n          labels: {\n            formatter: function () {\n              return Highcharts.dateFormat('%m. %d', this.value);\n            }\n          }\n        },\n        yAxis: {\n          title: {\n            text: '' // Y축 제목\n          },\n          softMin: -200,\n          softMax: 200,\n          tickInterval: 100,\n          // Y축 간격을 50 단위로 설정\n          tickPixelInterval: 40,\n          // 픽셀 간격을 40px로 설정해 간격을 더 세밀하게 조정\n          endOnTick: true,\n          // Y축이 가장 가까운 tick에서 끝나도록 설정\n          startOnTick: true,\n          // Y축이 가장 가까운 tick에서 시작되도록 설정\n          minorTicks: false,\n          // 보조 눈금선을 비활성화\n          gridLineWidth: 0,\n          // Y축의 그리드 라인 제거\n          plotBands: [{\n            from: -100,\n            to: 100,\n            color: 'rgba(221, 221, 132, 0.3)' // RSI 범위 표시 (30~70 사이 반투명 영역)\n          }],\n          labels: {\n            step: 2,\n            formatter: function () {\n              if (this.value === -220 || this.value === 230) {\n                return ''; // 20과 80은 빈 문자열로 숨기기\n              }\n              return this.value; // 나머지 값은 그대로 표시\n            }\n          },\n          plotLines: [{\n            value: 100,\n            color: '#A9A9A9',\n            dashStyle: 'shortdash',\n            width: 1,\n            label: {\n              text: '' // 과매수 상태\n            }\n          }, {\n            value: -100,\n            color: '#A9A9A9',\n            dashStyle: 'shortdash',\n            width: 1,\n            label: {\n              text: '' // 과매도 상태\n            }\n          }]\n        },\n        series: [{\n          name: 'CCI',\n          data: formattedCCIData,\n          // CCI 데이터 삽입\n          tooltip: {\n            valueDecimals: 2 // 소수점 자리 설정\n          },\n          color: '#CCCC66',\n          lineWidth: 1.5\n        }]\n      });\n    }\n  }, [stockData, CCIData, stockCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchCCIData, {\n      stockCode: stockCode,\n      onCCIFetch: setCCIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), options.series && options.series.length > 0 && /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfCCI, \"woPJ4EZlYWoRVPqQJDCVfZdylDY=\");\n_c = ChartOfCCI;\nexport default ChartOfCCI;\nvar _c;\n$RefreshReg$(_c, \"ChartOfCCI\");","map":{"version":3,"names":["React","useState","useEffect","FetchCCIData","FetchStockDataForCode","HighchartsReact","Highcharts","jsxDEV","_jsxDEV","ChartOfCCI","stockCode","_s","stockData","setStockData","CCIData","setCCIData","options","setOptions","length","formattedCCIData","map","item","Date","date","getTime","CCI","chart","type","height","title","text","accessibility","enabled","xAxis","labels","formatter","dateFormat","value","yAxis","softMin","softMax","tickInterval","tickPixelInterval","endOnTick","startOnTick","minorTicks","gridLineWidth","plotBands","from","to","color","step","plotLines","dashStyle","width","label","series","name","data","tooltip","valueDecimals","lineWidth","children","onSDFCFetch","fileName","_jsxFileName","lineNumber","columnNumber","onCCIFetch","highcharts","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsChart/ChartOfCCI.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport FetchCCIData from \"../ComponentsFetch/FetchCCIData\";\r\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"highcharts\";\r\n\r\nfunction ChartOfCCI({ stockCode }) {\r\n    const [stockData, setStockData] = useState([])\r\n    const [CCIData, setCCIData] = useState([])\r\n    const [options, setOptions] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(stockData.length > 0 && CCIData.length>0 && stockCode) {\r\n\r\n            const formattedCCIData = CCIData.map(item => {\r\n                return [\r\n                    new Date(item.date).getTime(),\r\n                    item.CCI\r\n                ];\r\n            });\r\n\r\n            setOptions( {\r\n                chart: {\r\n                    type: 'line',\r\n                    height: 220,\r\n                },\r\n                title: {\r\n                    text: ''\r\n                },\r\n                accessibility: {\r\n                    enabled: false\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    labels: {\r\n                        formatter: function() {\r\n                            return Highcharts.dateFormat('%m. %d', this.value);\r\n                        }\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: '' // Y축 제목\r\n                    },\r\n                    softMin: -200,\r\n                    softMax: 200,\r\n                    tickInterval: 100,  // Y축 간격을 50 단위로 설정\r\n                    tickPixelInterval: 40,  // 픽셀 간격을 40px로 설정해 간격을 더 세밀하게 조정\r\n                    endOnTick: true,  // Y축이 가장 가까운 tick에서 끝나도록 설정\r\n                    startOnTick: true,  // Y축이 가장 가까운 tick에서 시작되도록 설정\r\n                    minorTicks: false,  // 보조 눈금선을 비활성화\r\n                    gridLineWidth: 0,  // Y축의 그리드 라인 제거\r\n                    plotBands: [{\r\n                        from: -100,\r\n                        to: 100,\r\n                        color: 'rgba(221, 221, 132, 0.3)' // RSI 범위 표시 (30~70 사이 반투명 영역)\r\n                    }],\r\n                    labels: {\r\n                        step: 2,\r\n                        formatter: function () {\r\n                            if (this.value === -220 || this.value === 230) {\r\n                                return '';  // 20과 80은 빈 문자열로 숨기기\r\n                            }\r\n                            return this.value;  // 나머지 값은 그대로 표시\r\n                        }\r\n                    },\r\n                    plotLines: [{\r\n                        value: 100,\r\n                        color: '#A9A9A9',\r\n                        dashStyle: 'shortdash',\r\n                        width: 1,\r\n                        label: {\r\n                            text: '' // 과매수 상태\r\n                        }\r\n                    }, {\r\n                        value: -100,\r\n                        color: '#A9A9A9',\r\n                        dashStyle: 'shortdash',\r\n                        width: 1,\r\n                        label: {\r\n                            text: '' // 과매도 상태\r\n                        }\r\n                    }]\r\n                },\r\n                series: [{\r\n                    name: 'CCI',\r\n                    data: formattedCCIData, // CCI 데이터 삽입\r\n                    tooltip: {\r\n                        valueDecimals: 2 // 소수점 자리 설정\r\n                    },\r\n                    color: '#CCCC66',\r\n                    lineWidth: 1.5,\r\n                }]\r\n            });\r\n        }\r\n    }, [stockData, CCIData, stockCode])\r\n    return (\r\n        <div>\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData}/>\r\n            <FetchCCIData stockCode={stockCode} onCCIFetch={setCCIData}/>\r\n\r\n            {options.series && options.series.length > 0 && (\r\n                <HighchartsReact highcharts={Highcharts} options={options} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default ChartOfCCI"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}