{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\MACDAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FetchMACDData from \"./FetchMACDData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState(\"\");\n\n  // 격차 분석 함수\n  const analyzeMACDGap = data => {\n    let lastIndex = data.length - 1;\n    if (lastIndex < 1) return \"데이터가 충분하지 않습니다.\";\n    const currentMACD = data[lastIndex].MACD;\n    const currentSignal = data[lastIndex].Signal;\n    const prevMACD = data[lastIndex - 1].MACD;\n    const prevSignal = data[lastIndex - 1].Signal;\n    const currentGap = currentMACD - currentSignal;\n    const prevGap = prevMACD - prevSignal;\n    if (currentGap > 0 && prevGap <= 0) {\n      return \"강한 매수 신호: MACD Line이 Signal Line을 아래에서 위로 교차했습니다.\";\n    } else if (currentGap < 0 && prevGap >= 0) {\n      return \"강한 매도 신호: MACD Line이 Signal Line을 위에서 아래로 교차했습니다.\";\n    } else if (Math.abs(currentGap) < Math.abs(prevGap)) {\n      return `약한 ${currentGap > 0 ? \"매수\" : \"매도\"} 신호: MACD Line과 Signal Line의 격차가 줄어들고 있습니다.`;\n    } else if (Math.abs(currentGap) > Math.abs(prevGap)) {\n      return `추세 강화 신호: MACD Line과 Signal Line의 격차가 벌어지고 있습니다.`;\n    } else {\n      return \"변화 없음: MACD Line과 Signal Line의 격차에 큰 변화가 없습니다.\";\n    }\n  };\n  useEffect(() => {\n    if (macdData.length > 0) {\n      const result = analyzeMACDGap(macdData);\n      setAnalysisResult(result);\n    }\n  }, [macdData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"analysis-text\",\n      children: \"MACD Crossovers \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis1, \"5Uy1pGcoDcxfOC8qG38od2MYHSY=\");\n_c = MACDAnalysis1;\nexport default MACDAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","jsxDEV","_jsxDEV","MACDAnalysis1","stockCode","_s","macdData","setMACDData","analysisResult","setAnalysisResult","analyzeMACDGap","data","lastIndex","length","currentMACD","MACD","currentSignal","Signal","prevMACD","prevSignal","currentGap","prevGap","Math","abs","result","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/MACDAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FetchMACDData from \"./FetchMACDData\";\r\n\r\nfunction MACDAnalysis1({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState(\"\");\r\n\r\n    // 격차 분석 함수\r\n    const analyzeMACDGap = (data) => {\r\n        let lastIndex = data.length - 1;\r\n        if (lastIndex < 1) return \"데이터가 충분하지 않습니다.\";\r\n\r\n        const currentMACD = data[lastIndex].MACD;\r\n        const currentSignal = data[lastIndex].Signal;\r\n        const prevMACD = data[lastIndex - 1].MACD;\r\n        const prevSignal = data[lastIndex - 1].Signal;\r\n\r\n        const currentGap = currentMACD - currentSignal;\r\n        const prevGap = prevMACD - prevSignal;\r\n\r\n        if (currentGap > 0 && prevGap <= 0) {\r\n            return \"강한 매수 신호: MACD Line이 Signal Line을 아래에서 위로 교차했습니다.\";\r\n        } else if (currentGap < 0 && prevGap >= 0) {\r\n            return \"강한 매도 신호: MACD Line이 Signal Line을 위에서 아래로 교차했습니다.\";\r\n        } else if (Math.abs(currentGap) < Math.abs(prevGap)) {\r\n            return `약한 ${currentGap > 0 ? \"매수\" : \"매도\"} 신호: MACD Line과 Signal Line의 격차가 줄어들고 있습니다.`;\r\n        } else if (Math.abs(currentGap) > Math.abs(prevGap)) {\r\n            return `추세 강화 신호: MACD Line과 Signal Line의 격차가 벌어지고 있습니다.`;\r\n        } else {\r\n            return \"변화 없음: MACD Line과 Signal Line의 격차에 큰 변화가 없습니다.\";\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0) {\r\n            const result = analyzeMACDGap(macdData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [macdData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <h4 className=\"analysis-text\">MACD Crossovers 분석</h4>\r\n            <p>{analysisResult}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMY,cAAc,GAAIC,IAAI,IAAK;IAC7B,IAAIC,SAAS,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC;IAC/B,IAAID,SAAS,GAAG,CAAC,EAAE,OAAO,iBAAiB;IAE3C,MAAME,WAAW,GAAGH,IAAI,CAACC,SAAS,CAAC,CAACG,IAAI;IACxC,MAAMC,aAAa,GAAGL,IAAI,CAACC,SAAS,CAAC,CAACK,MAAM;IAC5C,MAAMC,QAAQ,GAAGP,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC,CAACG,IAAI;IACzC,MAAMI,UAAU,GAAGR,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC,CAACK,MAAM;IAE7C,MAAMG,UAAU,GAAGN,WAAW,GAAGE,aAAa;IAC9C,MAAMK,OAAO,GAAGH,QAAQ,GAAGC,UAAU;IAErC,IAAIC,UAAU,GAAG,CAAC,IAAIC,OAAO,IAAI,CAAC,EAAE;MAChC,OAAO,mDAAmD;IAC9D,CAAC,MAAM,IAAID,UAAU,GAAG,CAAC,IAAIC,OAAO,IAAI,CAAC,EAAE;MACvC,OAAO,mDAAmD;IAC9D,CAAC,MAAM,IAAIC,IAAI,CAACC,GAAG,CAACH,UAAU,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;MACjD,OAAO,MAAMD,UAAU,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,6CAA6C;IAC1F,CAAC,MAAM,IAAIE,IAAI,CAACC,GAAG,CAACH,UAAU,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;MACjD,OAAO,kDAAkD;IAC7D,CAAC,MAAM;MACH,OAAO,gDAAgD;IAC3D;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMW,MAAM,GAAGd,cAAc,CAACJ,QAAQ,CAAC;MACvCG,iBAAiB,CAACe,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,oBACIJ,OAAA;IAAAuB,QAAA,gBACIvB,OAAA,CAACF,aAAa;MAACI,SAAS,EAAEA,SAAU;MAACsB,WAAW,EAAEnB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjE5B,OAAA;MAAI6B,SAAS,EAAC,eAAe;MAAAN,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrD5B,OAAA;MAAAuB,QAAA,EAAIjB;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACzB,EAAA,CA5CQF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}