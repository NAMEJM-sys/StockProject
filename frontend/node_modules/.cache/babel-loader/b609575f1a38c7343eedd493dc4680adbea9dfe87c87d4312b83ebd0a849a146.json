{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\findSupportZones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction findBullishDivergence(stockData, rsiData) {\n  const sortedStockData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\n  let divergences = [];\n  let firstLow = null;\n  for (let i = 1; i < sortedStockData.length - 1; i++) {\n    if (sortedStockData[i - 1].close > sortedStockData[i].close && sortedStockData[i].close < sortedStockData[i + 1].close) {\n      if (!firstLow) {\n        firstLow = {\n          date: sortedStockData[i].date,\n          close: sortedStockData[i].close\n        };\n      } else {\n        if (sortedStockData[i].close < firstLow.close) {\n          const firstLowRsi = rsiData.find(rsi => rsi.date === firstLow.date);\n          const secondLowRsi = rsiData.find(rsi => rsi.date === sortedStockData[i].date);\n          if (firstLowRsi && secondLowRsi && secondLowRsi.RSI > firstLowRsi.RSI) {\n            divergences.push({\n              firstLow: firstLow,\n              secondLow: {\n                date: sortedStockData[i].date,\n                close: sortedStockData[i].close\n              }\n            });\n          }\n\n          // 새로운 저점을 첫 번째 저점으로 갱신\n          firstLow = {\n            date: sortedStockData[i].date,\n            close: sortedStockData[i].close\n          };\n        }\n      }\n    }\n  }\n  return divergences;\n}\nfunction StockAnalysis({\n  stockData\n}) {\n  _s();\n  const [supportZones, setSupportZones] = useState([]);\n  useEffect(() => {\n    if (stockData.length > 0) {\n      const zones = findBullishDivergence(stockData);\n      setSupportZones(zones);\n    }\n  }, [stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Support Zones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: supportZones.map((zone, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Date: \", zone.date, \", Close: \", zone.close]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(StockAnalysis, \"O3Fdvyyy24KebpM8KHBVqc7zi90=\");\n_c = StockAnalysis;\nexport default StockAnalysis;\nvar _c;\n$RefreshReg$(_c, \"StockAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","findBullishDivergence","stockData","rsiData","sortedStockData","sort","a","b","Date","date","divergences","firstLow","i","length","close","firstLowRsi","find","rsi","secondLowRsi","RSI","push","secondLow","StockAnalysis","_s","supportZones","setSupportZones","zones","children","fileName","_jsxFileName","lineNumber","columnNumber","map","zone","index","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/findSupportZones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction findBullishDivergence(stockData, rsiData) {\r\n    const sortedStockData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    let divergences = [];\r\n    let firstLow = null;\r\n\r\n    for (let i = 1; i < sortedStockData.length - 1; i++) {\r\n        if (sortedStockData[i - 1].close > sortedStockData[i].close && sortedStockData[i].close < sortedStockData[i + 1].close) {\r\n            if (!firstLow) {\r\n                firstLow = { date: sortedStockData[i].date, close: sortedStockData[i].close };\r\n            } else {\r\n                if (sortedStockData[i].close < firstLow.close) {\r\n                    const firstLowRsi = rsiData.find(rsi => rsi.date === firstLow.date);\r\n                    const secondLowRsi = rsiData.find(rsi => rsi.date === sortedStockData[i].date);\r\n\r\n                    if (firstLowRsi && secondLowRsi && secondLowRsi.RSI > firstLowRsi.RSI) {\r\n                        divergences.push({\r\n                            firstLow: firstLow,\r\n                            secondLow: { date: sortedStockData[i].date, close: sortedStockData[i].close },\r\n                        });\r\n                    }\r\n\r\n                    // 새로운 저점을 첫 번째 저점으로 갱신\r\n                    firstLow = { date: sortedStockData[i].date, close: sortedStockData[i].close };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return divergences;\r\n}\r\n\r\nfunction StockAnalysis({ stockData }) {\r\n    const [supportZones, setSupportZones] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0) {\r\n            const zones = findBullishDivergence(stockData);\r\n            setSupportZones(zones);\r\n        }\r\n    }, [stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Support Zones</h3>\r\n            <ul>\r\n                {supportZones.map((zone, index) => (\r\n                    <li key={index}>\r\n                        Date: {zone.date}, Close: {zone.close}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}