{"ast":null,"code":"// authService.js\n\n// Simulates an authentication request\nexport const login = async (username, password) => {\n  // Simulate a delay to mimic a network request\n  await new Promise(resolve => setTimeout(resolve, 1000));\n\n  // For now, just a simple check (you can replace this with actual logic)\n  if (username === 'user' && password === 'pass') {\n    return {\n      success: true,\n      message: 'Login successful'\n    };\n  } else {\n    return {\n      success: false,\n      message: 'Invalid username or password'\n    };\n  }\n};\n\n// Simulates a signup request (optional)\nexport const signup = async (username, password) => {\n  // Simulate a delay to mimic a network request\n  await new Promise(resolve => setTimeout(resolve, 1000));\n\n  // Just a placeholder response\n  return {\n    success: true,\n    message: 'Signup successful'\n  };\n};","map":{"version":3,"names":["login","username","password","Promise","resolve","setTimeout","success","message","signup"],"sources":["C:/ProPython/Stock2/frontend/src/services/authService.js"],"sourcesContent":["// authService.js\r\n\r\n// Simulates an authentication request\r\nexport const login = async (username, password) => {\r\n    // Simulate a delay to mimic a network request\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    // For now, just a simple check (you can replace this with actual logic)\r\n    if (username === 'user' && password === 'pass') {\r\n        return { success: true, message: 'Login successful' };\r\n    } else {\r\n        return { success: false, message: 'Invalid username or password' };\r\n    }\r\n};\r\n\r\n// Simulates a signup request (optional)\r\nexport const signup = async (username, password) => {\r\n    // Simulate a delay to mimic a network request\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    // Just a placeholder response\r\n    return { success: true, message: 'Signup successful' };\r\n};"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C;EACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;EAEzD;EACA,IAAIH,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,MAAM,EAAE;IAC5C,OAAO;MAAEI,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAmB,CAAC;EACzD,CAAC,MAAM;IACH,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA+B,CAAC;EACtE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOP,QAAQ,EAAEC,QAAQ,KAAK;EAChD;EACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;EAEzD;EACA,OAAO;IAAEE,OAAO,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAoB,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}