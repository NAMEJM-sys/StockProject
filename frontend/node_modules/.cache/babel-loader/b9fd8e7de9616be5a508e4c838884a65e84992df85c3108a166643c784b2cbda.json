{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MFIAnalysis3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFIAnalysis3({\n  stockCode\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n\n  // MFI 변동성 분석 함수\n  const analyzeMFIVolatility = mfiData => {\n    var _stockData$lastIndex, _stockData;\n    const period = 14; // 분석 기간\n    const lastIndex = mfiData.length - 1;\n    if (lastIndex < period) return '데이터가 충분하지 않습니다.';\n    const currentData = mfiData[lastIndex];\n    const prevData = mfiData[lastIndex - 1];\n\n    // 현재 및 이전 MFI 변동성\n    const currentVolatility = currentData.MFI_Volatility;\n    const prevVolatility = prevData.MFI_Volatility;\n\n    // MFI Z-Score\n    const currentZScore = currentData.MFI_Z_Score;\n\n    // MFI 이동 평균 크로스오버\n    const currentMACrossover = currentData.MFI_MA_Crossover;\n    const prevMACrossover = prevData.MFI_MA_Crossover;\n\n    // High Volatility Flag\n    const isHighVolatility = currentData.High_Volatility;\n\n    // 가격 정보\n    const currentPrice = (_stockData$lastIndex = stockData[lastIndex]) === null || _stockData$lastIndex === void 0 ? void 0 : _stockData$lastIndex.close;\n    const prevPrice = (_stockData = stockData[lastIndex - 1]) === null || _stockData === void 0 ? void 0 : _stockData.close;\n    const priceRising = currentPrice > prevPrice;\n    let result = '';\n\n    // 1. 변동성 수준 분석\n    if (isHighVolatility) {\n      result += `현재 MFI 변동성은 평균보다 높습니다 (${currentVolatility.toFixed(2)}). 시장의 불확실성이 증가하고 있습니다.<br/><br/>`;\n    } else {\n      result += `현재 MFI 변동성은 평균 이하입니다 (${currentVolatility.toFixed(2)}). 시장이 안정적인 상태일 수 있습니다.<br/><br/>`;\n    }\n\n    // 2. Z-Score 분석 (이상치 여부 판단)\n    if (Math.abs(currentZScore) > 2) {\n      result += `현재 MFI의 Z-Score는 ${currentZScore.toFixed(2)}로, 통계적으로 유의미한 수준의 변화를 보이고 있습니다. 이는 잠재적인 추세 전환을 시사할 수 있습니다.<br/><br/>`;\n    } else {\n      result += `현재 MFI의 Z-Score는 ${currentZScore.toFixed(2)}로, 일반적인 범위 내에 있습니다.<br/><br/>`;\n    }\n\n    // 3. 이동 평균 크로스오버 분석\n    if (prevMACrossover !== currentMACrossover) {\n      if (currentMACrossover === 1) {\n        result += `MFI의 단기 이동 평균이 장기 이동 평균을 상향 돌파했습니다. 이는 상승 추세의 시작을 알릴 수 있습니다.<br/><br/>`;\n      } else {\n        result += `MFI의 단기 이동 평균이 장기 이동 평균을 하향 돌파했습니다. 이는 하락 추세의 시작을 알릴 수 있습니다.<br/><br/>`;\n      }\n    }\n\n    // 4. 가격 움직임과의 관계 분석\n    if (priceRising && currentMACrossover === 1) {\n      result += `가격이 상승하고 있으며, MFI도 상승 추세를 보이고 있습니다. 이는 강한 매수 신호일 수 있습니다.<br/>`;\n    } else if (!priceRising && currentMACrossover === -1) {\n      result += `가격이 하락하고 있으며, MFI도 하락 추세를 보이고 있습니다. 이는 매도 신호일 수 있습니다.<br/>`;\n    } else {\n      result += `가격과 MFI의 움직임이 일치하지 않습니다. 추가적인 분석이 필요합니다.<br/>`;\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (mfiData.length > 0 && stockData.length > 0) {\n      const result = analyzeMFIVolatility(mfiData);\n      setAnalysisResult(result);\n    }\n  }, [mfiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MFI \\uBCC0\\uB3D9\\uC131 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(MFIAnalysis3, \"7bN3uFgPvWhQU38aocWDCHVSLbA=\");\n_c = MFIAnalysis3;\nexport default MFIAnalysis3;\nvar _c;\n$RefreshReg$(_c, \"MFIAnalysis3\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","FetchStockDataForCode","jsxDEV","_jsxDEV","MFIAnalysis3","stockCode","_s","mfiData","setMFIData","stockData","setStockData","analysisResult","setAnalysisResult","analyzeMFIVolatility","_stockData$lastIndex","_stockData","period","lastIndex","length","currentData","prevData","currentVolatility","MFI_Volatility","prevVolatility","currentZScore","MFI_Z_Score","currentMACrossover","MFI_MA_Crossover","prevMACrossover","isHighVolatility","High_Volatility","currentPrice","close","prevPrice","priceRising","result","toFixed","Math","abs","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MFIAnalysis3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nfunction MFIAnalysis3({ stockCode }) {\r\n  const [mfiData, setMFIData] = useState([]);\r\n  const [stockData, setStockData] = useState([]);\r\n  const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n  // MFI 변동성 분석 함수\r\n  const analyzeMFIVolatility = (mfiData) => {\r\n    const period = 14; // 분석 기간\r\n    const lastIndex = mfiData.length - 1;\r\n\r\n    if (lastIndex < period) return '데이터가 충분하지 않습니다.';\r\n\r\n    const currentData = mfiData[lastIndex];\r\n    const prevData = mfiData[lastIndex - 1];\r\n\r\n    // 현재 및 이전 MFI 변동성\r\n    const currentVolatility = currentData.MFI_Volatility;\r\n    const prevVolatility = prevData.MFI_Volatility;\r\n\r\n    // MFI Z-Score\r\n    const currentZScore = currentData.MFI_Z_Score;\r\n\r\n    // MFI 이동 평균 크로스오버\r\n    const currentMACrossover = currentData.MFI_MA_Crossover;\r\n    const prevMACrossover = prevData.MFI_MA_Crossover;\r\n\r\n    // High Volatility Flag\r\n    const isHighVolatility = currentData.High_Volatility;\r\n\r\n    // 가격 정보\r\n    const currentPrice = stockData[lastIndex]?.close;\r\n    const prevPrice = stockData[lastIndex - 1]?.close;\r\n    const priceRising = currentPrice > prevPrice;\r\n\r\n    let result = '';\r\n\r\n    // 1. 변동성 수준 분석\r\n    if (isHighVolatility) {\r\n      result += `현재 MFI 변동성은 평균보다 높습니다 (${currentVolatility.toFixed(2)}). 시장의 불확실성이 증가하고 있습니다.<br/><br/>`;\r\n    } else {\r\n      result += `현재 MFI 변동성은 평균 이하입니다 (${currentVolatility.toFixed(2)}). 시장이 안정적인 상태일 수 있습니다.<br/><br/>`;\r\n    }\r\n\r\n    // 2. Z-Score 분석 (이상치 여부 판단)\r\n    if (Math.abs(currentZScore) > 2) {\r\n      result += `현재 MFI의 Z-Score는 ${currentZScore.toFixed(2)}로, 통계적으로 유의미한 수준의 변화를 보이고 있습니다. 이는 잠재적인 추세 전환을 시사할 수 있습니다.<br/><br/>`;\r\n    } else {\r\n      result += `현재 MFI의 Z-Score는 ${currentZScore.toFixed(2)}로, 일반적인 범위 내에 있습니다.<br/><br/>`;\r\n    }\r\n\r\n    // 3. 이동 평균 크로스오버 분석\r\n    if (prevMACrossover !== currentMACrossover) {\r\n      if (currentMACrossover === 1) {\r\n        result += `MFI의 단기 이동 평균이 장기 이동 평균을 상향 돌파했습니다. 이는 상승 추세의 시작을 알릴 수 있습니다.<br/><br/>`;\r\n      } else {\r\n        result += `MFI의 단기 이동 평균이 장기 이동 평균을 하향 돌파했습니다. 이는 하락 추세의 시작을 알릴 수 있습니다.<br/><br/>`;\r\n      }\r\n    }\r\n\r\n    // 4. 가격 움직임과의 관계 분석\r\n    if (priceRising && currentMACrossover === 1) {\r\n      result += `가격이 상승하고 있으며, MFI도 상승 추세를 보이고 있습니다. 이는 강한 매수 신호일 수 있습니다.<br/>`;\r\n    } else if (!priceRising && currentMACrossover === -1) {\r\n      result += `가격이 하락하고 있으며, MFI도 하락 추세를 보이고 있습니다. 이는 매도 신호일 수 있습니다.<br/>`;\r\n    } else {\r\n      result += `가격과 MFI의 움직임이 일치하지 않습니다. 추가적인 분석이 필요합니다.<br/>`;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mfiData.length > 0 && stockData.length > 0) {\r\n      const result = analyzeMFIVolatility(mfiData);\r\n      setAnalysisResult(result);\r\n    }\r\n  }, [mfiData, stockData]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n      <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n      <h4>MFI 변동성 분석</h4>\r\n      <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MFIAnalysis3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}