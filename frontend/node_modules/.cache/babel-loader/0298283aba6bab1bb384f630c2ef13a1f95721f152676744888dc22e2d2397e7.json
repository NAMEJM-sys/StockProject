{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\MFICalculations2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FetchMFIData from \"../ComponentsFetch/FetchMFIData\";\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst findSwingLows = (data, range, valueKey) => {\n  // 기존 코드 그대로 사용\n};\nconst findSwingHighs = (data, range, valueKey) => {\n  // 기존 코드 그대로 사용\n};\nfunction MFICalculations2({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const calculateDivergenceScore = () => {\n    const swingRange = 2;\n    const dataLength = Math.min(mfiData.length, stockData.length);\n    if (dataLength < swingRange * 2) {\n      if (onScoreCalculated) {\n        onScoreCalculated(null);\n      }\n      return;\n    }\n    const priceLows = findSwingLows(stockData, swingRange, 'close');\n    const priceHighs = findSwingHighs(stockData, swingRange, 'close');\n    const mfiLows = findSwingLows(mfiData, swingRange, 'MFI');\n    const mfiHighs = findSwingHighs(mfiData, swingRange, 'MFI');\n    let divergenceType = null; // 'bullish', 'bearish', null\n\n    // 상승 다이버전스 감지\n    if (priceLows.length >= 2 && mfiLows.length >= 2) {\n      const prevPriceLow = priceLows[priceLows.length - 2];\n      const recentPriceLow = priceLows[priceLows.length - 1];\n      const prevMFILow = mfiLows.find(mfiLow => mfiLow.date === prevPriceLow.date);\n      const recentMFILow = mfiLows.find(mfiLow => mfiLow.date === recentPriceLow.date);\n      if (prevMFILow && recentMFILow) {\n        if (recentPriceLow.value < prevPriceLow.value && recentMFILow.value > prevMFILow.value) {\n          divergenceType = 'bullish';\n        }\n      }\n    }\n\n    // 하락 다이버전스 감지\n    if (priceHighs.length >= 2 && mfiHighs.length >= 2) {\n      const prevPriceHigh = priceHighs[priceHighs.length - 2];\n      const recentPriceHigh = priceHighs[priceHighs.length - 1];\n      const prevMFIHigh = mfiHighs.find(mfiHigh => mfiHigh.date === prevPriceHigh.date);\n      const recentMFIHigh = mfiHighs.find(mfiHigh => mfiHigh.date === recentPriceHigh.date);\n      if (prevMFIHigh && recentMFIHigh) {\n        if (recentPriceHigh.value > prevPriceHigh.value && recentMFIHigh.value < prevMFIHigh.value) {\n          divergenceType = 'bearish';\n        }\n      }\n    }\n\n    // 점수 부여\n    let calculatedScore = 5; // 기본 보통\n    if (divergenceType === 'bullish') {\n      calculatedScore = 3; // 매수\n    } else if (divergenceType === 'bearish') {\n      calculatedScore = 7; // 매도\n    }\n    if (onScoreCalculated) {\n      onScoreCalculated(calculatedScore);\n    }\n  };\n  useEffect(() => {\n    if (mfiData.length > 0 && stockData.length > 0) {\n      calculateDivergenceScore();\n    }\n  }, [mfiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(MFICalculations2, \"P++iAZDaQeKvZTRK+MCdZM7Lku8=\");\n_c = MFICalculations2;\nexport default MFICalculations2;\nvar _c;\n$RefreshReg$(_c, \"MFICalculations2\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","FetchStockDataForCode","jsxDEV","_jsxDEV","findSwingLows","data","range","valueKey","findSwingHighs","MFICalculations2","stockCode","onScoreCalculated","_s","mfiData","setMFIData","stockData","setStockData","calculateDivergenceScore","swingRange","dataLength","Math","min","length","priceLows","priceHighs","mfiLows","mfiHighs","divergenceType","prevPriceLow","recentPriceLow","prevMFILow","find","mfiLow","date","recentMFILow","value","prevPriceHigh","recentPriceHigh","prevMFIHigh","mfiHigh","recentMFIHigh","calculatedScore","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/MFICalculations2.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FetchMFIData from \"../ComponentsFetch/FetchMFIData\";\r\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\r\n\r\nconst findSwingLows = (data, range, valueKey) => {\r\n    // 기존 코드 그대로 사용\r\n};\r\n\r\nconst findSwingHighs = (data, range, valueKey) => {\r\n    // 기존 코드 그대로 사용\r\n};\r\n\r\nfunction MFICalculations2({ stockCode, onScoreCalculated }) {\r\n    const [mfiData, setMFIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n\r\n    const calculateDivergenceScore = () => {\r\n        const swingRange = 2;\r\n        const dataLength = Math.min(mfiData.length, stockData.length);\r\n\r\n        if (dataLength < swingRange * 2) {\r\n            if (onScoreCalculated) {\r\n                onScoreCalculated(null);\r\n            }\r\n            return;\r\n        }\r\n\r\n        const priceLows = findSwingLows(stockData, swingRange, 'close');\r\n        const priceHighs = findSwingHighs(stockData, swingRange, 'close');\r\n\r\n        const mfiLows = findSwingLows(mfiData, swingRange, 'MFI');\r\n        const mfiHighs = findSwingHighs(mfiData, swingRange, 'MFI');\r\n\r\n        let divergenceType = null; // 'bullish', 'bearish', null\r\n\r\n        // 상승 다이버전스 감지\r\n        if (priceLows.length >= 2 && mfiLows.length >= 2) {\r\n            const prevPriceLow = priceLows[priceLows.length - 2];\r\n            const recentPriceLow = priceLows[priceLows.length - 1];\r\n\r\n            const prevMFILow = mfiLows.find(mfiLow => mfiLow.date === prevPriceLow.date);\r\n            const recentMFILow = mfiLows.find(mfiLow => mfiLow.date === recentPriceLow.date);\r\n\r\n            if (prevMFILow && recentMFILow) {\r\n                if (recentPriceLow.value < prevPriceLow.value && recentMFILow.value > prevMFILow.value) {\r\n                    divergenceType = 'bullish';\r\n                }\r\n            }\r\n        }\r\n\r\n        // 하락 다이버전스 감지\r\n        if (priceHighs.length >= 2 && mfiHighs.length >= 2) {\r\n            const prevPriceHigh = priceHighs[priceHighs.length - 2];\r\n            const recentPriceHigh = priceHighs[priceHighs.length - 1];\r\n\r\n            const prevMFIHigh = mfiHighs.find(mfiHigh => mfiHigh.date === prevPriceHigh.date);\r\n            const recentMFIHigh = mfiHighs.find(mfiHigh => mfiHigh.date === recentPriceHigh.date);\r\n\r\n            if (prevMFIHigh && recentMFIHigh) {\r\n                if (recentPriceHigh.value > prevPriceHigh.value && recentMFIHigh.value < prevMFIHigh.value) {\r\n                    divergenceType = 'bearish';\r\n                }\r\n            }\r\n        }\r\n\r\n        // 점수 부여\r\n        let calculatedScore = 5; // 기본 보통\r\n        if (divergenceType === 'bullish') {\r\n            calculatedScore = 3; // 매수\r\n        } else if (divergenceType === 'bearish') {\r\n            calculatedScore = 7; // 매도\r\n        }\r\n\r\n        if (onScoreCalculated) {\r\n            onScoreCalculated(calculatedScore);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mfiData.length > 0 && stockData.length > 0) {\r\n            calculateDivergenceScore();\r\n        }\r\n    }, [mfiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MFICalculations2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}