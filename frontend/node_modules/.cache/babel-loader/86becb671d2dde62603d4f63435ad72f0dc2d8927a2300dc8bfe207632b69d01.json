{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\SARAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FetchParabolicSARData from \"./FetchParabolicSARData\";\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SARAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [sarData, setSARData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState(\"\");\n\n  // Parabolic SAR 분석 함수\n  const analyzeParabolicSAR = (sarData, stockData) => {\n    var _sarData$lastIndex, _stockData$lastIndex;\n    let lastIndex = sarData.length - 1;\n    if (lastIndex < 1) return \"데이터가 충분하지 않습니다.\";\n    const currentSAR = (_sarData$lastIndex = sarData[lastIndex]) === null || _sarData$lastIndex === void 0 ? void 0 : _sarData$lastIndex.Parabolic_SAR;\n    const currentPrice = (_stockData$lastIndex = stockData[lastIndex]) === null || _stockData$lastIndex === void 0 ? void 0 : _stockData$lastIndex.close;\n\n    // close 값이 undefined인 경우 예외 처리\n    if (currentSAR === undefined || currentPrice === undefined) {\n      return \"데이터가 올바르게 로드되지 않았습니다.\";\n    }\n    let result = \"\";\n\n    // 1. Parabolic SAR 추세 분석\n    if (currentPrice > currentSAR) {\n      result += `상승 추세가 유지되고 있습니다. (SAR: ${currentSAR.toFixed(2)}, Close: ${currentPrice.toFixed(2)})<br /><br />`;\n    } else if (currentPrice < currentSAR) {\n      result += `하락 추세가 유지되고 있습니다. (SAR: ${currentSAR.toFixed(2)}, Close: ${currentPrice.toFixed(2)})<br /><br />`;\n    }\n\n    // 더 자세한 분석 추가 가능\n\n    return result;\n  };\n  useEffect(() => {\n    if (sarData.length > 0 && stockData.length > 0) {\n      const result = analyzeParabolicSAR(sarData, stockData);\n      setAnalysisResult(result);\n    }\n  }, [sarData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchParabolicSARData, {\n      stockCode: stockCode,\n      onSARFetch: setSARData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(SARAnalysis1, \"hdGaJSXKBmjy4swGcgQEMSqVGZU=\");\n_c = SARAnalysis1;\nexport default SARAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"SARAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchParabolicSARData","FetchStockDataForCode","jsxDEV","_jsxDEV","SARAnalysis1","stockCode","_s","sarData","setSARData","stockData","setStockData","analysisResult","setAnalysisResult","analyzeParabolicSAR","_sarData$lastIndex","_stockData$lastIndex","lastIndex","length","currentSAR","Parabolic_SAR","currentPrice","close","undefined","result","toFixed","children","onSARFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/SARAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FetchParabolicSARData from \"./FetchParabolicSARData\";\r\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\r\n\r\nfunction SARAnalysis1({ stockCode }) {\r\n    const [sarData, setSARData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState(\"\");\r\n\r\n    // Parabolic SAR 분석 함수\r\n    const analyzeParabolicSAR = (sarData, stockData) => {\r\n        let lastIndex = sarData.length - 1;\r\n        if (lastIndex < 1) return \"데이터가 충분하지 않습니다.\";\r\n\r\n        const currentSAR = sarData[lastIndex]?.Parabolic_SAR;\r\n        const currentPrice = stockData[lastIndex]?.close;\r\n\r\n        // close 값이 undefined인 경우 예외 처리\r\n        if (currentSAR === undefined || currentPrice === undefined) {\r\n            return \"데이터가 올바르게 로드되지 않았습니다.\";\r\n        }\r\n\r\n        let result = \"\";\r\n\r\n        // 1. Parabolic SAR 추세 분석\r\n        if (currentPrice > currentSAR) {\r\n            result += `상승 추세가 유지되고 있습니다. (SAR: ${currentSAR.toFixed(2)}, Close: ${currentPrice.toFixed(2)})<br /><br />`;\r\n        } else if (currentPrice < currentSAR) {\r\n            result += `하락 추세가 유지되고 있습니다. (SAR: ${currentSAR.toFixed(2)}, Close: ${currentPrice.toFixed(2)})<br /><br />`;\r\n        }\r\n\r\n        // 더 자세한 분석 추가 가능\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (sarData.length > 0 && stockData.length > 0) {\r\n            const result = analyzeParabolicSAR(sarData, stockData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [sarData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchParabolicSARData stockCode={stockCode} onSARFetch={setSARData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <div dangerouslySetInnerHTML={{ __html: analysisResult }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SARAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}