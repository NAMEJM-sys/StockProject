{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\IchimokuAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchIchimokuData from '../ComponentsFetch/FetchStockOrignal/FetchIchimokuData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IchimokuAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [ichimokuData, setIchimokuData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzePriceCloudRelation = data => {\n    if (data.length < 26) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = data.length - 1;\n    const currentData = data[lastIndex];\n    const currentClose = currentData.close;\n    const senkouA = currentData.Senkou_Span_A;\n    const senkouB = currentData.Senkou_Span_B;\n    let result = '<strong>가격과 구름대의 관계 분석</strong><br/><br/>';\n\n    // 구름대의 상하단 결정\n    const upperCloud = Math.max(senkouA, senkouB);\n    const lowerCloud = Math.min(senkouA, senkouB);\n    if (currentClose > upperCloud) {\n      result += '가격이 구름대 위에 있어 <strong>상승 추세</strong>입니다.<br/>';\n    } else if (currentClose < lowerCloud) {\n      result += '가격이 구름대 아래에 있어 <strong>하락 추세</strong>입니다.<br/>';\n    } else {\n      result += '가격이 구름대 내부에 있어 추세가 불확실합니다.<br/>';\n    }\n\n    // 구름대 돌파 여부 확인\n    const prevData = data[lastIndex - 1];\n    const prevClose = prevData.close;\n    if (prevClose <= lowerCloud && currentClose > upperCloud) {\n      result += '→ 가격이 구름대를 상향 돌파하여 강한 <strong>매수 신호</strong>입니다.<br/>';\n    } else if (prevClose >= upperCloud && currentClose < lowerCloud) {\n      result += '→ 가격이 구름대를 하향 돌파하여 강한 <strong>매도 신호</strong>입니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (ichimokuData.length > 0) {\n      const result = analyzePriceCloudRelation(ichimokuData);\n      setAnalysisResult(result);\n    }\n  }, [ichimokuData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchIchimokuData, {\n      stockCode: stockCode,\n      onIchimokuFetch: setIchimokuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Ichimoku Cloud \\uAC00\\uACA9\\uACFC \\uAD6C\\uB984\\uB300 \\uAD00\\uACC4 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(IchimokuAnalysis2, \"cbvlJTPc1AjlqxLi3pd4z1dZId0=\");\n_c = IchimokuAnalysis2;\nexport default IchimokuAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"IchimokuAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchIchimokuData","jsxDEV","_jsxDEV","IchimokuAnalysis2","stockCode","_s","ichimokuData","setIchimokuData","analysisResult","setAnalysisResult","analyzePriceCloudRelation","data","length","lastIndex","currentData","currentClose","close","senkouA","Senkou_Span_A","senkouB","Senkou_Span_B","result","upperCloud","Math","max","lowerCloud","min","prevData","prevClose","children","onIchimokuFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/IchimokuAnalysis2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchIchimokuData from '../ComponentsFetch/FetchStockOrignal/FetchIchimokuData';\r\n\r\nfunction IchimokuAnalysis2({ stockCode }) {\r\n    const [ichimokuData, setIchimokuData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzePriceCloudRelation = (data) => {\r\n        if (data.length < 26) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = data.length - 1;\r\n        const currentData = data[lastIndex];\r\n\r\n        const currentClose = currentData.close;\r\n        const senkouA = currentData.Senkou_Span_A;\r\n        const senkouB = currentData.Senkou_Span_B;\r\n\r\n        let result = '<strong>가격과 구름대의 관계 분석</strong><br/><br/>';\r\n\r\n        // 구름대의 상하단 결정\r\n        const upperCloud = Math.max(senkouA, senkouB);\r\n        const lowerCloud = Math.min(senkouA, senkouB);\r\n\r\n        if (currentClose > upperCloud) {\r\n            result += '가격이 구름대 위에 있어 <strong>상승 추세</strong>입니다.<br/>';\r\n        } else if (currentClose < lowerCloud) {\r\n            result += '가격이 구름대 아래에 있어 <strong>하락 추세</strong>입니다.<br/>';\r\n        } else {\r\n            result += '가격이 구름대 내부에 있어 추세가 불확실합니다.<br/>';\r\n        }\r\n\r\n        // 구름대 돌파 여부 확인\r\n        const prevData = data[lastIndex - 1];\r\n        const prevClose = prevData.close;\r\n\r\n        if (prevClose <= lowerCloud && currentClose > upperCloud) {\r\n            result += '→ 가격이 구름대를 상향 돌파하여 강한 <strong>매수 신호</strong>입니다.<br/>';\r\n        } else if (prevClose >= upperCloud && currentClose < lowerCloud) {\r\n            result += '→ 가격이 구름대를 하향 돌파하여 강한 <strong>매도 신호</strong>입니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ichimokuData.length > 0) {\r\n            const result = analyzePriceCloudRelation(ichimokuData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [ichimokuData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchIchimokuData stockCode={stockCode} onIchimokuFetch={setIchimokuData} />\r\n            <h4>Ichimoku Cloud 가격과 구름대 관계 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IchimokuAnalysis2;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,wDAAwD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,SAASC,iBAAiBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,yBAAyB,GAAIC,IAAI,IAAK;IACxC,IAAIA,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;MAClB,OAAO,iBAAiB;IAC5B;IAEA,MAAMC,SAAS,GAAGF,IAAI,CAACC,MAAM,GAAG,CAAC;IACjC,MAAME,WAAW,GAAGH,IAAI,CAACE,SAAS,CAAC;IAEnC,MAAME,YAAY,GAAGD,WAAW,CAACE,KAAK;IACtC,MAAMC,OAAO,GAAGH,WAAW,CAACI,aAAa;IACzC,MAAMC,OAAO,GAAGL,WAAW,CAACM,aAAa;IAEzC,IAAIC,MAAM,GAAG,2CAA2C;;IAExD;IACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACP,OAAO,EAAEE,OAAO,CAAC;IAC7C,MAAMM,UAAU,GAAGF,IAAI,CAACG,GAAG,CAACT,OAAO,EAAEE,OAAO,CAAC;IAE7C,IAAIJ,YAAY,GAAGO,UAAU,EAAE;MAC3BD,MAAM,IAAI,+CAA+C;IAC7D,CAAC,MAAM,IAAIN,YAAY,GAAGU,UAAU,EAAE;MAClCJ,MAAM,IAAI,gDAAgD;IAC9D,CAAC,MAAM;MACHA,MAAM,IAAI,iCAAiC;IAC/C;;IAEA;IACA,MAAMM,QAAQ,GAAGhB,IAAI,CAACE,SAAS,GAAG,CAAC,CAAC;IACpC,MAAMe,SAAS,GAAGD,QAAQ,CAACX,KAAK;IAEhC,IAAIY,SAAS,IAAIH,UAAU,IAAIV,YAAY,GAAGO,UAAU,EAAE;MACtDD,MAAM,IAAI,uDAAuD;IACrE,CAAC,MAAM,IAAIO,SAAS,IAAIN,UAAU,IAAIP,YAAY,GAAGU,UAAU,EAAE;MAC7DJ,MAAM,IAAI,uDAAuD;IACrE;IAEA,OAAOA,MAAM;EACjB,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZ,IAAIO,YAAY,CAACM,MAAM,GAAG,CAAC,EAAE;MACzB,MAAMS,MAAM,GAAGX,yBAAyB,CAACJ,YAAY,CAAC;MACtDG,iBAAiB,CAACY,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAElB,oBACIJ,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACF,iBAAiB;MAACI,SAAS,EAAEA,SAAU;MAAC0B,eAAe,EAAEvB;IAAgB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EhC,OAAA;MAAA2B,QAAA,EAAI;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrChC,OAAA;MAAGiC,uBAAuB,EAAE;QAAEC,MAAM,EAAE5B;MAAe;IAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAAC7B,EAAA,CAzDQF,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AA2D1B,eAAeA,iBAAiB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}