{"ast":null,"code":"const getCSRFToken = () => {\n  const csrfCookie = document.cookie.split('; ').find(row => row.startsWith('csrftoken='));\n  return csrfCookie ? csrfCookie.split('=')[1] : null;\n};\nconst login = async credentials => {\n  try {\n    const csrfToken = getCSRFToken();\n    const response = await fetch('http://127.0.0.1:8000/api/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrfToken\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error during login:', error);\n    throw error;\n  }\n};\nexport default {\n  login\n};","map":{"version":3,"names":["getCSRFToken","csrfCookie","document","cookie","split","find","row","startsWith","login","credentials","csrfToken","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console"],"sources":["C:/ProPython/Stock2/frontend/src/services/authService.js"],"sourcesContent":["const getCSRFToken = () => {\r\n    const csrfCookie = document.cookie\r\n        .split('; ')\r\n        .find(row => row.startsWith('csrftoken='));\r\n\r\n    return csrfCookie ? csrfCookie.split('=')[1] : null;\r\n};\r\n\r\nconst login = async (credentials) => {\r\n    try {\r\n        const csrfToken = getCSRFToken();\r\n\r\n        const response = await fetch('http://127.0.0.1:8000/api/login/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': csrfToken,\r\n            },\r\n            body: JSON.stringify(credentials),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Login failed');\r\n        }\r\n\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error during login:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport default {\r\n    login,\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAGA,CAAA,KAAM;EACvB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,MAAM,CAC7BC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC;EAE9C,OAAON,UAAU,GAAGA,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACvD,CAAC;AAED,MAAMI,KAAK,GAAG,MAAOC,WAAW,IAAK;EACjC,IAAI;IACA,MAAMC,SAAS,GAAGV,YAAY,CAAC,CAAC;IAEhC,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,aAAa,EAAEJ;MACnB,CAAC;MACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;IACpC,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACnC;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,eAAe;EACXb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}