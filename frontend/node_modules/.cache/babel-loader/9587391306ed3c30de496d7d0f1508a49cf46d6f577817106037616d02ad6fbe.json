{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\KeltnelAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KeltnerAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [keltnerData, setKeltnerData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzePriceBreakouts = keltnerData => {\n    if (keltnerData.length < 2) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = keltnerData.length - 1;\n    const currentData = keltnerData[lastIndex];\n    const prevData = keltnerData[lastIndex - 1];\n    const currentClose = currentData.close;\n    const currentUpper = currentData.Upper_Band;\n    const currentLower = currentData.Lower_Band;\n    const prevClose = prevData.close;\n    const prevUpper = prevData.Upper_Band;\n    const prevLower = prevData.Lower_Band;\n    let result = '<strong>가격 돌파 분석</strong><br/><br/>';\n\n    // 상한선 돌파 확인\n    if (prevClose <= prevUpper && currentClose > currentUpper) {\n      result += '매수 신호 발생: 가격이 상한선을 상향 돌파했습니다.<br/>';\n    }\n    // 하한선 돌파 확인\n    else if (prevClose >= prevLower && currentClose < currentLower) {\n      result += '매도 신호 발생: 가격이 하한선을 하향 돌파했습니다.<br/>';\n    } else {\n      result += '가격이 Keltner Channel 내에서 움직이고 있습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (keltnerData.length > 0) {\n      const result = analyzePriceBreakouts(keltnerData);\n      setAnalysisResult(result);\n    }\n  }, [keltnerData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchKeltnerData, {\n      stockCode: stockCode,\n      onKeltnerFetch: setKeltnerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Keltner Channel \\uAC00\\uACA9 \\uB3CC\\uD30C \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(KeltnerAnalysis1, \"aZZIuFHnzaw3LQSAI9Abkvj+T8Y=\");\n_c = KeltnerAnalysis1;\nexport default KeltnerAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"KeltnerAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchKeltnerData","jsxDEV","_jsxDEV","KeltnerAnalysis1","stockCode","_s","keltnerData","setKeltnerData","analysisResult","setAnalysisResult","analyzePriceBreakouts","length","lastIndex","currentData","prevData","currentClose","close","currentUpper","Upper_Band","currentLower","Lower_Band","prevClose","prevUpper","prevLower","result","children","onKeltnerFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/KeltnelAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\r\n\r\nfunction KeltnerAnalysis1({ stockCode }) {\r\n    const [keltnerData, setKeltnerData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzePriceBreakouts = (keltnerData) => {\r\n        if (keltnerData.length < 2) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = keltnerData.length - 1;\r\n        const currentData = keltnerData[lastIndex];\r\n        const prevData = keltnerData[lastIndex - 1];\r\n\r\n        const currentClose = currentData.close;\r\n        const currentUpper = currentData.Upper_Band;\r\n        const currentLower = currentData.Lower_Band;\r\n\r\n        const prevClose = prevData.close;\r\n        const prevUpper = prevData.Upper_Band;\r\n        const prevLower = prevData.Lower_Band;\r\n\r\n        let result = '<strong>가격 돌파 분석</strong><br/><br/>';\r\n\r\n        // 상한선 돌파 확인\r\n        if (prevClose <= prevUpper && currentClose > currentUpper) {\r\n            result += '매수 신호 발생: 가격이 상한선을 상향 돌파했습니다.<br/>';\r\n        }\r\n        // 하한선 돌파 확인\r\n        else if (prevClose >= prevLower && currentClose < currentLower) {\r\n            result += '매도 신호 발생: 가격이 하한선을 하향 돌파했습니다.<br/>';\r\n        }\r\n        else {\r\n            result += '가격이 Keltner Channel 내에서 움직이고 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (keltnerData.length > 0) {\r\n            const result = analyzePriceBreakouts(keltnerData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [keltnerData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchKeltnerData stockCode={stockCode} onKeltnerFetch={setKeltnerData} />\r\n            <h4>Keltner Channel 가격 돌파 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeltnerAnalysis1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,gBAAgBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,qBAAqB,GAAIJ,WAAW,IAAK;IAC3C,IAAIA,WAAW,CAACK,MAAM,GAAG,CAAC,EAAE;MACxB,OAAO,iBAAiB;IAC5B;IAEA,MAAMC,SAAS,GAAGN,WAAW,CAACK,MAAM,GAAG,CAAC;IACxC,MAAME,WAAW,GAAGP,WAAW,CAACM,SAAS,CAAC;IAC1C,MAAME,QAAQ,GAAGR,WAAW,CAACM,SAAS,GAAG,CAAC,CAAC;IAE3C,MAAMG,YAAY,GAAGF,WAAW,CAACG,KAAK;IACtC,MAAMC,YAAY,GAAGJ,WAAW,CAACK,UAAU;IAC3C,MAAMC,YAAY,GAAGN,WAAW,CAACO,UAAU;IAE3C,MAAMC,SAAS,GAAGP,QAAQ,CAACE,KAAK;IAChC,MAAMM,SAAS,GAAGR,QAAQ,CAACI,UAAU;IACrC,MAAMK,SAAS,GAAGT,QAAQ,CAACM,UAAU;IAErC,IAAII,MAAM,GAAG,qCAAqC;;IAElD;IACA,IAAIH,SAAS,IAAIC,SAAS,IAAIP,YAAY,GAAGE,YAAY,EAAE;MACvDO,MAAM,IAAI,oCAAoC;IAClD;IACA;IAAA,KACK,IAAIH,SAAS,IAAIE,SAAS,IAAIR,YAAY,GAAGI,YAAY,EAAE;MAC5DK,MAAM,IAAI,oCAAoC;IAClD,CAAC,MACI;MACDA,MAAM,IAAI,yCAAyC;IACvD;IAEA,OAAOA,MAAM;EACjB,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAW,CAACK,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMa,MAAM,GAAGd,qBAAqB,CAACJ,WAAW,CAAC;MACjDG,iBAAiB,CAACe,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAAuB,QAAA,gBACIvB,OAAA,CAACF,gBAAgB;MAACI,SAAS,EAAEA,SAAU;MAACsB,cAAc,EAAEnB;IAAe;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E5B,OAAA;MAAAuB,QAAA,EAAI;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC5B,OAAA;MAAG6B,uBAAuB,EAAE;QAAEC,MAAM,EAAExB;MAAe;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAACzB,EAAA,CApDQF,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAsDzB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}