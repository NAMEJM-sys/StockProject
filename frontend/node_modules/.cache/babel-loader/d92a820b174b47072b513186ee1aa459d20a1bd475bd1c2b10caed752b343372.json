{"ast":null,"code":"import mean from \"./mean.js\";\nimport sampleVariance from \"./sample_variance.js\";\n\n/**\n * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n * Tests whether \"mean(X)-mean(Y) = difference\", (\n * in the most common case, we often have `difference == 0` to test if two samples\n * are likely to be taken from populations with the same mean value) with\n * no prior knowledge on standard deviations of both samples\n * other than the fact that they have the same standard deviation.\n *\n * Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * `diff` can be omitted if it equals 0.\n *\n * [This is used to reject](https://en.wikipedia.org/wiki/Exclusion_of_the_null_hypothesis)\n * a null hypothesis that the two populations that have been sampled into\n * `sampleX` and `sampleY` are equal to each other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @param {number} [difference=0]\n * @returns {number|null} test result\n *\n * @example\n * tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); // => -2.1908902300206643\n */\nfunction tTestTwoSample(sampleX, sampleY, difference) {\n  const n = sampleX.length;\n  const m = sampleY.length;\n\n  // If either sample doesn't actually have any values, we can't\n  // compute this at all, so we return `null`.\n  if (!n || !m) {\n    return null;\n  }\n\n  // default difference (mu) is zero\n  if (!difference) {\n    difference = 0;\n  }\n  const meanX = mean(sampleX);\n  const meanY = mean(sampleY);\n  const sampleVarianceX = sampleVariance(sampleX);\n  const sampleVarianceY = sampleVariance(sampleY);\n  if (typeof meanX === \"number\" && typeof meanY === \"number\" && typeof sampleVarianceX === \"number\" && typeof sampleVarianceY === \"number\") {\n    const weightedVariance = ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) / (n + m - 2);\n    return (meanX - meanY - difference) / Math.sqrt(weightedVariance * (1 / n + 1 / m));\n  }\n}\nexport default tTestTwoSample;","map":{"version":3,"names":["mean","sampleVariance","tTestTwoSample","sampleX","sampleY","difference","n","length","m","meanX","meanY","sampleVarianceX","sampleVarianceY","weightedVariance","Math","sqrt"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/t_test_two_sample.js"],"sourcesContent":["import mean from \"./mean.js\";\nimport sampleVariance from \"./sample_variance.js\";\n\n/**\n * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n * Tests whether \"mean(X)-mean(Y) = difference\", (\n * in the most common case, we often have `difference == 0` to test if two samples\n * are likely to be taken from populations with the same mean value) with\n * no prior knowledge on standard deviations of both samples\n * other than the fact that they have the same standard deviation.\n *\n * Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * `diff` can be omitted if it equals 0.\n *\n * [This is used to reject](https://en.wikipedia.org/wiki/Exclusion_of_the_null_hypothesis)\n * a null hypothesis that the two populations that have been sampled into\n * `sampleX` and `sampleY` are equal to each other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @param {number} [difference=0]\n * @returns {number|null} test result\n *\n * @example\n * tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); // => -2.1908902300206643\n */\nfunction tTestTwoSample(sampleX, sampleY, difference) {\n    const n = sampleX.length;\n    const m = sampleY.length;\n\n    // If either sample doesn't actually have any values, we can't\n    // compute this at all, so we return `null`.\n    if (!n || !m) {\n        return null;\n    }\n\n    // default difference (mu) is zero\n    if (!difference) {\n        difference = 0;\n    }\n\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n    const sampleVarianceX = sampleVariance(sampleX);\n    const sampleVarianceY = sampleVariance(sampleY);\n\n    if (\n        typeof meanX === \"number\" &&\n        typeof meanY === \"number\" &&\n        typeof sampleVarianceX === \"number\" &&\n        typeof sampleVarianceY === \"number\"\n    ) {\n        const weightedVariance =\n            ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) /\n            (n + m - 2);\n\n        return (\n            (meanX - meanY - difference) /\n            Math.sqrt(weightedVariance * (1 / n + 1 / m))\n        );\n    }\n}\n\nexport default tTestTwoSample;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,cAAc,MAAM,sBAAsB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAE;EAClD,MAAMC,CAAC,GAAGH,OAAO,CAACI,MAAM;EACxB,MAAMC,CAAC,GAAGJ,OAAO,CAACG,MAAM;;EAExB;EACA;EACA,IAAI,CAACD,CAAC,IAAI,CAACE,CAAC,EAAE;IACV,OAAO,IAAI;EACf;;EAEA;EACA,IAAI,CAACH,UAAU,EAAE;IACbA,UAAU,GAAG,CAAC;EAClB;EAEA,MAAMI,KAAK,GAAGT,IAAI,CAACG,OAAO,CAAC;EAC3B,MAAMO,KAAK,GAAGV,IAAI,CAACI,OAAO,CAAC;EAC3B,MAAMO,eAAe,GAAGV,cAAc,CAACE,OAAO,CAAC;EAC/C,MAAMS,eAAe,GAAGX,cAAc,CAACG,OAAO,CAAC;EAE/C,IACI,OAAOK,KAAK,KAAK,QAAQ,IACzB,OAAOC,KAAK,KAAK,QAAQ,IACzB,OAAOC,eAAe,KAAK,QAAQ,IACnC,OAAOC,eAAe,KAAK,QAAQ,EACrC;IACE,MAAMC,gBAAgB,GAClB,CAAC,CAACP,CAAC,GAAG,CAAC,IAAIK,eAAe,GAAG,CAACH,CAAC,GAAG,CAAC,IAAII,eAAe,KACrDN,CAAC,GAAGE,CAAC,GAAG,CAAC,CAAC;IAEf,OACI,CAACC,KAAK,GAAGC,KAAK,GAAGL,UAAU,IAC3BS,IAAI,CAACC,IAAI,CAACF,gBAAgB,IAAI,CAAC,GAAGP,CAAC,GAAG,CAAC,GAAGE,CAAC,CAAC,CAAC;EAErD;AACJ;AAEA,eAAeN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}