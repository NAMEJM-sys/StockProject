{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsFetch\\\\FetchMFIAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchMFIAnalysis({\n  stockCode,\n  selectedAnalysis\n}) {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null); // 분석 결과 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지를 저장할 상태\n\n  useEffect(() => {\n    const query = selectedAnalysis.join(',');\n    fetch(`http://127.0.0.1:8000/api/analyze_mfi/${stockCode}/?analysis=${query}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setAnalysisResult(data);\n      console.log(data);\n    }).catch(error => {\n      console.error('Error fetching MFI analysis data.', error);\n    });\n  }, [stockCode]);\n  if (!analysisResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  const renderMFIAnalysis1 = analysisData => {\n    const {\n      currnetMFI,\n      mfiState,\n      priceTrendDirection,\n      mfiTrendDirection,\n      currnetMFI_MACrossover\n    } = analysisData;\n    let result = `<strong>현재 MFI: </strong>${currnetMFI.toFixed(2)} (${mfiState})<br/>`;\n    result += `ㆍ가격 흐름: ${priceTrendDirection} 추세<br/>`;\n    result += `ㆍMFI 흐름: ${mfiTrendDirection} 추세<br/>`;\n    result += `ㆍMFI 이동평균 교차 신호: ${currnetMFI_MACrossover === 1 ? '골든 크로스' : '데드 크로스'} 추세<br/><br/>`;\n    if (currnetMFI_MACrossover === 1) {\n      result += \"MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/><br/>\";\n    } else if (currnetMFI_MACrossover === -1) {\n      result += \"MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/><br/>\";\n    } else {\n      result += \"MFI 이동평균에 특별한 교차 신호가 없습니다.<br/><br/>\";\n    }\n    if (mfiTrendDirection === '상승' && priceTrendDirection === '상승') {\n      result += \"MFI 가격 모두 상승세를 보이고 있습니다. 강한 상승 추세일 가능성이 큽니다.<br/>\";\n    } else if (mfiTrendDirection === '하락' && priceTrendDirection === '하락') {\n      result += \"MFI 가격 모두 하락세를 보이고 있습니다. 하락 추세가 강화될 가능성이 있습니다.<br/>\";\n    } else if (mfiTrendDirection === '상승' && priceTrendDirection === '하락') {\n      result += \"가격은 하락 중이나 MFI 상승세를 보이고 있습니다. 이는 가격 반등 가능성을 시사할 수 있습니다.<br/>\";\n    } else if (mfiTrendDirection === '하락' && priceTrendDirection === '상승') {\n      result += \"가격은 상승 중이나 MFI 하락세를 보이고 있습니다. 이는 상승 추세가 약화될 수 있음을 나타냅니다.<br/>\";\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedAnalysis.includes('1') && analysisResult.mfi_analysis1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"MFI \\uAE30\\uBCF8 \\uD750\\uB984 \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: renderMFIAnalysis1(analysisResult.mfi_analysis1)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchMFIAnalysis, \"ouRX2WpcByH/FMIrkcHTha1nqaw=\");\n_c = FetchMFIAnalysis;\nexport default FetchMFIAnalysis;\nvar _c;\n$RefreshReg$(_c, \"FetchMFIAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FetchMFIAnalysis","stockCode","selectedAnalysis","_s","analysisResult","setAnalysisResult","error","setError","query","join","fetch","then","response","ok","Error","json","data","console","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMFIAnalysis1","analysisData","currnetMFI","mfiState","priceTrendDirection","mfiTrendDirection","currnetMFI_MACrossover","result","toFixed","includes","mfi_analysis1","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsFetch/FetchMFIAnalysis.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction FetchMFIAnalysis({ stockCode, selectedAnalysis}) {\r\n    const [analysisResult, setAnalysisResult] = useState(null);  // 분석 결과 저장할 상태\r\n    const [error, setError] = useState(null);  // 에러 메시지를 저장할 상태\r\n\r\n    useEffect(() => {\r\n        const query = selectedAnalysis.join(',');\r\n        fetch(`http://127.0.0.1:8000/api/analyze_mfi/${stockCode}/?analysis=${query}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setAnalysisResult(data);\r\n                console.log(data);\r\n            }).catch(error => {console.error('Error fetching MFI analysis data.', error);})\r\n    },[stockCode])\r\n\r\n    if (!analysisResult) {\r\n        return <div>로딩 중...</div>;\r\n    }\r\n\r\n    const renderMFIAnalysis1 = (analysisData) => {\r\n        const {currnetMFI, mfiState, priceTrendDirection, mfiTrendDirection, currnetMFI_MACrossover } = analysisData;\r\n\r\n        let result = `<strong>현재 MFI: </strong>${currnetMFI.toFixed(2)} (${mfiState})<br/>`;\r\n        result += `ㆍ가격 흐름: ${priceTrendDirection} 추세<br/>`;\r\n        result += `ㆍMFI 흐름: ${mfiTrendDirection} 추세<br/>`;\r\n        result += `ㆍMFI 이동평균 교차 신호: ${currnetMFI_MACrossover === 1 ? '골든 크로스' : '데드 크로스'} 추세<br/><br/>`;\r\n\r\n        if (currnetMFI_MACrossover === 1) {\r\n            result += \"MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/><br/>\";\r\n        } else if (currnetMFI_MACrossover === -1) {\r\n            result += \"MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/><br/>\";\r\n        } else {\r\n            result += \"MFI 이동평균에 특별한 교차 신호가 없습니다.<br/><br/>\";\r\n        }\r\n\r\n        if (mfiTrendDirection === '상승' && priceTrendDirection === '상승') {\r\n            result += \"MFI 가격 모두 상승세를 보이고 있습니다. 강한 상승 추세일 가능성이 큽니다.<br/>\";\r\n        } else if (mfiTrendDirection === '하락' && priceTrendDirection === '하락') {\r\n            result += \"MFI 가격 모두 하락세를 보이고 있습니다. 하락 추세가 강화될 가능성이 있습니다.<br/>\";\r\n        } else if (mfiTrendDirection === '상승' && priceTrendDirection === '하락') {\r\n            result += \"가격은 하락 중이나 MFI 상승세를 보이고 있습니다. 이는 가격 반등 가능성을 시사할 수 있습니다.<br/>\";\r\n        } else if (mfiTrendDirection === '하락' && priceTrendDirection === '상승') {\r\n            result += \"가격은 상승 중이나 MFI 하락세를 보이고 있습니다. 이는 상승 추세가 약화될 수 있음을 나타냅니다.<br/>\";\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {selectedAnalysis.includes('1') && analysisResult.mfi_analysis1 && (\r\n                <div>\r\n                    <h4>MFI 기본 흐름 분석</h4>\r\n                    <p dangerouslySetInnerHTML={{__html: renderMFIAnalysis1(analysisResult.mfi_analysis1)}}></p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FetchMFIAnalysis"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}