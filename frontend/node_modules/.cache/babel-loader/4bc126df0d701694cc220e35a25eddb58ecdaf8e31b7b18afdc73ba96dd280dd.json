{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\KeltnerTotalCalculation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport KeltnerCalculations1 from './KeltnerCalculations1';\nimport KeltnerCalculations2 from './KeltnerCalculations2';\nimport KeltnerCalculations3 from './KeltnerCalculations3';\nimport KeltnerCalculations4 from './KeltnerCalculations4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SARTotalCalculation({\n  stockCode,\n  onResultUpdate\n}) {\n  _s();\n  const [keltnerScore1, setKeltnerScore1] = useState(null);\n  const [keltnerScore2, setKeltnerScore2] = useState(null);\n  const [keltnerScore3, setKeltnerScore3] = useState(null);\n  const [keltnerScore4, setKeltnerScore4] = useState(null);\n\n  // 중요도 설정 (가중치)\n  const weights = {\n    keltner1: 3,\n    // 예: 중요도 3\n    keltner2: 2,\n    keltner3: 3,\n    keltner4: 2\n  };\n\n  // 총점 계산\n  const totalScore = ((keltnerScore1 === null || keltnerScore1 === void 0 ? void 0 : keltnerScore1.score) || 0) * weights.keltner1 + (keltnerScore2 * weights.keltner2 || 0) + (keltnerScore3 * weights.keltner3 || 0) + (keltnerScore4 * weights.keltner4 || 0);\n  const totalWeight = (keltnerScore1 !== null ? weights.keltner1 : 0) + (keltnerScore2 !== null ? weights.keltner2 : 0) + (keltnerScore3 !== null ? weights.keltner3 : 0) + (keltnerScore4 !== null ? weights.keltner4 : 0);\n  const averageScore = totalWeight > 0 ? (totalScore / totalWeight).toFixed(2) : null;\n  const getRecommendation = averageScore => {\n    if (averageScore <= 2.0) {\n      return '강한 매수';\n    } else if (averageScore <= 4.0) {\n      return '매수';\n    } else if (averageScore <= 6.0) {\n      return '보통';\n    } else if (averageScore <= 8.0) {\n      return '매도';\n    } else {\n      return '강한 매도';\n    }\n  };\n  const finalRecommendation = averageScore !== null ? getRecommendation(averageScore) : '데이터 수집 중...';\n  useEffect(() => {\n    if (onResultUpdate && keltnerScore1 !== null && keltnerScore1.middleLine !== undefined) {\n      onResultUpdate({\n        name: 'Keltner Channel(20, 2)',\n        value: keltnerScore1.middleLine.toFixed(2),\n        damm: averageScore,\n        recommendation: finalRecommendation\n      });\n    }\n  }, [keltnerScore1, averageScore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(KeltnerCalculations1, {\n      stockCode: stockCode,\n      onScoreCalculated: result => {\n        setKeltnerScore1(result);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeltnerCalculations2, {\n      stockCode: stockCode,\n      onScoreCalculated: setKeltnerScore2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeltnerCalculations3, {\n      stockCode: stockCode,\n      onScoreCalculated: setKeltnerScore3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeltnerCalculations4, {\n      stockCode: stockCode,\n      onScoreCalculated: setKeltnerScore4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(SARTotalCalculation, \"kBpzZzOiivihBsQWfuTXloQDMvk=\");\n_c = SARTotalCalculation;\nexport default SARTotalCalculation;\nvar _c;\n$RefreshReg$(_c, \"SARTotalCalculation\");","map":{"version":3,"names":["React","useState","useEffect","KeltnerCalculations1","KeltnerCalculations2","KeltnerCalculations3","KeltnerCalculations4","jsxDEV","_jsxDEV","SARTotalCalculation","stockCode","onResultUpdate","_s","keltnerScore1","setKeltnerScore1","keltnerScore2","setKeltnerScore2","keltnerScore3","setKeltnerScore3","keltnerScore4","setKeltnerScore4","weights","keltner1","keltner2","keltner3","keltner4","totalScore","score","totalWeight","averageScore","toFixed","getRecommendation","finalRecommendation","middleLine","undefined","name","value","damm","recommendation","children","onScoreCalculated","result","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/KeltnerTotalCalculation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport KeltnerCalculations1 from './KeltnerCalculations1';\r\nimport KeltnerCalculations2 from './KeltnerCalculations2';\r\nimport KeltnerCalculations3 from './KeltnerCalculations3';\r\nimport KeltnerCalculations4 from './KeltnerCalculations4';\r\n\r\n\r\nfunction SARTotalCalculation({ stockCode, onResultUpdate }) {\r\n    const [keltnerScore1, setKeltnerScore1] = useState(null);\r\n    const [keltnerScore2, setKeltnerScore2] = useState(null);\r\n    const [keltnerScore3, setKeltnerScore3] = useState(null);\r\n    const [keltnerScore4, setKeltnerScore4] = useState(null);\r\n\r\n    // 중요도 설정 (가중치)\r\n    const weights = {\r\n        keltner1: 3, // 예: 중요도 3\r\n        keltner2: 2,\r\n        keltner3: 3,\r\n        keltner4: 2,\r\n    };\r\n\r\n    // 총점 계산\r\n    const totalScore = (\r\n        ((keltnerScore1?.score || 0 ) * weights.keltner1) +\r\n        (keltnerScore2 * weights.keltner2 || 0) +\r\n        (keltnerScore3 * weights.keltner3 || 0) +\r\n        (keltnerScore4 * weights.keltner4 || 0)\r\n    );\r\n\r\n    const totalWeight = (\r\n        (keltnerScore1 !== null ? weights.keltner1 : 0) +\r\n        (keltnerScore2 !== null ? weights.keltner2 : 0) +\r\n        (keltnerScore3 !== null ? weights.keltner3 : 0) +\r\n        (keltnerScore4 !== null ? weights.keltner4 : 0)\r\n    );\r\n\r\n    const averageScore = totalWeight > 0 ? (totalScore / totalWeight).toFixed(2) : null;\r\n\r\n    const getRecommendation = (averageScore) => {\r\n        if (averageScore <= 2.0) {\r\n            return '강한 매수';\r\n        } else if (averageScore <= 4.0) {\r\n            return '매수';\r\n        } else if (averageScore <= 6.0) {\r\n            return '보통';\r\n        } else if (averageScore <= 8.0) {\r\n            return '매도';\r\n        } else {\r\n            return '강한 매도';\r\n        }\r\n    };\r\n\r\n    const finalRecommendation = averageScore !== null ? getRecommendation(averageScore) : '데이터 수집 중...';\r\n\r\n    useEffect(() => {\r\n        if(onResultUpdate && keltnerScore1 !== null && keltnerScore1.middleLine !== undefined) {\r\n            onResultUpdate({\r\n                name: 'Keltner Channel(20, 2)',\r\n                value: keltnerScore1.middleLine.toFixed(2),\r\n                damm: averageScore,\r\n                recommendation: finalRecommendation\r\n            });\r\n        }\r\n    }, [keltnerScore1, averageScore])\r\n    return (\r\n        <div>\r\n            <KeltnerCalculations1 stockCode={stockCode} onScoreCalculated={(result) => {setKeltnerScore1(result)}} />\r\n            <KeltnerCalculations2 stockCode={stockCode} onScoreCalculated={setKeltnerScore2} />\r\n            <KeltnerCalculations3 stockCode={stockCode} onScoreCalculated={setKeltnerScore3} />\r\n            <KeltnerCalculations4 stockCode={stockCode} onScoreCalculated={setKeltnerScore4} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SARTotalCalculation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}