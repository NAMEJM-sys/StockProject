{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MFIAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFIAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMFITrend = (mfiData, stockData, period = 14) => {\n    var _mfiData$lastIndex, _mfiData$lastIndex2, _mfiData$lastIndex3, _stockData$lastIndex;\n    let lastIndex = mfiData.length - 1;\n    if (lastIndex < period || stockData.length < period) return '데이터가 충분하지 않습니다.';\n\n    // 데이터 존재 여부 확인\n    const currentMFI = (_mfiData$lastIndex = mfiData[lastIndex]) === null || _mfiData$lastIndex === void 0 ? void 0 : _mfiData$lastIndex.MFI;\n    const currentMFIVolatility = (_mfiData$lastIndex2 = mfiData[lastIndex]) === null || _mfiData$lastIndex2 === void 0 ? void 0 : _mfiData$lastIndex2.MFI_Volatility;\n    const currentMFI_MA_Crossover = (_mfiData$lastIndex3 = mfiData[lastIndex]) === null || _mfiData$lastIndex3 === void 0 ? void 0 : _mfiData$lastIndex3.MFI_MA_Crossover;\n    const currentPrice = (_stockData$lastIndex = stockData[lastIndex]) === null || _stockData$lastIndex === void 0 ? void 0 : _stockData$lastIndex.close;\n    if (currentMFI === undefined || currentMFIVolatility === undefined || currentMFI_MA_Crossover === undefined || currentPrice === undefined) {\n      return '데이터를 불러오는 데 문제가 발생했습니다.';\n    }\n\n    // 소수점 처리\n    const currentMFIFormatted = parseFloat(currentMFI).toFixed(2);\n    const currentMFIVolatilityFormatted = parseFloat(currentMFIVolatility).toFixed(2);\n    let result = '';\n\n    // 1. MFI 수준에 따른 해석\n    if (currentMFI > 80) {\n      result += `현재 MFI가 ${currentMFIFormatted}로 과매수 상태입니다. 가격 조정에 유의하세요.<br/>`;\n    } else if (currentMFI < 20) {\n      result += `현재 MFI가 ${currentMFIFormatted}로 과매도 상태입니다. 반등 가능성을 주목하세요.<br/>`;\n    } else {\n      result += `현재 MFI가 ${currentMFIFormatted}로 중립 상태입니다.<br/>`;\n    }\n\n    // 2. MFI 변동성 분석\n    const recentVolatility = mfiData.slice(lastIndex - period + 1, lastIndex + 1).map(d => d.MFI_Volatility);\n    const avgMFIVolatility = (recentVolatility.reduce((acc, val) => acc + val, 0) / period).toFixed(2);\n    if (currentMFIVolatility > avgMFIVolatility) {\n      result += `MFI 변동성이 평균(${avgMFIVolatility})보다 높습니다. 시장 변동성 증가에 유의하세요.<br/>`;\n    } else {\n      result += `MFI 변동성이 평균(${avgMFIVolatility})보다 낮습니다. 시장이 안정적입니다.<br/>`;\n    }\n\n    // 3. MFI 이동평균 교차 분석\n    if (currentMFI_MA_Crossover === 1) {\n      result += `MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/>`;\n    } else if (currentMFI_MA_Crossover === -1) {\n      result += `MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/>`;\n    } else {\n      result += `MFI 이동평균에 특별한 교차 신호가 없습니다.<br/>`;\n    }\n\n    // 4. 종합 결론\n    result += `<br/><strong>종합 분석:</strong><br/>`;\n    if (currentMFI > 80 && currentMFI_MA_Crossover === -1) {\n      result += `과매수 상태에서 하락 추세 신호가 나타났습니다. 매도 신호로 해석될 수 있습니다.<br/>`;\n    } else if (currentMFI < 20 && currentMFI_MA_Crossover === 1) {\n      result += `과매도 상태에서 상승 추세 신호가 나타났습니다. 매수 신호로 해석될 수 있습니다.<br/>`;\n    } else {\n      result += `명확한 추세 신호가 없습니다. 시장 상황을 주시하세요.<br/>`;\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (mfiData.length > 0 && stockData.length > 0) {\n      const result = analyzeMFITrend(mfiData, stockData);\n      setAnalysisResult(result);\n    }\n  }, [mfiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"analysis-text\",\n      children: \"MFI \\uC885\\uD569 \\uBD84\\uC11D(14\\uC77C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(MFIAnalysis1, \"7bN3uFgPvWhQU38aocWDCHVSLbA=\");\n_c = MFIAnalysis1;\nexport default MFIAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"MFIAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","FetchStockDataForCode","jsxDEV","_jsxDEV","MFIAnalysis1","stockCode","_s","mfiData","setMFIData","stockData","setStockData","analysisResult","setAnalysisResult","analyzeMFITrend","period","_mfiData$lastIndex","_mfiData$lastIndex2","_mfiData$lastIndex3","_stockData$lastIndex","lastIndex","length","currentMFI","MFI","currentMFIVolatility","MFI_Volatility","currentMFI_MA_Crossover","MFI_MA_Crossover","currentPrice","close","undefined","currentMFIFormatted","parseFloat","toFixed","currentMFIVolatilityFormatted","result","recentVolatility","slice","map","d","avgMFIVolatility","reduce","acc","val","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","className","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MFIAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nfunction MFIAnalysis1({ stockCode }) {\r\n    const [mfiData, setMFIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMFITrend = (mfiData, stockData, period = 14) => {\r\n        let lastIndex = mfiData.length - 1;\r\n        if (lastIndex < period || stockData.length < period) return '데이터가 충분하지 않습니다.';\r\n\r\n        // 데이터 존재 여부 확인\r\n        const currentMFI = mfiData[lastIndex]?.MFI;\r\n        const currentMFIVolatility = mfiData[lastIndex]?.MFI_Volatility;\r\n        const currentMFI_MA_Crossover = mfiData[lastIndex]?.MFI_MA_Crossover;\r\n        const currentPrice = stockData[lastIndex]?.close;\r\n\r\n        if (\r\n            currentMFI === undefined ||\r\n            currentMFIVolatility === undefined ||\r\n            currentMFI_MA_Crossover === undefined ||\r\n            currentPrice === undefined\r\n        ) {\r\n            return '데이터를 불러오는 데 문제가 발생했습니다.';\r\n        }\r\n\r\n        // 소수점 처리\r\n        const currentMFIFormatted = parseFloat(currentMFI).toFixed(2);\r\n        const currentMFIVolatilityFormatted = parseFloat(currentMFIVolatility).toFixed(2);\r\n\r\n        let result = '';\r\n\r\n        // 1. MFI 수준에 따른 해석\r\n        if (currentMFI > 80) {\r\n            result += `현재 MFI가 ${currentMFIFormatted}로 과매수 상태입니다. 가격 조정에 유의하세요.<br/>`;\r\n        } else if (currentMFI < 20) {\r\n            result += `현재 MFI가 ${currentMFIFormatted}로 과매도 상태입니다. 반등 가능성을 주목하세요.<br/>`;\r\n        } else {\r\n            result += `현재 MFI가 ${currentMFIFormatted}로 중립 상태입니다.<br/>`;\r\n        }\r\n\r\n        // 2. MFI 변동성 분석\r\n        const recentVolatility = mfiData\r\n            .slice(lastIndex - period + 1, lastIndex + 1)\r\n            .map(d => d.MFI_Volatility);\r\n\r\n        const avgMFIVolatility = (\r\n            recentVolatility.reduce((acc, val) => acc + val, 0) / period\r\n        ).toFixed(2);\r\n\r\n        if (currentMFIVolatility > avgMFIVolatility) {\r\n            result += `MFI 변동성이 평균(${avgMFIVolatility})보다 높습니다. 시장 변동성 증가에 유의하세요.<br/>`;\r\n        } else {\r\n            result += `MFI 변동성이 평균(${avgMFIVolatility})보다 낮습니다. 시장이 안정적입니다.<br/>`;\r\n        }\r\n\r\n        // 3. MFI 이동평균 교차 분석\r\n        if (currentMFI_MA_Crossover === 1) {\r\n            result += `MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세 가능성이 있습니다.<br/>`;\r\n        } else if (currentMFI_MA_Crossover === -1) {\r\n            result += `MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세 가능성이 있습니다.<br/>`;\r\n        } else {\r\n            result += `MFI 이동평균에 특별한 교차 신호가 없습니다.<br/>`;\r\n        }\r\n\r\n        // 4. 종합 결론\r\n        result += `<br/><strong>종합 분석:</strong><br/>`;\r\n\r\n        if (currentMFI > 80 && currentMFI_MA_Crossover === -1) {\r\n            result += `과매수 상태에서 하락 추세 신호가 나타났습니다. 매도 신호로 해석될 수 있습니다.<br/>`;\r\n        } else if (currentMFI < 20 && currentMFI_MA_Crossover === 1) {\r\n            result += `과매도 상태에서 상승 추세 신호가 나타났습니다. 매수 신호로 해석될 수 있습니다.<br/>`;\r\n        } else {\r\n            result += `명확한 추세 신호가 없습니다. 시장 상황을 주시하세요.<br/>`;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mfiData.length > 0 && stockData.length > 0) {\r\n            const result = analyzeMFITrend(mfiData, stockData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [mfiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <h4 className=\"analysis-text\">MFI 종합 분석(14일)</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MFIAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}