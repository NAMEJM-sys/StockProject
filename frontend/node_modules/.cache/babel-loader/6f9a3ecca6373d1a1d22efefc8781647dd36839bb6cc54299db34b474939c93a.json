{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nfunction FetchRealTimeDataForCloseChart({\n  stockCode,\n  onSDFCFetch\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch(`http://127.0.0.1:8000/api/post_stock_real_data_for_code/${stockCode}/`).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        setStockData(data);\n        if (onSDFCFetch) {\n          onSDFCFetch(data);\n          console.log(data);\n        }\n      }).catch(error => console.error('Error fetching RSI data:', error));\n    };\n\n    // 페이지 로드 시 데이터 최초 1회 호출\n    fetchData();\n\n    // 주기적으로 데이터를 갱신 (5초마다 호출)\n    const intervalId = setInterval(fetchData, 10000);\n\n    // 컴포넌트 언마운트 시 인터벌 클리어\n    return () => clearInterval(intervalId);\n  }, [stockCode, stockData]);\n  return null;\n}\n_s(FetchRealTimeDataForCloseChart, \"UHMRx5rd6U+J7YyAJ82PYuAdhyc=\");\n_c = FetchRealTimeDataForCloseChart;\nexport default FetchRealTimeDataForCloseChart;\nvar _c;\n$RefreshReg$(_c, \"FetchRealTimeDataForCloseChart\");","map":{"version":3,"names":["useEffect","useState","FetchRealTimeDataForCloseChart","stockCode","onSDFCFetch","_s","stockData","setStockData","fetchData","fetch","then","response","ok","Error","json","data","console","log","catch","error","intervalId","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsFetch/FetchStockOrignal/FetchRealTimeDataForCloseChart.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nfunction FetchRealTimeDataForCloseChart({ stockCode, onSDFCFetch }){\r\n    const [stockData, setStockData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData =  () => {\r\n            fetch(`http://127.0.0.1:8000/api/post_stock_real_data_for_code/${stockCode}/`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Network response was not ok');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    setStockData(data)\r\n                    if (onSDFCFetch) {\r\n                        onSDFCFetch(data)\r\n                        console.log(data)\r\n                    }\r\n                })\r\n                .catch(error => console.error('Error fetching RSI data:', error))\r\n        }\r\n\r\n        // 페이지 로드 시 데이터 최초 1회 호출\r\n        fetchData();\r\n\r\n        // 주기적으로 데이터를 갱신 (5초마다 호출)\r\n        const intervalId = setInterval(fetchData, 10000);\r\n\r\n        // 컴포넌트 언마운트 시 인터벌 클리어\r\n        return () => clearInterval(intervalId);\r\n    }, [stockCode, stockData]);\r\n    return null;\r\n}\r\n\r\nexport default FetchRealTimeDataForCloseChart"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,SAASC,8BAA8BA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAC;EAAAC,EAAA;EAC/D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAIA,CAAA,KAAM;MACrBC,KAAK,CAAC,2DAA2DN,SAAS,GAAG,CAAC,CACzEO,IAAI,CAACC,QAAQ,IAAI;QACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACVR,YAAY,CAACQ,IAAI,CAAC;QAClB,IAAIX,WAAW,EAAE;UACbA,WAAW,CAACW,IAAI,CAAC;UACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACrB;MACJ,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;IACzE,CAAC;;IAED;IACAX,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMY,UAAU,GAAGC,WAAW,CAACb,SAAS,EAAE,KAAK,CAAC;;IAEhD;IACA,OAAO,MAAMc,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACjB,SAAS,EAAEG,SAAS,CAAC,CAAC;EAC1B,OAAO,IAAI;AACf;AAACD,EAAA,CAhCQH,8BAA8B;AAAAqB,EAAA,GAA9BrB,8BAA8B;AAkCvC,eAAeA,8BAA8B;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}