{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MFIAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FetchMFIData from \"../ComponentsFetch/FetchMFIData\";\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\n\n// 최근 저점 찾기 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst findRecentLows = (data, startIndex, lookbackPeriod, valueKey) => {\n  let lows = [];\n  for (let i = startIndex - lookbackPeriod + 1; i <= startIndex; i++) {\n    if (i > 0 && i < data.length - 1) {\n      const prev = data[i - 1][valueKey];\n      const curr = data[i][valueKey];\n      const next = data[i + 1][valueKey];\n\n      // 국지적 최소값 찾기\n      if (curr < prev && curr < next) {\n        lows.push({\n          value: curr,\n          index: i,\n          date: data[i].date\n        });\n      }\n    }\n  }\n  return lows;\n};\n\n// 최근 고점 찾기 함수\nconst findRecentHighs = (data, startIndex, lookbackPeriod, valueKey) => {\n  let highs = [];\n  for (let i = startIndex - lookbackPeriod + 1; i <= startIndex; i++) {\n    if (i > 0 && i < data.length - 1) {\n      const prev = data[i - 1][valueKey];\n      const curr = data[i][valueKey];\n      const next = data[i + 1][valueKey];\n\n      // 국지적 최대값 찾기\n      if (curr > prev && curr > next) {\n        highs.push({\n          value: curr,\n          index: i,\n          date: data[i].date\n        });\n      }\n    }\n  }\n  return highs;\n};\nfunction MFIAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [divergenceResult, setDivergenceResult] = useState(\"\");\n  const analyzeMFIDivergence = () => {\n    const lookbackPeriod = 30; // 분석 기간 설정\n    const currentIndex = mfiData.length - 1;\n\n    // 데이터 충분성 검사\n    if (currentIndex < lookbackPeriod) {\n      setDivergenceResult(\"데이터가 충분하지 않습니다.\");\n      return;\n    }\n\n    // 최근 저점과 고점 찾기\n    const priceLows = findRecentLows(stockData, currentIndex, lookbackPeriod, 'close');\n    const priceHighs = findRecentHighs(stockData, currentIndex, lookbackPeriod, 'close');\n    const mfiLows = findRecentLows(mfiData, currentIndex, lookbackPeriod, 'MFI');\n    const mfiHighs = findRecentHighs(mfiData, currentIndex, lookbackPeriod, 'MFI');\n    let result = \"\";\n\n    // 상승 다이버전스 감지 (가격은 낮은 저점, MFI는 높은 저점)\n    if (priceLows.length >= 2 && mfiLows.length >= 2) {\n      const priceLow1 = priceLows[priceLows.length - 2];\n      const priceLow2 = priceLows[priceLows.length - 1];\n      const mfiLow1 = mfiLows[mfiLows.length - 2];\n      const mfiLow2 = mfiLows[mfiLows.length - 1];\n      if (priceLow2.value < priceLow1.value && mfiLow2.value > mfiLow1.value) {\n        result += `상승 다이버전스 감지: 주가는 더 낮은 저점을 형성했지만, MFI는 더 높은 저점을 형성했습니다. 이는 매수 신호일 수 있습니다.<br/>`;\n      }\n    }\n\n    // 하락 다이버전스 감지 (가격은 높은 고점, MFI는 낮은 고점)\n    if (priceHighs.length >= 2 && mfiHighs.length >= 2) {\n      const priceHigh1 = priceHighs[priceHighs.length - 2];\n      const priceHigh2 = priceHighs[priceHighs.length - 1];\n      const mfiHigh1 = mfiHighs[mfiHighs.length - 2];\n      const mfiHigh2 = mfiHighs[mfiHighs.length - 1];\n      if (priceHigh2.value > priceHigh1.value && mfiHigh2.value < mfiHigh1.value) {\n        result += `하락 다이버전스 감지: 주가는 더 높은 고점을 형성했지만, MFI는 더 낮은 고점을 형성했습니다. 이는 매도 신호일 수 있습니다.<br/>`;\n      }\n    }\n    if (!result) {\n      result = \"현재 다이버전스가 감지되지 않았습니다. 지속적인 모니터링이 필요합니다.\";\n    }\n    setDivergenceResult(result);\n  };\n  useEffect(() => {\n    if (mfiData.length > 0 && stockData.length > 0) {\n      analyzeMFIDivergence();\n    }\n  }, [mfiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MFI \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: divergenceResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(MFIAnalysis2, \"TAAoWKKF9hGkpgSxt0DG46hsSZs=\");\n_c = MFIAnalysis2;\nexport default MFIAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"MFIAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","FetchStockDataForCode","jsxDEV","_jsxDEV","findRecentLows","data","startIndex","lookbackPeriod","valueKey","lows","i","length","prev","curr","next","push","value","index","date","findRecentHighs","highs","MFIAnalysis2","stockCode","_s","mfiData","setMFIData","stockData","setStockData","divergenceResult","setDivergenceResult","analyzeMFIDivergence","currentIndex","priceLows","priceHighs","mfiLows","mfiHighs","result","priceLow1","priceLow2","mfiLow1","mfiLow2","priceHigh1","priceHigh2","mfiHigh1","mfiHigh2","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MFIAnalysis2.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FetchMFIData from \"../ComponentsFetch/FetchMFIData\";\r\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\r\n\r\n// 최근 저점 찾기 함수\r\nconst findRecentLows = (data, startIndex, lookbackPeriod, valueKey) => {\r\n    let lows = [];\r\n    for (let i = startIndex - lookbackPeriod + 1; i <= startIndex; i++) {\r\n        if (i > 0 && i < data.length - 1) {\r\n            const prev = data[i - 1][valueKey];\r\n            const curr = data[i][valueKey];\r\n            const next = data[i + 1][valueKey];\r\n\r\n            // 국지적 최소값 찾기\r\n            if (curr < prev && curr < next) {\r\n                lows.push({ value: curr, index: i, date: data[i].date });\r\n            }\r\n        }\r\n    }\r\n    return lows;\r\n};\r\n\r\n// 최근 고점 찾기 함수\r\nconst findRecentHighs = (data, startIndex, lookbackPeriod, valueKey) => {\r\n    let highs = [];\r\n    for (let i = startIndex - lookbackPeriod + 1; i <= startIndex; i++) {\r\n        if (i > 0 && i < data.length - 1) {\r\n            const prev = data[i - 1][valueKey];\r\n            const curr = data[i][valueKey];\r\n            const next = data[i + 1][valueKey];\r\n\r\n            // 국지적 최대값 찾기\r\n            if (curr > prev && curr > next) {\r\n                highs.push({ value: curr, index: i, date: data[i].date });\r\n            }\r\n        }\r\n    }\r\n    return highs;\r\n};\r\n\r\nfunction MFIAnalysis2({ stockCode }) {\r\n    const [mfiData, setMFIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [divergenceResult, setDivergenceResult] = useState(\"\");\r\n\r\n    const analyzeMFIDivergence = () => {\r\n        const lookbackPeriod = 30; // 분석 기간 설정\r\n        const currentIndex = mfiData.length - 1;\r\n\r\n        // 데이터 충분성 검사\r\n        if (currentIndex < lookbackPeriod) {\r\n            setDivergenceResult(\"데이터가 충분하지 않습니다.\");\r\n            return;\r\n        }\r\n\r\n        // 최근 저점과 고점 찾기\r\n        const priceLows = findRecentLows(stockData, currentIndex, lookbackPeriod, 'close');\r\n        const priceHighs = findRecentHighs(stockData, currentIndex, lookbackPeriod, 'close');\r\n\r\n        const mfiLows = findRecentLows(mfiData, currentIndex, lookbackPeriod, 'MFI');\r\n        const mfiHighs = findRecentHighs(mfiData, currentIndex, lookbackPeriod, 'MFI');\r\n\r\n        let result = \"\";\r\n\r\n        // 상승 다이버전스 감지 (가격은 낮은 저점, MFI는 높은 저점)\r\n        if (priceLows.length >= 2 && mfiLows.length >= 2) {\r\n            const priceLow1 = priceLows[priceLows.length - 2];\r\n            const priceLow2 = priceLows[priceLows.length - 1];\r\n\r\n            const mfiLow1 = mfiLows[mfiLows.length - 2];\r\n            const mfiLow2 = mfiLows[mfiLows.length - 1];\r\n\r\n            if (priceLow2.value < priceLow1.value && mfiLow2.value > mfiLow1.value) {\r\n                result += `상승 다이버전스 감지: 주가는 더 낮은 저점을 형성했지만, MFI는 더 높은 저점을 형성했습니다. 이는 매수 신호일 수 있습니다.<br/>`;\r\n            }\r\n        }\r\n\r\n        // 하락 다이버전스 감지 (가격은 높은 고점, MFI는 낮은 고점)\r\n        if (priceHighs.length >= 2 && mfiHighs.length >= 2) {\r\n            const priceHigh1 = priceHighs[priceHighs.length - 2];\r\n            const priceHigh2 = priceHighs[priceHighs.length - 1];\r\n\r\n            const mfiHigh1 = mfiHighs[mfiHighs.length - 2];\r\n            const mfiHigh2 = mfiHighs[mfiHighs.length - 1];\r\n\r\n            if (priceHigh2.value > priceHigh1.value && mfiHigh2.value < mfiHigh1.value) {\r\n                result += `하락 다이버전스 감지: 주가는 더 높은 고점을 형성했지만, MFI는 더 낮은 고점을 형성했습니다. 이는 매도 신호일 수 있습니다.<br/>`;\r\n            }\r\n        }\r\n\r\n        if (!result) {\r\n            result = \"현재 다이버전스가 감지되지 않았습니다. 지속적인 모니터링이 필요합니다.\";\r\n        }\r\n\r\n        setDivergenceResult(result);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mfiData.length > 0 && stockData.length > 0) {\r\n            analyzeMFIDivergence();\r\n        }\r\n    }, [mfiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <h4>MFI 다이버전스 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: divergenceResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MFIAnalysis2;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,qBAAqB,MAAM,0CAA0C;;AAE5E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,UAAU,EAAEC,cAAc,EAAEC,QAAQ,KAAK;EACnE,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAGJ,UAAU,GAAGC,cAAc,GAAG,CAAC,EAAEG,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IAChE,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGL,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAMC,IAAI,GAAGP,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC;MAClC,MAAMK,IAAI,GAAGR,IAAI,CAACK,CAAC,CAAC,CAACF,QAAQ,CAAC;MAC9B,MAAMM,IAAI,GAAGT,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC;;MAElC;MACA,IAAIK,IAAI,GAAGD,IAAI,IAAIC,IAAI,GAAGC,IAAI,EAAE;QAC5BL,IAAI,CAACM,IAAI,CAAC;UAAEC,KAAK,EAAEH,IAAI;UAAEI,KAAK,EAAEP,CAAC;UAAEQ,IAAI,EAAEb,IAAI,CAACK,CAAC,CAAC,CAACQ;QAAK,CAAC,CAAC;MAC5D;IACJ;EACJ;EACA,OAAOT,IAAI;AACf,CAAC;;AAED;AACA,MAAMU,eAAe,GAAGA,CAACd,IAAI,EAAEC,UAAU,EAAEC,cAAc,EAAEC,QAAQ,KAAK;EACpE,IAAIY,KAAK,GAAG,EAAE;EACd,KAAK,IAAIV,CAAC,GAAGJ,UAAU,GAAGC,cAAc,GAAG,CAAC,EAAEG,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IAChE,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGL,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAMC,IAAI,GAAGP,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC;MAClC,MAAMK,IAAI,GAAGR,IAAI,CAACK,CAAC,CAAC,CAACF,QAAQ,CAAC;MAC9B,MAAMM,IAAI,GAAGT,IAAI,CAACK,CAAC,GAAG,CAAC,CAAC,CAACF,QAAQ,CAAC;;MAElC;MACA,IAAIK,IAAI,GAAGD,IAAI,IAAIC,IAAI,GAAGC,IAAI,EAAE;QAC5BM,KAAK,CAACL,IAAI,CAAC;UAAEC,KAAK,EAAEH,IAAI;UAAEI,KAAK,EAAEP,CAAC;UAAEQ,IAAI,EAAEb,IAAI,CAACK,CAAC,CAAC,CAACQ;QAAK,CAAC,CAAC;MAC7D;IACJ;EACJ;EACA,OAAOE,KAAK;AAChB,CAAC;AAED,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMgC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMvB,cAAc,GAAG,EAAE,CAAC,CAAC;IAC3B,MAAMwB,YAAY,GAAGP,OAAO,CAACb,MAAM,GAAG,CAAC;;IAEvC;IACA,IAAIoB,YAAY,GAAGxB,cAAc,EAAE;MAC/BsB,mBAAmB,CAAC,iBAAiB,CAAC;MACtC;IACJ;;IAEA;IACA,MAAMG,SAAS,GAAG5B,cAAc,CAACsB,SAAS,EAAEK,YAAY,EAAExB,cAAc,EAAE,OAAO,CAAC;IAClF,MAAM0B,UAAU,GAAGd,eAAe,CAACO,SAAS,EAAEK,YAAY,EAAExB,cAAc,EAAE,OAAO,CAAC;IAEpF,MAAM2B,OAAO,GAAG9B,cAAc,CAACoB,OAAO,EAAEO,YAAY,EAAExB,cAAc,EAAE,KAAK,CAAC;IAC5E,MAAM4B,QAAQ,GAAGhB,eAAe,CAACK,OAAO,EAAEO,YAAY,EAAExB,cAAc,EAAE,KAAK,CAAC;IAE9E,IAAI6B,MAAM,GAAG,EAAE;;IAEf;IACA,IAAIJ,SAAS,CAACrB,MAAM,IAAI,CAAC,IAAIuB,OAAO,CAACvB,MAAM,IAAI,CAAC,EAAE;MAC9C,MAAM0B,SAAS,GAAGL,SAAS,CAACA,SAAS,CAACrB,MAAM,GAAG,CAAC,CAAC;MACjD,MAAM2B,SAAS,GAAGN,SAAS,CAACA,SAAS,CAACrB,MAAM,GAAG,CAAC,CAAC;MAEjD,MAAM4B,OAAO,GAAGL,OAAO,CAACA,OAAO,CAACvB,MAAM,GAAG,CAAC,CAAC;MAC3C,MAAM6B,OAAO,GAAGN,OAAO,CAACA,OAAO,CAACvB,MAAM,GAAG,CAAC,CAAC;MAE3C,IAAI2B,SAAS,CAACtB,KAAK,GAAGqB,SAAS,CAACrB,KAAK,IAAIwB,OAAO,CAACxB,KAAK,GAAGuB,OAAO,CAACvB,KAAK,EAAE;QACpEoB,MAAM,IAAI,+EAA+E;MAC7F;IACJ;;IAEA;IACA,IAAIH,UAAU,CAACtB,MAAM,IAAI,CAAC,IAAIwB,QAAQ,CAACxB,MAAM,IAAI,CAAC,EAAE;MAChD,MAAM8B,UAAU,GAAGR,UAAU,CAACA,UAAU,CAACtB,MAAM,GAAG,CAAC,CAAC;MACpD,MAAM+B,UAAU,GAAGT,UAAU,CAACA,UAAU,CAACtB,MAAM,GAAG,CAAC,CAAC;MAEpD,MAAMgC,QAAQ,GAAGR,QAAQ,CAACA,QAAQ,CAACxB,MAAM,GAAG,CAAC,CAAC;MAC9C,MAAMiC,QAAQ,GAAGT,QAAQ,CAACA,QAAQ,CAACxB,MAAM,GAAG,CAAC,CAAC;MAE9C,IAAI+B,UAAU,CAAC1B,KAAK,GAAGyB,UAAU,CAACzB,KAAK,IAAI4B,QAAQ,CAAC5B,KAAK,GAAG2B,QAAQ,CAAC3B,KAAK,EAAE;QACxEoB,MAAM,IAAI,+EAA+E;MAC7F;IACJ;IAEA,IAAI,CAACA,MAAM,EAAE;MACTA,MAAM,GAAG,yCAAyC;IACtD;IAEAP,mBAAmB,CAACO,MAAM,CAAC;EAC/B,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACZ,IAAIyB,OAAO,CAACb,MAAM,GAAG,CAAC,IAAIe,SAAS,CAACf,MAAM,GAAG,CAAC,EAAE;MAC5CmB,oBAAoB,CAAC,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACN,OAAO,EAAEE,SAAS,CAAC,CAAC;EAExB,oBACIvB,OAAA;IAAA0C,QAAA,gBACI1C,OAAA,CAACH,YAAY;MAACsB,SAAS,EAAEA,SAAU;MAACwB,UAAU,EAAErB;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9D/C,OAAA,CAACF,qBAAqB;MAACqB,SAAS,EAAEA,SAAU;MAAC6B,WAAW,EAAExB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E/C,OAAA;MAAA0C,QAAA,EAAI;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB/C,OAAA;MAAGiD,uBAAuB,EAAE;QAAEC,MAAM,EAAEzB;MAAiB;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd;AAAC3B,EAAA,CAvEQF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAyErB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}