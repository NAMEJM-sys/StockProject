{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\ChartOfKeltner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsMore from \"highcharts/highcharts-more\"; // highcharts-more 모듈 추가\nimport HighchartsStock from \"highcharts/modules/stock\"; // Highcharts Stock 모듈 추가\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\nimport FetchKeltnerData from \"./FetchKeltnerData\";\n\n// 모듈 활성화\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsMore(Highcharts);\nHighchartsStock(Highcharts);\nfunction ChartOfKeltner({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [keltnerData, setKeltnerData] = useState([]);\n  const [options, setOptions] = useState({});\n  useEffect(() => {\n    if (stockData.length > 0 && keltnerData.length > 0 && stockCode) {\n      const dataForChart = stockData.map(item => ({\n        date: new Date(item.date).getTime(),\n        // timestamp로 변경\n        close: item.close\n      })).sort((a, b) => new Date(a.date) - new Date(b.date));\n      const upperBand = keltnerData.map(item => [new Date(item.date).getTime(), item.Upper_Band]);\n      const middleLine = keltnerData.map(item => [new Date(item.date).getTime(), item.Middle_Line]);\n      const lowerBand = keltnerData.map(item => [new Date(item.date).getTime(), item.Lower_Band]);\n\n      // Set chart options\n      setOptions({\n        chart: {\n          type: 'line',\n          height: 400\n        },\n        title: {\n          text: ''\n        },\n        xAxis: {\n          type: 'datetime',\n          // datetime 유형으로 변경\n          labels: {\n            format: '{value:%m-%d}' // 날짜 형식\n          }\n        },\n        yAxis: {\n          title: {\n            text: ''\n          }\n        },\n        series: [{\n          name: 'Close Price',\n          data: dataForChart.map(item => [item.date, item.close]),\n          marker: {\n            enabled: false // Disable data point markers for close price\n          },\n          color: '#0071e3',\n          lineWidth: 2\n        }, {\n          name: 'Keltner Channel (Area)',\n          type: 'arearange',\n          data: upperBand.map((item, index) => [item[0], lowerBand[index][1], item[1]]),\n          color: 'rgba(135, 206, 250, 0.2)',\n          // 연한 하늘색으로 채우기\n          lineWidth: 0,\n          // 선을 그리지 않음\n          enableMouseTracking: false // 마우스 오버 비활성화\n        }, {\n          name: 'Upper Band',\n          data: upperBand,\n          color: 'skyblue',\n          // 하늘색\n          lineWidth: 1.5,\n          dashStyle: 'solid'\n        }, {\n          name: 'Middle Line',\n          data: middleLine,\n          color: 'skyblue',\n          // 하늘색\n          lineWidth: 1.5,\n          dashStyle: 'solid'\n        }, {\n          name: 'Lower Band',\n          data: lowerBand,\n          color: 'skyblue',\n          // 하늘색\n          lineWidth: 1.5,\n          dashStyle: 'solid'\n        }],\n        legend: {\n          enabled: true // Show legend to distinguish between lines\n        },\n        credits: {\n          enabled: false // Disable the \"Highcharts.com\" text\n        },\n        tooltip: {\n          shared: true,\n          crosshairs: true\n        },\n        // 확대 및 축소 기능 추가\n        navigator: {\n          enabled: true // 스크롤바를 통한 확대/축소 활성화\n        },\n        scrollbar: {\n          enabled: true // 하단 스크롤바 활성화\n        },\n        rangeSelector: {\n          enabled: true,\n          // 범위 선택 옵션 활성화\n          buttons: [{\n            type: 'month',\n            count: 1,\n            text: '1m'\n          }, {\n            type: 'month',\n            count: 3,\n            text: '3m'\n          }, {\n            type: 'month',\n            count: 6,\n            text: '6m'\n          }, {\n            type: 'ytd',\n            text: 'YTD'\n          }, {\n            type: 'year',\n            count: 1,\n            text: '1y'\n          }, {\n            type: 'all',\n            text: 'All'\n          }],\n          selected: 1 // Default 선택 범위 설정 (3개월)\n        }\n      });\n    }\n  }, [stockData, keltnerData, stockCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchKeltnerData, {\n      stockCode: stockCode,\n      onKelFetch: setKeltnerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfKeltner, \"Tj9XUwDQKT6rYQPxXvvE3/nUN3o=\");\n_c = ChartOfKeltner;\nexport default ChartOfKeltner;\nvar _c;\n$RefreshReg$(_c, \"ChartOfKeltner\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsReact","HighchartsMore","HighchartsStock","FetchStockDataForCode","FetchKeltnerData","jsxDEV","_jsxDEV","ChartOfKeltner","stockCode","_s","stockData","setStockData","keltnerData","setKeltnerData","options","setOptions","length","dataForChart","map","item","date","Date","getTime","close","sort","a","b","upperBand","Upper_Band","middleLine","Middle_Line","lowerBand","Lower_Band","chart","type","height","title","text","xAxis","labels","format","yAxis","series","name","data","marker","enabled","color","lineWidth","index","enableMouseTracking","dashStyle","legend","credits","tooltip","shared","crosshairs","navigator","scrollbar","rangeSelector","buttons","count","selected","children","onSDFCFetch","fileName","_jsxFileName","lineNumber","columnNumber","onKelFetch","highcharts","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/ChartOfKeltner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport HighchartsMore from \"highcharts/highcharts-more\"; // highcharts-more 모듈 추가\r\nimport HighchartsStock from \"highcharts/modules/stock\";  // Highcharts Stock 모듈 추가\r\nimport FetchStockDataForCode from \"./FetchStockDataForCode\";\r\nimport FetchKeltnerData from \"./FetchKeltnerData\";\r\n\r\n// 모듈 활성화\r\nHighchartsMore(Highcharts);\r\nHighchartsStock(Highcharts);\r\n\r\nfunction ChartOfKeltner({ stockCode }) {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [keltnerData, setKeltnerData] = useState([]);\r\n    const [options, setOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && keltnerData.length > 0 && stockCode) {\r\n            const dataForChart = stockData\r\n                .map(item => ({\r\n                    date: new Date(item.date).getTime(), // timestamp로 변경\r\n                    close: item.close,\r\n                }))\r\n                .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n            const upperBand = keltnerData.map(item => [new Date(item.date).getTime(), item.Upper_Band]);\r\n            const middleLine = keltnerData.map(item => [new Date(item.date).getTime(), item.Middle_Line]);\r\n            const lowerBand = keltnerData.map(item => [new Date(item.date).getTime(), item.Lower_Band]);\r\n\r\n            // Set chart options\r\n            setOptions({\r\n                chart: {\r\n                    type: 'line',\r\n                    height: 400,\r\n                },\r\n                title: {\r\n                    text: '',\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime', // datetime 유형으로 변경\r\n                    labels: {\r\n                        format: '{value:%m-%d}', // 날짜 형식\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: '',\r\n                    },\r\n                },\r\n                series: [\r\n                    {\r\n                        name: 'Close Price',\r\n                        data: dataForChart.map(item => [item.date, item.close]),\r\n                        marker: {\r\n                            enabled: false, // Disable data point markers for close price\r\n                        },\r\n                        color: '#0071e3',\r\n                        lineWidth: 2,\r\n                    },\r\n                    {\r\n                        name: 'Keltner Channel (Area)',\r\n                        type: 'arearange',\r\n                        data: upperBand.map((item, index) => [item[0], lowerBand[index][1], item[1]]),\r\n                        color: 'rgba(135, 206, 250, 0.2)', // 연한 하늘색으로 채우기\r\n                        lineWidth: 0, // 선을 그리지 않음\r\n                        enableMouseTracking: false, // 마우스 오버 비활성화\r\n                    },\r\n                    {\r\n                        name: 'Upper Band',\r\n                        data: upperBand,\r\n                        color: 'skyblue', // 하늘색\r\n                        lineWidth: 1.5,\r\n                        dashStyle: 'solid',\r\n                    },\r\n                    {\r\n                        name: 'Middle Line',\r\n                        data: middleLine,\r\n                        color: 'skyblue', // 하늘색\r\n                        lineWidth: 1.5,\r\n                        dashStyle: 'solid',\r\n                    },\r\n                    {\r\n                        name: 'Lower Band',\r\n                        data: lowerBand,\r\n                        color: 'skyblue', // 하늘색\r\n                        lineWidth: 1.5,\r\n                        dashStyle: 'solid',\r\n                    },\r\n                ],\r\n                legend: {\r\n                    enabled: true, // Show legend to distinguish between lines\r\n                },\r\n                credits: {\r\n                    enabled: false, // Disable the \"Highcharts.com\" text\r\n                },\r\n                tooltip: {\r\n                    shared: true,\r\n                    crosshairs: true,\r\n                },\r\n                // 확대 및 축소 기능 추가\r\n                navigator: {\r\n                    enabled: true, // 스크롤바를 통한 확대/축소 활성화\r\n                },\r\n                scrollbar: {\r\n                    enabled: true, // 하단 스크롤바 활성화\r\n                },\r\n                rangeSelector: {\r\n                    enabled: true, // 범위 선택 옵션 활성화\r\n                    buttons: [\r\n                        {\r\n                            type: 'month',\r\n                            count: 1,\r\n                            text: '1m'\r\n                        },\r\n                        {\r\n                            type: 'month',\r\n                            count: 3,\r\n                            text: '3m'\r\n                        },\r\n                        {\r\n                            type: 'month',\r\n                            count: 6,\r\n                            text: '6m'\r\n                        },\r\n                        {\r\n                            type: 'ytd',\r\n                            text: 'YTD'\r\n                        },\r\n                        {\r\n                            type: 'year',\r\n                            count: 1,\r\n                            text: '1y'\r\n                        },\r\n                        {\r\n                            type: 'all',\r\n                            text: 'All'\r\n                        }\r\n                    ],\r\n                    selected: 1 // Default 선택 범위 설정 (3개월)\r\n                },\r\n            });\r\n        }\r\n    }, [stockData, keltnerData, stockCode]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <FetchKeltnerData stockCode={stockCode} onKelFetch={setKeltnerData} />\r\n            <HighchartsReact highcharts={Highcharts} options={options} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartOfKeltner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}