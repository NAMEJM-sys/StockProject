{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\KeltnerAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KeltnerAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [keltnerData, setKeltnerData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const calculateChannelAngle = (keltnerData, period = 14) => {\n    if (keltnerData.length < period) {\n      return null;\n    }\n    const recentData = keltnerData.slice(-period);\n    const middleLineValues = recentData.map(data => data.Middle_Line);\n    const indices = [...Array(period).keys()];\n    const n = period;\n    const sumX = indices.reduce((a, b) => a + b, 0);\n    const sumY = middleLineValues.reduce((a, b) => a + b, 0);\n    const sumXY = indices.reduce((sum, x, i) => sum + x * middleLineValues[i], 0);\n    const sumX2 = indices.reduce((sum, x) => sum + x * x, 0);\n    const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n    const angle = Math.atan(slope) * (180 / Math.PI); // 기울기를 각도로 변환\n\n    return angle;\n  };\n  const analyzeTrendPullback = (keltnerData, threshold = 0.01, period = 14) => {\n    const angle = calculateChannelAngle(keltnerData, period);\n    if (angle === null) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    let result = '<strong>Trend Pullback 전략 분석</strong><br/><br/>';\n    const currentData = keltnerData[keltnerData.length - 1];\n    const currentClose = currentData.close;\n    const middleLine = currentData.Middle_Line;\n    const upperBand = currentData.Upper_Band;\n    const lowerBand = currentData.Lower_Band;\n\n    // 가격이 Middle Line 근처에 있는지 확인 (오차 범위 내)\n    const isNearMiddleLine = Math.abs(currentClose - middleLine) / middleLine < threshold;\n\n    // 현재 추세 판단\n    if (angle > 5) {\n      result += '채널이 상승하고 있어 <strong>상승 추세</strong>입니다.<br/>';\n      if (isNearMiddleLine) {\n        result += '→ 상승 추세에서 가격이 Middle Line 부근에 있으므로 <strong>매수 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      } else if (currentClose >= upperBand) {\n        result += '→ 가격이 Upper Band 부근에 있으므로 <strong>이익 실현</strong> 또는 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      }\n    } else if (angle < -5) {\n      result += '채널이 하락하고 있어 <strong>하락 추세</strong>입니다.<br/>';\n      if (isNearMiddleLine) {\n        result += '→ 하락 추세에서 가격이 Middle Line 부근에 있으므로 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      } else if (currentClose <= lowerBand) {\n        result += '→ 가격이 Lower Band 부근에 있으므로 <strong>추가 하락 가능성</strong>이 있어 <strong>신중한 접근</strong>이 필요합니다.<br/>';\n      }\n    } else {\n      result += '채널이 횡보하고 있어 추세가 뚜렷하지 않습니다.<br/>';\n      if (isNearMiddleLine) {\n        result += '→ 횡보장세에서 가격이 Middle Line 부근에 있으므로 변동성이 낮을 수 있습니다.<br/>';\n      }\n    }\n\n    // 사용자 친화적인 설명 추가\n    result += '<br/>Trend Pullback 전략은 추세를 따라가는 전략으로, 추세 방향으로의 가격 조정을 활용합니다.<br/>';\n    return result;\n  };\n  useEffect(() => {\n    if (keltnerData.length > 0) {\n      try {\n        const result = analyzeTrendPullback(keltnerData);\n        setAnalysisResult(result);\n      } catch (error) {\n        console.error('Error in KeltnerAnalysis2:', error);\n        setAnalysisResult('분석 중 오류가 발생했습니다.');\n      }\n    }\n  }, [keltnerData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchKeltnerData, {\n      stockCode: stockCode,\n      onKelFetch: setKeltnerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Keltner Channel Trend Pullback \\uC804\\uB7B5 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(KeltnerAnalysis2, \"aZZIuFHnzaw3LQSAI9Abkvj+T8Y=\");\n_c = KeltnerAnalysis2;\nexport default KeltnerAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"KeltnerAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchKeltnerData","jsxDEV","_jsxDEV","KeltnerAnalysis2","stockCode","_s","keltnerData","setKeltnerData","analysisResult","setAnalysisResult","calculateChannelAngle","period","length","recentData","slice","middleLineValues","map","data","Middle_Line","indices","Array","keys","n","sumX","reduce","a","b","sumY","sumXY","sum","x","i","sumX2","slope","angle","Math","atan","PI","analyzeTrendPullback","threshold","result","currentData","currentClose","close","middleLine","upperBand","Upper_Band","lowerBand","Lower_Band","isNearMiddleLine","abs","error","console","children","onKelFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/KeltnerAnalysis2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\r\n\r\nfunction KeltnerAnalysis2({ stockCode }) {\r\n    const [keltnerData, setKeltnerData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const calculateChannelAngle = (keltnerData, period = 14) => {\r\n        if (keltnerData.length < period) {\r\n            return null;\r\n        }\r\n        const recentData = keltnerData.slice(-period);\r\n        const middleLineValues = recentData.map(data => data.Middle_Line);\r\n\r\n        const indices = [...Array(period).keys()];\r\n        const n = period;\r\n        const sumX = indices.reduce((a, b) => a + b, 0);\r\n        const sumY = middleLineValues.reduce((a, b) => a + b, 0);\r\n        const sumXY = indices.reduce((sum, x, i) => sum + x * middleLineValues[i], 0);\r\n        const sumX2 = indices.reduce((sum, x) => sum + x * x, 0);\r\n\r\n        const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\r\n        const angle = Math.atan(slope) * (180 / Math.PI); // 기울기를 각도로 변환\r\n\r\n        return angle;\r\n    };\r\n\r\n    const analyzeTrendPullback = (keltnerData, threshold = 0.01, period = 14) => {\r\n        const angle = calculateChannelAngle(keltnerData, period);\r\n\r\n        if (angle === null) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        let result = '<strong>Trend Pullback 전략 분석</strong><br/><br/>';\r\n\r\n        const currentData = keltnerData[keltnerData.length - 1];\r\n        const currentClose = currentData.close;\r\n        const middleLine = currentData.Middle_Line;\r\n        const upperBand = currentData.Upper_Band;\r\n        const lowerBand = currentData.Lower_Band;\r\n\r\n        // 가격이 Middle Line 근처에 있는지 확인 (오차 범위 내)\r\n        const isNearMiddleLine = Math.abs(currentClose - middleLine) / middleLine < threshold;\r\n\r\n        // 현재 추세 판단\r\n        if (angle > 5) {\r\n            result += '채널이 상승하고 있어 <strong>상승 추세</strong>입니다.<br/>';\r\n\r\n            if (isNearMiddleLine) {\r\n                result += '→ 상승 추세에서 가격이 Middle Line 부근에 있으므로 <strong>매수 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            } else if (currentClose >= upperBand) {\r\n                result += '→ 가격이 Upper Band 부근에 있으므로 <strong>이익 실현</strong> 또는 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            }\r\n        } else if (angle < -5) {\r\n            result += '채널이 하락하고 있어 <strong>하락 추세</strong>입니다.<br/>';\r\n\r\n            if (isNearMiddleLine) {\r\n                result += '→ 하락 추세에서 가격이 Middle Line 부근에 있으므로 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            } else if (currentClose <= lowerBand) {\r\n                result += '→ 가격이 Lower Band 부근에 있으므로 <strong>추가 하락 가능성</strong>이 있어 <strong>신중한 접근</strong>이 필요합니다.<br/>';\r\n            }\r\n        } else {\r\n            result += '채널이 횡보하고 있어 추세가 뚜렷하지 않습니다.<br/>';\r\n\r\n            if (isNearMiddleLine) {\r\n                result += '→ 횡보장세에서 가격이 Middle Line 부근에 있으므로 변동성이 낮을 수 있습니다.<br/>';\r\n            }\r\n        }\r\n\r\n        // 사용자 친화적인 설명 추가\r\n        result += '<br/>Trend Pullback 전략은 추세를 따라가는 전략으로, 추세 방향으로의 가격 조정을 활용합니다.<br/>';\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (keltnerData.length > 0) {\r\n            try {\r\n                const result = analyzeTrendPullback(keltnerData);\r\n                setAnalysisResult(result);\r\n            } catch (error) {\r\n                console.error('Error in KeltnerAnalysis2:', error);\r\n                setAnalysisResult('분석 중 오류가 발생했습니다.');\r\n            }\r\n        }\r\n    }, [keltnerData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchKeltnerData stockCode={stockCode} onKelFetch={setKeltnerData} />\r\n            <h4>Keltner Channel Trend Pullback 전략 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeltnerAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}