{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\pages\\\\TechChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchTop5Data from '../ComponentsFetch/FetchStockOrignal/FetchTop5Data';\nimport FetchStockList from '../ComponentsFetch/FetchStockOrignal/FetchStockList'; // FetchStockList 컴포넌트\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockOrignal/FetchStockDataForCode'; // FetchStockDataForCode 컴포넌트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TechChart() {\n  _s();\n  const [top5Stocks, setTop5Stocks] = useState([]); // 상위 5개의 종목 데이터를 저장할 상태\n  const [stockList, setStockList] = useState([]); // 전체 종목 목록 저장\n  const [selectedStock, setSelectedStock] = useState(null); // 선택된 종목 코드\n  const [stockDetails, setStockDetails] = useState(null); // 선택된 종목의 세부 정보 저장\n\n  useEffect(() => {\n    if (stockDetails.length > 0 && stockList.length > 0) {\n      const available = stockList.map(stock => ({\n        code: stock.code,\n        name: `${stock.name}`\n      }));\n    }\n  }, [stockDetails, stockList]);\n\n  // FetchTop5Data의 콜백 핸들러\n  const handleTopFetch = data => {\n    setTop5Stocks(data); // 상위 5개의 종목 데이터를 상태에 저장\n  };\n\n  // FetchStockList의 콜백 핸들러\n  const handleListFetch = data => {\n    setStockList(data); // 전체 종목 목록을 상태에 저장\n  };\n\n  // 특정 종목을 선택했을 때 해당 종목의 세부 데이터를 가져오는 함수\n  const handleStockClick = stockCode => {\n    setSelectedStock(stockCode); // 클릭한 종목의 코드를 저장\n  };\n\n  // FetchStockDataForCode의 콜백 핸들러\n  const handleStockDataFetch = data => {\n    setStockDetails(data); // 선택된 종목의 세부 데이터를 저장\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchTop5Data, {\n      onTopFetch: handleTopFetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockList, {\n      onListFetch: handleListFetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top 5 Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: top5Stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleStockClick(stock.stock_code),\n        children: [stock.stock_code, \" - \\uC810\\uC218: \", stock.score.toFixed(2)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Stock Details: \", selectedStock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n        stockCode: selectedStock,\n        onSDFCFetch: handleStockDataFetch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), stockDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Stock Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Close Price: \", stockDetails.close]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High Price: \", stockDetails.high]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Price: \", stockDetails.low]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Volume: \", stockDetails.volume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(TechChart, \"0sPgU0kno+K3AiF9lkDGpoGRAvg=\");\n_c = TechChart;\nexport default TechChart;\nvar _c;\n$RefreshReg$(_c, \"TechChart\");","map":{"version":3,"names":["React","useState","useEffect","FetchTop5Data","FetchStockList","FetchStockDataForCode","jsxDEV","_jsxDEV","Fragment","_Fragment","TechChart","_s","top5Stocks","setTop5Stocks","stockList","setStockList","selectedStock","setSelectedStock","stockDetails","setStockDetails","length","available","map","stock","code","name","handleTopFetch","data","handleListFetch","handleStockClick","stockCode","handleStockDataFetch","children","onTopFetch","fileName","_jsxFileName","lineNumber","columnNumber","onListFetch","index","onClick","stock_code","score","toFixed","onSDFCFetch","close","high","low","volume","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/pages/TechChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchTop5Data from '../ComponentsFetch/FetchStockOrignal/FetchTop5Data'\r\nimport FetchStockList from '../ComponentsFetch/FetchStockOrignal/FetchStockList'; // FetchStockList 컴포넌트\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockOrignal/FetchStockDataForCode'; // FetchStockDataForCode 컴포넌트\r\n\r\nfunction TechChart() {\r\n    const [top5Stocks, setTop5Stocks] = useState([]); // 상위 5개의 종목 데이터를 저장할 상태\r\n    const [stockList, setStockList] = useState([]); // 전체 종목 목록 저장\r\n    const [selectedStock, setSelectedStock] = useState(null); // 선택된 종목 코드\r\n    const [stockDetails, setStockDetails] = useState(null); // 선택된 종목의 세부 정보 저장\r\n\r\n    useEffect(() => {\r\n        if(stockDetails.length > 0 && stockList.length > 0 ) {\r\n            const available = stockList.map(stock => ({\r\n                code: stock.code,\r\n                name: `${stock.name}`\r\n            }))\r\n        }\r\n    }, [stockDetails, stockList])\r\n\r\n    // FetchTop5Data의 콜백 핸들러\r\n    const handleTopFetch = (data) => {\r\n        setTop5Stocks(data); // 상위 5개의 종목 데이터를 상태에 저장\r\n    };\r\n\r\n    // FetchStockList의 콜백 핸들러\r\n    const handleListFetch = (data) => {\r\n        setStockList(data); // 전체 종목 목록을 상태에 저장\r\n    };\r\n\r\n    // 특정 종목을 선택했을 때 해당 종목의 세부 데이터를 가져오는 함수\r\n    const handleStockClick = (stockCode) => {\r\n        setSelectedStock(stockCode); // 클릭한 종목의 코드를 저장\r\n    };\r\n\r\n    // FetchStockDataForCode의 콜백 핸들러\r\n    const handleStockDataFetch = (data) => {\r\n        setStockDetails(data); // 선택된 종목의 세부 데이터를 저장\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FetchTop5Data onTopFetch={handleTopFetch} />\r\n            <FetchStockList onListFetch={handleListFetch} />\r\n\r\n            {/* 상위 5개의 종목을 출력 */}\r\n            <h2>Top 5 Stocks</h2>\r\n            <ul>\r\n                {top5Stocks.map((stock, index) => (\r\n                    <li key={index} onClick={() => handleStockClick(stock.stock_code)}>\r\n                        {stock.stock_code} - 점수: {stock.score.toFixed(2)}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {/* 특정 종목을 클릭하면 해당 종목의 세부 정보를 가져옴 */}\r\n            {selectedStock && (\r\n                <>\r\n                    <h3>Selected Stock Details: {selectedStock}</h3>\r\n                    <FetchStockDataForCode stockCode={selectedStock} onSDFCFetch={handleStockDataFetch} />\r\n                </>\r\n            )}\r\n\r\n            {/* 선택된 종목의 세부 정보를 화면에 출력 */}\r\n            {stockDetails && (\r\n                <div>\r\n                    <h4>Stock Details:</h4>\r\n                    <p>Close Price: {stockDetails.close}</p>\r\n                    <p>High Price: {stockDetails.high}</p>\r\n                    <p>Low Price: {stockDetails.low}</p>\r\n                    <p>Volume: {stockDetails.volume}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TechChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}