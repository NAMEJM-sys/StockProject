{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\KeltnelAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KeltnerAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [keltnerData, setKeltnerData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzePricePosition = keltnerData => {\n    if (keltnerData.length < 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = keltnerData.length - 1;\n    const currentData = keltnerData[lastIndex];\n    const currentClose = currentData.close;\n    const middleLine = currentData.Middle_Line;\n    const upperBand = currentData.Upper_Band;\n    const lowerBand = currentData.Lower_Band;\n    let result = '<strong>가격 위치에 따른 추세 판단</strong><br/><br/>';\n    if (currentClose > middleLine) {\n      result += '현재 가격이 Middle Line 위에 형성되어 있어 <strong>상승 추세</strong>로 판단됩니다.<br/>';\n    } else if (currentClose < middleLine) {\n      result += '현재 가격이 Middle Line 아래에 형성되어 있어 <strong>하락 추세</strong>로 판단됩니다.<br/>';\n    } else {\n      result += '현재 가격이 Middle Line과 동일하여 추세 판단이 어렵습니다.<br/>';\n    }\n\n    // 가격이 Upper Band와 Lower Band 내에 있는지 확인\n    if (currentClose < upperBand && currentClose > lowerBand) {\n      result += '가격이 Keltner Channel 안에서 움직이고 있습니다.<br/>';\n    } else if (currentClose > upperBand) {\n      result += '가격이 Upper Band 위에 형성되어 있어 강한 상승 모멘텀이 있을 수 있습니다.<br/>';\n    } else if (currentClose < lowerBand) {\n      result += '가격이 Lower Band 아래에 형성되어 있어 강한 하락 모멘텀이 있을 수 있습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (keltnerData.length > 0) {\n      const result = analyzePricePosition(keltnerData);\n      setAnalysisResult(result);\n    }\n  }, [keltnerData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchKeltnerData, {\n      stockCode: stockCode,\n      onKeltnerFetch: setKeltnerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Keltner Channel \\uAC00\\uACA9 \\uC704\\uCE58 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(KeltnerAnalysis1, \"aZZIuFHnzaw3LQSAI9Abkvj+T8Y=\");\n_c = KeltnerAnalysis1;\nexport default KeltnerAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"KeltnerAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchKeltnerData","jsxDEV","_jsxDEV","KeltnerAnalysis1","stockCode","_s","keltnerData","setKeltnerData","analysisResult","setAnalysisResult","analyzePricePosition","length","lastIndex","currentData","currentClose","close","middleLine","Middle_Line","upperBand","Upper_Band","lowerBand","Lower_Band","result","children","onKeltnerFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/KeltnelAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\r\n\r\nfunction KeltnerAnalysis1({ stockCode }) {\r\n    const [keltnerData, setKeltnerData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzePricePosition = (keltnerData) => {\r\n        if (keltnerData.length < 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = keltnerData.length - 1;\r\n        const currentData = keltnerData[lastIndex];\r\n\r\n        const currentClose = currentData.close;\r\n        const middleLine = currentData.Middle_Line;\r\n        const upperBand = currentData.Upper_Band;\r\n        const lowerBand = currentData.Lower_Band;\r\n\r\n        let result = '<strong>가격 위치에 따른 추세 판단</strong><br/><br/>';\r\n\r\n        if (currentClose > middleLine) {\r\n            result += '현재 가격이 Middle Line 위에 형성되어 있어 <strong>상승 추세</strong>로 판단됩니다.<br/>';\r\n        } else if (currentClose < middleLine) {\r\n            result += '현재 가격이 Middle Line 아래에 형성되어 있어 <strong>하락 추세</strong>로 판단됩니다.<br/>';\r\n        } else {\r\n            result += '현재 가격이 Middle Line과 동일하여 추세 판단이 어렵습니다.<br/>';\r\n        }\r\n\r\n        // 가격이 Upper Band와 Lower Band 내에 있는지 확인\r\n        if (currentClose < upperBand && currentClose > lowerBand) {\r\n            result += '가격이 Keltner Channel 안에서 움직이고 있습니다.<br/>';\r\n        } else if (currentClose > upperBand) {\r\n            result += '가격이 Upper Band 위에 형성되어 있어 강한 상승 모멘텀이 있을 수 있습니다.<br/>';\r\n        } else if (currentClose < lowerBand) {\r\n            result += '가격이 Lower Band 아래에 형성되어 있어 강한 하락 모멘텀이 있을 수 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (keltnerData.length > 0) {\r\n            const result = analyzePricePosition(keltnerData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [keltnerData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchKeltnerData stockCode={stockCode} onKeltnerFetch={setKeltnerData} />\r\n            <h4>Keltner Channel 가격 위치 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeltnerAnalysis1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,gBAAgBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,oBAAoB,GAAIJ,WAAW,IAAK;IAC1C,IAAIA,WAAW,CAACK,MAAM,GAAG,CAAC,EAAE;MACxB,OAAO,iBAAiB;IAC5B;IAEA,MAAMC,SAAS,GAAGN,WAAW,CAACK,MAAM,GAAG,CAAC;IACxC,MAAME,WAAW,GAAGP,WAAW,CAACM,SAAS,CAAC;IAE1C,MAAME,YAAY,GAAGD,WAAW,CAACE,KAAK;IACtC,MAAMC,UAAU,GAAGH,WAAW,CAACI,WAAW;IAC1C,MAAMC,SAAS,GAAGL,WAAW,CAACM,UAAU;IACxC,MAAMC,SAAS,GAAGP,WAAW,CAACQ,UAAU;IAExC,IAAIC,MAAM,GAAG,4CAA4C;IAEzD,IAAIR,YAAY,GAAGE,UAAU,EAAE;MAC3BM,MAAM,IAAI,mEAAmE;IACjF,CAAC,MAAM,IAAIR,YAAY,GAAGE,UAAU,EAAE;MAClCM,MAAM,IAAI,oEAAoE;IAClF,CAAC,MAAM;MACHA,MAAM,IAAI,6CAA6C;IAC3D;;IAEA;IACA,IAAIR,YAAY,GAAGI,SAAS,IAAIJ,YAAY,GAAGM,SAAS,EAAE;MACtDE,MAAM,IAAI,yCAAyC;IACvD,CAAC,MAAM,IAAIR,YAAY,GAAGI,SAAS,EAAE;MACjCI,MAAM,IAAI,sDAAsD;IACpE,CAAC,MAAM,IAAIR,YAAY,GAAGM,SAAS,EAAE;MACjCE,MAAM,IAAI,uDAAuD;IACrE;IAEA,OAAOA,MAAM;EACjB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAW,CAACK,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMW,MAAM,GAAGZ,oBAAoB,CAACJ,WAAW,CAAC;MAChDG,iBAAiB,CAACa,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAAChB,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAAqB,QAAA,gBACIrB,OAAA,CAACF,gBAAgB;MAACI,SAAS,EAAEA,SAAU;MAACoB,cAAc,EAAEjB;IAAe;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E1B,OAAA;MAAAqB,QAAA,EAAI;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC1B,OAAA;MAAG2B,uBAAuB,EAAE;QAAEC,MAAM,EAAEtB;MAAe;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAACvB,EAAA,CArDQF,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAuDzB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}