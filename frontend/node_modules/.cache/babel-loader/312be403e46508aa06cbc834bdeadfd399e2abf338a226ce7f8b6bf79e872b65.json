{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\SARCalculations1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchSARData from '../ComponentsFetch/FetchStockOrignal/FetchParabolicSARData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SARCalculations1({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [sarData, setSARData] = useState([]);\n  const calculateTrendDirectionScore = sarData => {\n    if (sarData.length < 2) {\n      return null;\n    }\n    const lastIndex = sarData.length - 1;\n    const currentPrice = sarData[lastIndex].close;\n    const currentSAR = sarData[lastIndex].Parabolic_SAR;\n    const prevPrice = sarData[lastIndex - 1].close;\n    const prevSAR = sarData[lastIndex - 1].Parabolic_SAR;\n    let score = 5; // 기본 보통\n\n    // 1. 현재 추세 방향 판단\n    if (currentPrice > currentSAR) {\n      score = 3; // 매수\n    } else if (currentPrice < currentSAR) {\n      score = 7; // 매도\n    }\n\n    // 2. 추세 반전 신호 감지\n    if (prevPrice <= prevSAR && currentPrice > currentSAR) {\n      score -= 2; // 매수 신호 강화\n    } else if (prevPrice >= prevSAR && currentPrice < currentSAR) {\n      score += 2; // 매도 신호 강화\n    }\n\n    // 점수 범위 조정\n    score = Math.max(1, Math.min(10, score));\n    return {\n      score,\n      currentSAR\n    };\n  };\n  useEffect(() => {\n    if (sarData.length > 0) {\n      const result = calculateTrendDirectionScore(sarData);\n      if (result !== null && onScoreCalculated) {\n        onScoreCalculated(result);\n      }\n    }\n  }, [sarData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FetchSARData, {\n      stockCode: stockCode,\n      onSARFetch: setSARData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(SARCalculations1, \"uuVXZMe8OUCD6Mf5lyztCHwY974=\");\n_c = SARCalculations1;\nexport default SARCalculations1;\nvar _c;\n$RefreshReg$(_c, \"SARCalculations1\");","map":{"version":3,"names":["React","useState","useEffect","FetchSARData","jsxDEV","_jsxDEV","SARCalculations1","stockCode","onScoreCalculated","_s","sarData","setSARData","calculateTrendDirectionScore","length","lastIndex","currentPrice","close","currentSAR","Parabolic_SAR","prevPrice","prevSAR","score","Math","max","min","result","children","onSARFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/SARCalculations1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchSARData from '../ComponentsFetch/FetchStockOrignal/FetchParabolicSARData';\r\n\r\nfunction SARCalculations1({ stockCode, onScoreCalculated }) {\r\n  const [sarData, setSARData] = useState([]);\r\n\r\n  const calculateTrendDirectionScore = (sarData) => {\r\n    if (sarData.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    const lastIndex = sarData.length - 1;\r\n    const currentPrice = sarData[lastIndex].close;\r\n    const currentSAR = sarData[lastIndex].Parabolic_SAR;\r\n    const prevPrice = sarData[lastIndex - 1].close;\r\n    const prevSAR = sarData[lastIndex - 1].Parabolic_SAR;\r\n\r\n    let score = 5; // 기본 보통\r\n\r\n    // 1. 현재 추세 방향 판단\r\n    if (currentPrice > currentSAR) {\r\n      score = 3; // 매수\r\n    } else if (currentPrice < currentSAR) {\r\n      score = 7; // 매도\r\n    }\r\n\r\n    // 2. 추세 반전 신호 감지\r\n    if (prevPrice <= prevSAR && currentPrice > currentSAR) {\r\n      score -= 2; // 매수 신호 강화\r\n    } else if (prevPrice >= prevSAR && currentPrice < currentSAR) {\r\n      score += 2; // 매도 신호 강화\r\n    }\r\n\r\n    // 점수 범위 조정\r\n    score = Math.max(1, Math.min(10, score));\r\n\r\n    return {score, currentSAR};\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sarData.length > 0) {\r\n      const result = calculateTrendDirectionScore(sarData);\r\n      if (result !== null && onScoreCalculated) {\r\n        onScoreCalculated(result);\r\n      }\r\n    }\r\n  }, [sarData]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchSARData stockCode={stockCode} onSARFetch={setSARData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SARCalculations1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,4DAA4D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,SAASC,gBAAgBA,CAAC;EAAEC,SAAS;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,4BAA4B,GAAIF,OAAO,IAAK;IAChD,IAAIA,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI;IACb;IAEA,MAAMC,SAAS,GAAGJ,OAAO,CAACG,MAAM,GAAG,CAAC;IACpC,MAAME,YAAY,GAAGL,OAAO,CAACI,SAAS,CAAC,CAACE,KAAK;IAC7C,MAAMC,UAAU,GAAGP,OAAO,CAACI,SAAS,CAAC,CAACI,aAAa;IACnD,MAAMC,SAAS,GAAGT,OAAO,CAACI,SAAS,GAAG,CAAC,CAAC,CAACE,KAAK;IAC9C,MAAMI,OAAO,GAAGV,OAAO,CAACI,SAAS,GAAG,CAAC,CAAC,CAACI,aAAa;IAEpD,IAAIG,KAAK,GAAG,CAAC,CAAC,CAAC;;IAEf;IACA,IAAIN,YAAY,GAAGE,UAAU,EAAE;MAC7BI,KAAK,GAAG,CAAC,CAAC,CAAC;IACb,CAAC,MAAM,IAAIN,YAAY,GAAGE,UAAU,EAAE;MACpCI,KAAK,GAAG,CAAC,CAAC,CAAC;IACb;;IAEA;IACA,IAAIF,SAAS,IAAIC,OAAO,IAAIL,YAAY,GAAGE,UAAU,EAAE;MACrDI,KAAK,IAAI,CAAC,CAAC,CAAC;IACd,CAAC,MAAM,IAAIF,SAAS,IAAIC,OAAO,IAAIL,YAAY,GAAGE,UAAU,EAAE;MAC5DI,KAAK,IAAI,CAAC,CAAC,CAAC;IACd;;IAEA;IACAA,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEH,KAAK,CAAC,CAAC;IAExC,OAAO;MAACA,KAAK;MAAEJ;IAAU,CAAC;EAC5B,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,IAAIQ,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MACtB,MAAMY,MAAM,GAAGb,4BAA4B,CAACF,OAAO,CAAC;MACpD,IAAIe,MAAM,KAAK,IAAI,IAAIjB,iBAAiB,EAAE;QACxCA,iBAAiB,CAACiB,MAAM,CAAC;MAC3B;IACF;EACF,CAAC,EAAE,CAACf,OAAO,CAAC,CAAC;EAEb,oBACEL,OAAA;IAAAqB,QAAA,eACErB,OAAA,CAACF,YAAY;MAACI,SAAS,EAAEA,SAAU;MAACoB,UAAU,EAAEhB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACtB,EAAA,CAlDQH,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAoDzB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}