{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\MACDCalculations2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDCalculations2({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const calculateDivergenceScore = () => {\n    if (macdData.length < 10 || stockData.length < 10) {\n      if (onScoreCalculated) {\n        onScoreCalculated(5); // 데이터 부족 시 보통 점수\n      }\n      return;\n    }\n\n    // 스윙 포인트 감지 함수 수정\n    const findSwingPoints = (data, key, windowSize = 3) => {\n      let swings = [];\n      for (let i = windowSize; i < data.length - windowSize; i++) {\n        let isSwingHigh = true;\n        let isSwingLow = true;\n        for (let j = 1; j <= windowSize; j++) {\n          if (data[i - j][key] >= data[i][key] || data[i + j][key] >= data[i][key]) {\n            isSwingHigh = false;\n          }\n          if (data[i - j][key] <= data[i][key] || data[i + j][key] <= data[i][key]) {\n            isSwingLow = false;\n          }\n        }\n        if (isSwingHigh) {\n          swings.push({\n            type: 'high',\n            value: data[i][key],\n            index: i,\n            date: data[i].date\n          });\n        }\n        if (isSwingLow) {\n          swings.push({\n            type: 'low',\n            value: data[i][key],\n            index: i,\n            date: data[i].date\n          });\n        }\n      }\n      return swings;\n    };\n    const priceSwings = findSwingPoints(stockData, 'close');\n    const macdSwings = findSwingPoints(macdData, 'MACD_Line');\n    let divergenceType = null;\n\n    // 상승 다이버전스 확인\n    const priceLows = priceSwings.filter(swing => swing.type === 'low');\n    const macdLows = macdSwings.filter(swing => swing.type === 'low');\n    if (priceLows.length >= 2 && macdLows.length >= 2) {\n      const latestPriceLow = priceLows[priceLows.length - 1];\n      const prevPriceLow = priceLows[priceLows.length - 2];\n      const latestMACDLow = macdLows.find(swing => swing.index === latestPriceLow.index);\n      const prevMACDLow = macdLows.find(swing => swing.index === prevPriceLow.index);\n      if (latestMACDLow && prevMACDLow) {\n        if (latestPriceLow.value < prevPriceLow.value && latestMACDLow.value > prevMACDLow.value) {\n          divergenceType = 'bullish';\n        }\n      }\n    }\n\n    // 하락 다이버전스 확인\n    const priceHighs = priceSwings.filter(swing => swing.type === 'high');\n    const macdHighs = macdSwings.filter(swing => swing.type === 'high');\n    if (priceHighs.length >= 2 && macdHighs.length >= 2) {\n      const latestPriceHigh = priceHighs[priceHighs.length - 1];\n      const prevPriceHigh = priceHighs[priceHighs.length - 2];\n      const latestMACDHigh = macdHighs.find(swing => swing.index === latestPriceHigh.index);\n      const prevMACDHigh = macdHighs.find(swing => swing.index === prevPriceHigh.index);\n      if (latestMACDHigh && prevMACDHigh) {\n        if (latestPriceHigh.value > prevPriceHigh.value && latestMACDHigh.value < prevMACDHigh.value) {\n          divergenceType = 'bearish';\n        }\n      }\n    }\n\n    // 점수 부여\n    let score = 5; // 기본 보통\n    if (divergenceType === 'bullish') {\n      score = 3; // 매수\n    } else if (divergenceType === 'bearish') {\n      score = 7; // 매도\n    }\n    if (onScoreCalculated) {\n      onScoreCalculated(score);\n    }\n  };\n  useEffect(() => {\n    if (macdData.length > 0 && stockData.length > 0) {\n      calculateDivergenceScore();\n    }\n  }, [macdData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDCalculations2, \"4dTGUat06KH/n32VOXcLj1xHfys=\");\n_c = MACDCalculations2;\nexport default MACDCalculations2;\nvar _c;\n$RefreshReg$(_c, \"MACDCalculations2\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","FetchStockDataForCode","jsxDEV","_jsxDEV","MACDCalculations2","stockCode","onScoreCalculated","_s","macdData","setMACDData","stockData","setStockData","calculateDivergenceScore","length","findSwingPoints","data","key","windowSize","swings","i","isSwingHigh","isSwingLow","j","push","type","value","index","date","priceSwings","macdSwings","divergenceType","priceLows","filter","swing","macdLows","latestPriceLow","prevPriceLow","latestMACDLow","find","prevMACDLow","priceHighs","macdHighs","latestPriceHigh","prevPriceHigh","latestMACDHigh","prevMACDHigh","score","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/MACDCalculations2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nfunction MACDCalculations2({ stockCode, onScoreCalculated }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n\r\n    const calculateDivergenceScore = () => {\r\n        if (macdData.length < 10 || stockData.length < 10) {\r\n            if (onScoreCalculated) {\r\n                onScoreCalculated(5); // 데이터 부족 시 보통 점수\r\n            }\r\n            return;\r\n        }\r\n\r\n        // 스윙 포인트 감지 함수 수정\r\n        const findSwingPoints = (data, key, windowSize = 3) => {\r\n            let swings = [];\r\n            for (let i = windowSize; i < data.length - windowSize; i++) {\r\n                let isSwingHigh = true;\r\n                let isSwingLow = true;\r\n                for (let j = 1; j <= windowSize; j++) {\r\n                    if (data[i - j][key] >= data[i][key] || data[i + j][key] >= data[i][key]) {\r\n                        isSwingHigh = false;\r\n                    }\r\n                    if (data[i - j][key] <= data[i][key] || data[i + j][key] <= data[i][key]) {\r\n                        isSwingLow = false;\r\n                    }\r\n                }\r\n                if (isSwingHigh) {\r\n                    swings.push({ type: 'high', value: data[i][key], index: i, date: data[i].date });\r\n                }\r\n                if (isSwingLow) {\r\n                    swings.push({ type: 'low', value: data[i][key], index: i, date: data[i].date });\r\n                }\r\n            }\r\n            return swings;\r\n        };\r\n\r\n        const priceSwings = findSwingPoints(stockData, 'close');\r\n        const macdSwings = findSwingPoints(macdData, 'MACD_Line');\r\n\r\n        let divergenceType = null;\r\n\r\n        // 상승 다이버전스 확인\r\n        const priceLows = priceSwings.filter(swing => swing.type === 'low');\r\n        const macdLows = macdSwings.filter(swing => swing.type === 'low');\r\n\r\n        if (priceLows.length >= 2 && macdLows.length >= 2) {\r\n            const latestPriceLow = priceLows[priceLows.length - 1];\r\n            const prevPriceLow = priceLows[priceLows.length - 2];\r\n\r\n            const latestMACDLow = macdLows.find(swing => swing.index === latestPriceLow.index);\r\n            const prevMACDLow = macdLows.find(swing => swing.index === prevPriceLow.index);\r\n\r\n            if (latestMACDLow && prevMACDLow) {\r\n                if (latestPriceLow.value < prevPriceLow.value && latestMACDLow.value > prevMACDLow.value) {\r\n                    divergenceType = 'bullish';\r\n                }\r\n            }\r\n        }\r\n\r\n        // 하락 다이버전스 확인\r\n        const priceHighs = priceSwings.filter(swing => swing.type === 'high');\r\n        const macdHighs = macdSwings.filter(swing => swing.type === 'high');\r\n\r\n        if (priceHighs.length >= 2 && macdHighs.length >= 2) {\r\n            const latestPriceHigh = priceHighs[priceHighs.length - 1];\r\n            const prevPriceHigh = priceHighs[priceHighs.length - 2];\r\n\r\n            const latestMACDHigh = macdHighs.find(swing => swing.index === latestPriceHigh.index);\r\n            const prevMACDHigh = macdHighs.find(swing => swing.index === prevPriceHigh.index);\r\n\r\n            if (latestMACDHigh && prevMACDHigh) {\r\n                if (latestPriceHigh.value > prevPriceHigh.value && latestMACDHigh.value < prevMACDHigh.value) {\r\n                    divergenceType = 'bearish';\r\n                }\r\n            }\r\n        }\r\n\r\n        // 점수 부여\r\n        let score = 5; // 기본 보통\r\n        if (divergenceType === 'bullish') {\r\n            score = 3; // 매수\r\n        } else if (divergenceType === 'bearish') {\r\n            score = 7; // 매도\r\n        }\r\n\r\n        if (onScoreCalculated) {\r\n            onScoreCalculated(score);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0 && stockData.length > 0) {\r\n            calculateDivergenceScore();\r\n        }\r\n    }, [macdData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDCalculations2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}