{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MACDAnalysis3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDAnalysis3({\n  stockCode\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMACDHistogram = (macdData, period = 3) => {\n    if (macdData.length < period + 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = macdData.length - 1;\n\n    // 최근 period 기간 동안의 MACD와 Signal Line의 값 및 변화량 저장\n    const macdValues = [];\n    const signalValues = [];\n    const macdChanges = [];\n    const signalChanges = [];\n    for (let i = lastIndex - period; i <= lastIndex; i++) {\n      macdValues.push(macdData[i].MACD_Line);\n      signalValues.push(macdData[i].Signal_Line);\n      if (i > 0) {\n        macdChanges.push(macdData[i].MACD_Line - macdData[i - 1].MACD_Line);\n        signalChanges.push(macdData[i].Signal_Line - macdData[i - 1].Signal_Line);\n      }\n    }\n\n    // 최근 변화량의 평균 계산\n    const avgMACDChange = macdChanges.reduce((a, b) => a + b, 0) / macdChanges.length;\n    const avgSignalChange = signalChanges.reduce((a, b) => a + b, 0) / signalChanges.length;\n\n    // 현재 MACD와 Signal Line의 차이 계산\n    const currentMACD = macdValues[macdValues.length - 1];\n    const currentSignal = signalValues[signalValues.length - 1];\n    const macdSignalDiff = currentMACD - currentSignal;\n\n    // 두 지표의 변화율을 사용하여 교차 시점 예측\n    const combinedChange = avgMACDChange - avgSignalChange;\n    let result = '';\n    let daysToCrossover = null;\n    if (combinedChange !== 0) {\n      daysToCrossover = -macdSignalDiff / combinedChange;\n      if (daysToCrossover >= 0 && daysToCrossover <= 5) {\n        // 5일 이내이면 가까운 시일 내로 판단\n        result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 수 있습니다.<br/>`;\n      } else if (daysToCrossover > 5) {\n        result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 것으로 예상됩니다.<br/>`;\n      } else {\n        result += '현재 추세로는 가까운 시일 내에 크로스오버가 발생할 것으로 예상되지 않습니다.<br/>';\n      }\n    } else {\n      result += 'MACD와 Signal Line의 변화율이 동일하여 크로스오버 시점을 예측할 수 없습니다.<br/>';\n    }\n\n    // Histogram의 0선 돌파 여부\n    const currentHistogram = macdData[lastIndex].Histogram;\n    const prevHistogram = macdData[lastIndex - 1].Histogram;\n    if (prevHistogram < 0 && currentHistogram > 0) {\n      result += '매수 모멘텀이 강화되고 있습니다. Histogram이 0선을 상향 돌파했습니다.<br/>';\n    } else if (prevHistogram > 0 && currentHistogram < 0) {\n      result += '매도 모멘텀이 강화되고 있습니다. Histogram이 0선을 하향 돌파했습니다.<br/>';\n    } else {\n      result += 'Histogram이 0선 근처에서 움직이고 있습니다.<br/>';\n    }\n\n    // Histogram 추세에 따른 모멘텀 해석\n    if (currentHistogram > prevHistogram) {\n      result += 'Histogram이 증가하고 있어 모멘텀이 강화되고 있습니다.<br/>';\n    } else if (currentHistogram < prevHistogram) {\n      result += 'Histogram이 감소하고 있어 모멘텀이 약화되고 있습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (macdData.length > 0) {\n      const result = analyzeMACDHistogram(macdData);\n      setAnalysisResult(result);\n    }\n  }, [macdData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"MACD Histogram \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDAnalysis3, \"27DMovUClVI7Ji8nju6vqnSpMCo=\");\n_c = MACDAnalysis3;\nexport default MACDAnalysis3;\nvar _c;\n$RefreshReg$(_c, \"MACDAnalysis3\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","jsxDEV","_jsxDEV","MACDAnalysis3","stockCode","_s","macdData","setMACDData","analysisResult","setAnalysisResult","analyzeMACDHistogram","period","length","lastIndex","macdValues","signalValues","macdChanges","signalChanges","i","push","MACD_Line","Signal_Line","avgMACDChange","reduce","a","b","avgSignalChange","currentMACD","currentSignal","macdSignalDiff","combinedChange","result","daysToCrossover","toFixed","currentHistogram","Histogram","prevHistogram","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MACDAnalysis3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\r\n\r\nfunction MACDAnalysis3({ stockCode }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMACDHistogram = (macdData, period = 3) => {\r\n        if (macdData.length < period + 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = macdData.length - 1;\r\n\r\n        // 최근 period 기간 동안의 MACD와 Signal Line의 값 및 변화량 저장\r\n        const macdValues = [];\r\n        const signalValues = [];\r\n        const macdChanges = [];\r\n        const signalChanges = [];\r\n\r\n        for (let i = lastIndex - period; i <= lastIndex; i++) {\r\n            macdValues.push(macdData[i].MACD_Line);\r\n            signalValues.push(macdData[i].Signal_Line);\r\n            if (i > 0) {\r\n                macdChanges.push(macdData[i].MACD_Line - macdData[i - 1].MACD_Line);\r\n                signalChanges.push(macdData[i].Signal_Line - macdData[i - 1].Signal_Line);\r\n            }\r\n        }\r\n\r\n        // 최근 변화량의 평균 계산\r\n        const avgMACDChange = macdChanges.reduce((a, b) => a + b, 0) / macdChanges.length;\r\n        const avgSignalChange = signalChanges.reduce((a, b) => a + b, 0) / signalChanges.length;\r\n\r\n        // 현재 MACD와 Signal Line의 차이 계산\r\n        const currentMACD = macdValues[macdValues.length - 1];\r\n        const currentSignal = signalValues[signalValues.length - 1];\r\n        const macdSignalDiff = currentMACD - currentSignal;\r\n\r\n        // 두 지표의 변화율을 사용하여 교차 시점 예측\r\n        const combinedChange = avgMACDChange - avgSignalChange;\r\n\r\n        let result = '';\r\n        let daysToCrossover = null;\r\n\r\n        if (combinedChange !== 0) {\r\n            daysToCrossover = -macdSignalDiff / combinedChange;\r\n            if (daysToCrossover >= 0 && daysToCrossover <= 5) { // 5일 이내이면 가까운 시일 내로 판단\r\n                result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 수 있습니다.<br/>`;\r\n            } else if (daysToCrossover > 5) {\r\n                result += `현재 추세가 지속된다면 약 ${daysToCrossover.toFixed(1)}일 후에 MACD 크로스오버가 발생할 것으로 예상됩니다.<br/>`;\r\n            } else {\r\n                result += '현재 추세로는 가까운 시일 내에 크로스오버가 발생할 것으로 예상되지 않습니다.<br/>';\r\n            }\r\n        } else {\r\n            result += 'MACD와 Signal Line의 변화율이 동일하여 크로스오버 시점을 예측할 수 없습니다.<br/>';\r\n        }\r\n\r\n        // Histogram의 0선 돌파 여부\r\n        const currentHistogram = macdData[lastIndex].Histogram;\r\n        const prevHistogram = macdData[lastIndex - 1].Histogram;\r\n\r\n        if (prevHistogram < 0 && currentHistogram > 0) {\r\n            result += '매수 모멘텀이 강화되고 있습니다. Histogram이 0선을 상향 돌파했습니다.<br/>';\r\n        } else if (prevHistogram > 0 && currentHistogram < 0) {\r\n            result += '매도 모멘텀이 강화되고 있습니다. Histogram이 0선을 하향 돌파했습니다.<br/>';\r\n        } else {\r\n            result += 'Histogram이 0선 근처에서 움직이고 있습니다.<br/>';\r\n        }\r\n\r\n        // Histogram 추세에 따른 모멘텀 해석\r\n        if (currentHistogram > prevHistogram) {\r\n            result += 'Histogram이 증가하고 있어 모멘텀이 강화되고 있습니다.<br/>';\r\n        } else if (currentHistogram < prevHistogram) {\r\n            result += 'Histogram이 감소하고 있어 모멘텀이 약화되고 있습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0) {\r\n            const result = analyzeMACDHistogram(macdData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [macdData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n            <h4>MACD Histogram 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDAnalysis3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}