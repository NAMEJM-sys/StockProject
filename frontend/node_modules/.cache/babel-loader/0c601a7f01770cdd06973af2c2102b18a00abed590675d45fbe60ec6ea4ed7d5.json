{"ast":null,"code":"import standardNormalTable from \"./standard_normal_table.js\";\n\n/**\n * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**\n *\n * Since probability tables cannot be\n * printed for every normal distribution, as there are an infinite variety\n * of normal distributions, it is common practice to convert a normal to a\n * standard normal and then use the standard normal table to find probabilities.\n *\n * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability\n * instead of looking it up in a table.\n *\n * @param {number} z\n * @returns {number} cumulative standard normal probability\n */\nfunction cumulativeStdNormalProbability(z) {\n  // Calculate the position of this value.\n  const absZ = Math.abs(z);\n  // Each row begins with a different\n  // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table\n  // corresponds to a range of 0.01 in the input values, so the value is\n  // multiplied by 100.\n  const index = Math.min(Math.round(absZ * 100), standardNormalTable.length - 1);\n\n  // The index we calculate must be in the table as a positive value,\n  // but we still pay attention to whether the input is positive\n  // or negative, and flip the output value as a last step.\n  if (z >= 0) {\n    return standardNormalTable[index];\n  } else {\n    // due to floating-point arithmetic, values in the table with\n    // 4 significant figures can nevertheless end up as repeating\n    // fractions when they're computed here.\n    return Math.round((1 - standardNormalTable[index]) * 1e4) / 1e4;\n  }\n}\nexport default cumulativeStdNormalProbability;","map":{"version":3,"names":["standardNormalTable","cumulativeStdNormalProbability","z","absZ","Math","abs","index","min","round","length"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/cumulative_std_normal_probability.js"],"sourcesContent":["import standardNormalTable from \"./standard_normal_table.js\";\n\n/**\n * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**\n *\n * Since probability tables cannot be\n * printed for every normal distribution, as there are an infinite variety\n * of normal distributions, it is common practice to convert a normal to a\n * standard normal and then use the standard normal table to find probabilities.\n *\n * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability\n * instead of looking it up in a table.\n *\n * @param {number} z\n * @returns {number} cumulative standard normal probability\n */\nfunction cumulativeStdNormalProbability(z) {\n    // Calculate the position of this value.\n    const absZ = Math.abs(z);\n    // Each row begins with a different\n    // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table\n    // corresponds to a range of 0.01 in the input values, so the value is\n    // multiplied by 100.\n    const index = Math.min(\n        Math.round(absZ * 100),\n        standardNormalTable.length - 1\n    );\n\n    // The index we calculate must be in the table as a positive value,\n    // but we still pay attention to whether the input is positive\n    // or negative, and flip the output value as a last step.\n    if (z >= 0) {\n        return standardNormalTable[index];\n    } else {\n        // due to floating-point arithmetic, values in the table with\n        // 4 significant figures can nevertheless end up as repeating\n        // fractions when they're computed here.\n        return Math.round((1 - standardNormalTable[index]) * 1e4) / 1e4;\n    }\n}\n\nexport default cumulativeStdNormalProbability;\n"],"mappings":"AAAA,OAAOA,mBAAmB,MAAM,4BAA4B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,8BAA8BA,CAACC,CAAC,EAAE;EACvC;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACH,CAAC,CAAC;EACxB;EACA;EACA;EACA;EACA,MAAMI,KAAK,GAAGF,IAAI,CAACG,GAAG,CAClBH,IAAI,CAACI,KAAK,CAACL,IAAI,GAAG,GAAG,CAAC,EACtBH,mBAAmB,CAACS,MAAM,GAAG,CACjC,CAAC;;EAED;EACA;EACA;EACA,IAAIP,CAAC,IAAI,CAAC,EAAE;IACR,OAAOF,mBAAmB,CAACM,KAAK,CAAC;EACrC,CAAC,MAAM;IACH;IACA;IACA;IACA,OAAOF,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,GAAGR,mBAAmB,CAACM,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG;EACnE;AACJ;AAEA,eAAeL,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}