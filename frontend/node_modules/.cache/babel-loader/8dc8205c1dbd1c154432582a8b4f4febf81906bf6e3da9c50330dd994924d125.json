{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\RSIAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchRSIData from '../ComponentsFetch/FetchRSIData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst findSwingLows = (data, range, valueKey) => {\n  let swingLows = [];\n  for (let i = range; i < data.length - range; i++) {\n    let isSwingLow = true;\n    for (let j = 1; j <= range; j++) {\n      if (data[i - j][valueKey] <= data[i][valueKey] || data[i + j][valueKey] <= data[i][valueKey]) {\n        isSwingLow = false;\n        break;\n      }\n    }\n    if (isSwingLow) {\n      swingLows.push({\n        value: data[i][valueKey],\n        index: i,\n        date: data[i].date\n      });\n    }\n  }\n  return swingLows;\n};\nconst findSwingHighs = (data, range, valueKey) => {\n  let swingHighs = [];\n  for (let i = range; i < data.length - range; i++) {\n    let isSwingHigh = true;\n    for (let j = 1; j <= range; j++) {\n      if (data[i - j][valueKey] >= data[i][valueKey] || data[i + j][valueKey] >= data[i][valueKey]) {\n        isSwingHigh = false;\n        break;\n      }\n    }\n    if (isSwingHigh) {\n      swingHighs.push({\n        value: data[i][valueKey],\n        index: i,\n        date: data[i].date\n      });\n    }\n  }\n  return swingHighs;\n};\nfunction RSIAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [rsiData, setRSIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [divergenceResult, setDivergenceResult] = useState('');\n  const analyzeRSIDivergence = () => {\n    const swingRange = 2;\n    const dataLength = Math.min(rsiData.length, stockData.length);\n    if (dataLength < swingRange * 2) {\n      setDivergenceResult('데이터가 충분하지 않습니다.');\n      return;\n    }\n    const priceLows = findSwingLows(stockData, swingRange, 'close');\n    const priceHighs = findSwingHighs(stockData, swingRange, 'close');\n    const rsiLows = findSwingLows(rsiData, swingRange, 'RSI');\n    const rsiHighs = findSwingHighs(rsiData, swingRange, 'RSI');\n    let result = '';\n\n    // 상승 다이버전스 감지\n    if (priceLows.length >= 2 && rsiLows.length >= 2) {\n      const prevPriceLow = priceLows[priceLows.length - 2];\n      const recentPriceLow = priceLows[priceLows.length - 1];\n      const prevRSILow = rsiLows.find(rsiLow => rsiLow.date === prevPriceLow.date);\n      const recentRSILow = rsiLows.find(rsiLow => rsiLow.date === recentPriceLow.date);\n      if (prevRSILow && recentRSILow) {\n        if (recentPriceLow.value < prevPriceLow.value && recentRSILow.value > prevRSILow.value) {\n          result += `상승 다이버전스 감지: 주가는 더 낮은 저점을 형성했지만, RSI는 더 높은 저점을 형성했습니다. 이는 매수 신호일 수 있습니다.<br/>`;\n        }\n      }\n    }\n\n    // 하락 다이버전스 감지\n    if (priceHighs.length >= 2 && rsiHighs.length >= 2) {\n      const prevPriceHigh = priceHighs[priceHighs.length - 2];\n      const recentPriceHigh = priceHighs[priceHighs.length - 1];\n      const prevRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === prevPriceHigh.date);\n      const recentRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === recentPriceHigh.date);\n      if (prevRSIHigh && recentRSIHigh) {\n        if (recentPriceHigh.value > prevPriceHigh.value && recentRSIHigh.value < prevRSIHigh.value) {\n          result += `하락 다이버전스 감지: 주가는 더 높은 고점을 형성했지만, RSI는 더 낮은 고점을 형성했습니다. 이는 매도 신호일 수 있습니다.<br/>`;\n        }\n      }\n    }\n    if (!result) {\n      result = \"현재 다이버전스가 감지되지 않았습니다. 지속적인 모니터링이 필요합니다.\";\n    }\n    setDivergenceResult(result);\n  };\n  useEffect(() => {\n    if (rsiData.length > 0 && stockData.length > 0) {\n      console.log(\"result:\", rsiData);\n      analyzeRSIDivergence();\n    }\n  }, [rsiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchRSIData, {\n      stockCode: stockCode,\n      onRSIFetch: setRSIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"RSI \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: divergenceResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(RSIAnalysis2, \"QFT76HVUgbm2A2rRyHAMxIdwKJU=\");\n_c = RSIAnalysis2;\nexport default RSIAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"RSIAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchRSIData","FetchStockDataForCode","jsxDEV","_jsxDEV","findSwingLows","data","range","valueKey","swingLows","i","length","isSwingLow","j","push","value","index","date","findSwingHighs","swingHighs","isSwingHigh","RSIAnalysis2","stockCode","_s","rsiData","setRSIData","stockData","setStockData","divergenceResult","setDivergenceResult","analyzeRSIDivergence","swingRange","dataLength","Math","min","priceLows","priceHighs","rsiLows","rsiHighs","result","prevPriceLow","recentPriceLow","prevRSILow","find","rsiLow","recentRSILow","prevPriceHigh","recentPriceHigh","prevRSIHigh","rsiHigh","recentRSIHigh","console","log","children","onRSIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/RSIAnalysis2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchRSIData from '../ComponentsFetch/FetchRSIData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nconst findSwingLows = (data, range, valueKey) => {\r\n    let swingLows = [];\r\n    for (let i = range; i < data.length - range; i++) {\r\n        let isSwingLow = true;\r\n        for (let j = 1; j <= range; j++) {\r\n            if (data[i - j][valueKey] <= data[i][valueKey] || data[i + j][valueKey] <= data[i][valueKey]) {\r\n                isSwingLow = false;\r\n                break;\r\n            }\r\n        }\r\n        if (isSwingLow) {\r\n            swingLows.push({ value: data[i][valueKey], index: i, date: data[i].date });\r\n        }\r\n    }\r\n    return swingLows;\r\n};\r\n\r\nconst findSwingHighs = (data, range, valueKey) => {\r\n    let swingHighs = [];\r\n    for (let i = range; i < data.length - range; i++) {\r\n        let isSwingHigh = true;\r\n        for (let j = 1; j <= range; j++) {\r\n            if (data[i - j][valueKey] >= data[i][valueKey] || data[i + j][valueKey] >= data[i][valueKey]) {\r\n                isSwingHigh = false;\r\n                break;\r\n            }\r\n        }\r\n        if (isSwingHigh) {\r\n            swingHighs.push({ value: data[i][valueKey], index: i, date: data[i].date });\r\n        }\r\n    }\r\n    return swingHighs;\r\n};\r\n\r\nfunction RSIAnalysis2({ stockCode }) {\r\n    const [rsiData, setRSIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [divergenceResult, setDivergenceResult] = useState('');\r\n\r\n    const analyzeRSIDivergence = () => {\r\n        const swingRange = 2;\r\n        const dataLength = Math.min(rsiData.length, stockData.length);\r\n\r\n        if (dataLength < swingRange * 2) {\r\n            setDivergenceResult('데이터가 충분하지 않습니다.');\r\n            return;\r\n        }\r\n\r\n        const priceLows = findSwingLows(stockData, swingRange, 'close');\r\n        const priceHighs = findSwingHighs(stockData, swingRange, 'close');\r\n\r\n        const rsiLows = findSwingLows(rsiData, swingRange, 'RSI');\r\n        const rsiHighs = findSwingHighs(rsiData, swingRange, 'RSI');\r\n\r\n        let result = '';\r\n\r\n        // 상승 다이버전스 감지\r\n        if (priceLows.length >= 2 && rsiLows.length >= 2) {\r\n            const prevPriceLow = priceLows[priceLows.length - 2];\r\n            const recentPriceLow = priceLows[priceLows.length - 1];\r\n\r\n            const prevRSILow = rsiLows.find(rsiLow => rsiLow.date === prevPriceLow.date);\r\n            const recentRSILow = rsiLows.find(rsiLow => rsiLow.date === recentPriceLow.date);\r\n\r\n            if (prevRSILow && recentRSILow) {\r\n                if (recentPriceLow.value < prevPriceLow.value && recentRSILow.value > prevRSILow.value) {\r\n                    result += `상승 다이버전스 감지: 주가는 더 낮은 저점을 형성했지만, RSI는 더 높은 저점을 형성했습니다. 이는 매수 신호일 수 있습니다.<br/>`;\r\n                }\r\n            }\r\n        }\r\n\r\n        // 하락 다이버전스 감지\r\n        if (priceHighs.length >= 2 && rsiHighs.length >= 2) {\r\n            const prevPriceHigh = priceHighs[priceHighs.length - 2];\r\n            const recentPriceHigh = priceHighs[priceHighs.length - 1];\r\n\r\n            const prevRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === prevPriceHigh.date);\r\n            const recentRSIHigh = rsiHighs.find(rsiHigh => rsiHigh.date === recentPriceHigh.date);\r\n\r\n            if (prevRSIHigh && recentRSIHigh) {\r\n                if (recentPriceHigh.value > prevPriceHigh.value && recentRSIHigh.value < prevRSIHigh.value) {\r\n                    result += `하락 다이버전스 감지: 주가는 더 높은 고점을 형성했지만, RSI는 더 낮은 고점을 형성했습니다. 이는 매도 신호일 수 있습니다.<br/>`;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!result) {\r\n            result = \"현재 다이버전스가 감지되지 않았습니다. 지속적인 모니터링이 필요합니다.\";\r\n        }\r\n\r\n        setDivergenceResult(result);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (rsiData.length > 0 && stockData.length > 0) {\r\n            console.log(\"result:\",rsiData)\r\n            analyzeRSIDivergence();\r\n        }\r\n    }, [rsiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchRSIData stockCode={stockCode} onRSIFetch={setRSIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <h4>RSI 다이버전스 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: divergenceResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RSIAnalysis2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}