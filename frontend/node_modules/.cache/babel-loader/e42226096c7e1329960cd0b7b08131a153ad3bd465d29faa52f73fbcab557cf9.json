{"ast":null,"code":"import mean from \"./mean.js\";\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x, y) {\n  // The two datasets must have the same length which must be more than 1\n  if (x.length !== y.length) {\n    throw new Error(\"sampleCovariance requires samples with equal lengths\");\n  }\n  if (x.length < 2) {\n    throw new Error(\"sampleCovariance requires at least two data points in each sample\");\n  }\n\n  // determine the mean of each dataset so that we can judge each\n  // value of the dataset fairly as the difference from the mean. this\n  // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n  // does not suffer because of the difference in absolute values\n  const xmean = mean(x);\n  const ymean = mean(y);\n  let sum = 0;\n\n  // for each pair of values, the covariance increases when their\n  // difference from the mean is associated - if both are well above\n  // or if both are well below\n  // the mean, the covariance increases significantly.\n  for (let i = 0; i < x.length; i++) {\n    sum += (x[i] - xmean) * (y[i] - ymean);\n  }\n\n  // this is Bessels' Correction: an adjustment made to sample statistics\n  // that allows for the reduced degree of freedom entailed in calculating\n  // values from samples rather than complete populations.\n  const besselsCorrection = x.length - 1;\n\n  // the covariance is weighted by the length of the datasets.\n  return sum / besselsCorrection;\n}\nexport default sampleCovariance;","map":{"version":3,"names":["mean","sampleCovariance","x","y","length","Error","xmean","ymean","sum","i","besselsCorrection"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/sample_covariance.js"],"sourcesContent":["import mean from \"./mean.js\";\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x, y) {\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error(\"sampleCovariance requires samples with equal lengths\");\n    }\n\n    if (x.length < 2) {\n        throw new Error(\n            \"sampleCovariance requires at least two data points in each sample\"\n        );\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    const xmean = mean(x);\n    const ymean = mean(y);\n    let sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (let i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nexport default sampleCovariance;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC5B;EACA,IAAID,CAAC,CAACE,MAAM,KAAKD,CAAC,CAACC,MAAM,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EAC3E;EAEA,IAAIH,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;IACd,MAAM,IAAIC,KAAK,CACX,mEACJ,CAAC;EACL;;EAEA;EACA;EACA;EACA;EACA,MAAMC,KAAK,GAAGN,IAAI,CAACE,CAAC,CAAC;EACrB,MAAMK,KAAK,GAAGP,IAAI,CAACG,CAAC,CAAC;EACrB,IAAIK,GAAG,GAAG,CAAC;;EAEX;EACA;EACA;EACA;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,CAACE,MAAM,EAAEK,CAAC,EAAE,EAAE;IAC/BD,GAAG,IAAI,CAACN,CAAC,CAACO,CAAC,CAAC,GAAGH,KAAK,KAAKH,CAAC,CAACM,CAAC,CAAC,GAAGF,KAAK,CAAC;EAC1C;;EAEA;EACA;EACA;EACA,MAAMG,iBAAiB,GAAGR,CAAC,CAACE,MAAM,GAAG,CAAC;;EAEtC;EACA,OAAOI,GAAG,GAAGE,iBAAiB;AAClC;AAEA,eAAeT,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}