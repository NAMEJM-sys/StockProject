{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\MACDCalculations3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MACDCalculations3({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [macdData, setMACDData] = useState([]);\n  const calculateHistogramScore = (macdData, period = 5) => {\n    if (macdData.length < period + 1) {\n      return null;\n    }\n    const lastIndex = macdData.length - 1;\n    const currentHistogram = macdData[lastIndex].Histogram;\n    const prevHistogram = macdData[lastIndex - 1].Histogram;\n    let scoreAdjustment = 0;\n\n    // Histogram이 0선을 상향 또는 하향 돌파할 때\n    if (prevHistogram < 0 && currentHistogram > 0) {\n      scoreAdjustment -= 1; // 매수 쪽으로\n    } else if (prevHistogram > 0 && currentHistogram < 0) {\n      scoreAdjustment += 1; // 매도 쪽으로\n    }\n\n    // Histogram의 연속적인 증감 추세 분석\n    let increasingCount = 0;\n    let decreasingCount = 0;\n    for (let i = lastIndex - period + 1; i < lastIndex; i++) {\n      if (macdData[i + 1].Histogram > macdData[i].Histogram) {\n        increasingCount++;\n      } else if (macdData[i + 1].Histogram < macdData[i].Histogram) {\n        decreasingCount++;\n      }\n    }\n    if (increasingCount >= 3) {\n      scoreAdjustment -= 1; // 매수 쪽으로\n    } else if (decreasingCount >= 3) {\n      scoreAdjustment += 1; // 매도 쪽으로\n    }\n\n    // 기본 점수는 5점\n    let score = 5 + scoreAdjustment;\n\n    // 점수 범위 조정\n    score = Math.max(1, Math.min(10, score));\n    return score;\n  };\n  useEffect(() => {\n    if (macdData.length > 0) {\n      const score = calculateHistogramScore(macdData);\n      if (score !== null && onScoreCalculated) {\n        onScoreCalculated(score);\n      }\n    }\n  }, [macdData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FetchMACDData, {\n      stockCode: stockCode,\n      onMACDFetch: setMACDData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(MACDCalculations3, \"EYz31eZL7osLf17TcCvP4CHG3+k=\");\n_c = MACDCalculations3;\nexport default MACDCalculations3;\nvar _c;\n$RefreshReg$(_c, \"MACDCalculations3\");","map":{"version":3,"names":["React","useState","useEffect","FetchMACDData","jsxDEV","_jsxDEV","MACDCalculations3","stockCode","onScoreCalculated","_s","macdData","setMACDData","calculateHistogramScore","period","length","lastIndex","currentHistogram","Histogram","prevHistogram","scoreAdjustment","increasingCount","decreasingCount","i","score","Math","max","min","children","onMACDFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/MACDCalculations3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMACDData from '../ComponentsFetch/FetchMACDData';\r\n\r\nfunction MACDCalculations3({ stockCode, onScoreCalculated }) {\r\n    const [macdData, setMACDData] = useState([]);\r\n\r\n    const calculateHistogramScore = (macdData, period = 5) => {\r\n        if (macdData.length < period + 1) {\r\n            return null;\r\n        }\r\n\r\n        const lastIndex = macdData.length - 1;\r\n        const currentHistogram = macdData[lastIndex].Histogram;\r\n        const prevHistogram = macdData[lastIndex - 1].Histogram;\r\n\r\n        let scoreAdjustment = 0;\r\n\r\n        // Histogram이 0선을 상향 또는 하향 돌파할 때\r\n        if (prevHistogram < 0 && currentHistogram > 0) {\r\n            scoreAdjustment -= 1; // 매수 쪽으로\r\n        } else if (prevHistogram > 0 && currentHistogram < 0) {\r\n            scoreAdjustment += 1; // 매도 쪽으로\r\n        }\r\n\r\n        // Histogram의 연속적인 증감 추세 분석\r\n        let increasingCount = 0;\r\n        let decreasingCount = 0;\r\n\r\n        for (let i = lastIndex - period + 1; i < lastIndex; i++) {\r\n            if (macdData[i + 1].Histogram > macdData[i].Histogram) {\r\n                increasingCount++;\r\n            } else if (macdData[i + 1].Histogram < macdData[i].Histogram) {\r\n                decreasingCount++;\r\n            }\r\n        }\r\n\r\n        if (increasingCount >= 3) {\r\n            scoreAdjustment -= 1; // 매수 쪽으로\r\n        } else if (decreasingCount >= 3) {\r\n            scoreAdjustment += 1; // 매도 쪽으로\r\n        }\r\n\r\n        // 기본 점수는 5점\r\n        let score = 5 + scoreAdjustment;\r\n\r\n        // 점수 범위 조정\r\n        score = Math.max(1, Math.min(10, score));\r\n\r\n        return score;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (macdData.length > 0) {\r\n            const score = calculateHistogramScore(macdData);\r\n            if (score !== null && onScoreCalculated) {\r\n                onScoreCalculated(score);\r\n            }\r\n        }\r\n    }, [macdData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMACDData stockCode={stockCode} onMACDFetch={setMACDData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MACDCalculations3;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,iBAAiBA,CAAC;EAAEC,SAAS;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,uBAAuB,GAAGA,CAACF,QAAQ,EAAEG,MAAM,GAAG,CAAC,KAAK;IACtD,IAAIH,QAAQ,CAACI,MAAM,GAAGD,MAAM,GAAG,CAAC,EAAE;MAC9B,OAAO,IAAI;IACf;IAEA,MAAME,SAAS,GAAGL,QAAQ,CAACI,MAAM,GAAG,CAAC;IACrC,MAAME,gBAAgB,GAAGN,QAAQ,CAACK,SAAS,CAAC,CAACE,SAAS;IACtD,MAAMC,aAAa,GAAGR,QAAQ,CAACK,SAAS,GAAG,CAAC,CAAC,CAACE,SAAS;IAEvD,IAAIE,eAAe,GAAG,CAAC;;IAEvB;IACA,IAAID,aAAa,GAAG,CAAC,IAAIF,gBAAgB,GAAG,CAAC,EAAE;MAC3CG,eAAe,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAID,aAAa,GAAG,CAAC,IAAIF,gBAAgB,GAAG,CAAC,EAAE;MAClDG,eAAe,IAAI,CAAC,CAAC,CAAC;IAC1B;;IAEA;IACA,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,eAAe,GAAG,CAAC;IAEvB,KAAK,IAAIC,CAAC,GAAGP,SAAS,GAAGF,MAAM,GAAG,CAAC,EAAES,CAAC,GAAGP,SAAS,EAAEO,CAAC,EAAE,EAAE;MACrD,IAAIZ,QAAQ,CAACY,CAAC,GAAG,CAAC,CAAC,CAACL,SAAS,GAAGP,QAAQ,CAACY,CAAC,CAAC,CAACL,SAAS,EAAE;QACnDG,eAAe,EAAE;MACrB,CAAC,MAAM,IAAIV,QAAQ,CAACY,CAAC,GAAG,CAAC,CAAC,CAACL,SAAS,GAAGP,QAAQ,CAACY,CAAC,CAAC,CAACL,SAAS,EAAE;QAC1DI,eAAe,EAAE;MACrB;IACJ;IAEA,IAAID,eAAe,IAAI,CAAC,EAAE;MACtBD,eAAe,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAIE,eAAe,IAAI,CAAC,EAAE;MAC7BF,eAAe,IAAI,CAAC,CAAC,CAAC;IAC1B;;IAEA;IACA,IAAII,KAAK,GAAG,CAAC,GAAGJ,eAAe;;IAE/B;IACAI,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEH,KAAK,CAAC,CAAC;IAExC,OAAOA,KAAK;EAChB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZ,IAAIQ,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMS,KAAK,GAAGX,uBAAuB,CAACF,QAAQ,CAAC;MAC/C,IAAIa,KAAK,KAAK,IAAI,IAAIf,iBAAiB,EAAE;QACrCA,iBAAiB,CAACe,KAAK,CAAC;MAC5B;IACJ;EACJ,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,oBACIL,OAAA;IAAAsB,QAAA,eACItB,OAAA,CAACF,aAAa;MAACI,SAAS,EAAEA,SAAU;MAACqB,WAAW,EAAEjB;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd;AAACvB,EAAA,CA9DQH,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AAgE1B,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}