{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\KeltnelAnalysis2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KeltnerAnalysis2({\n  stockCode\n}) {\n  _s();\n  const [keltnerData, setKeltnerData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeTrendPullback = (keltnerData, threshold = 0.01) => {\n    if (keltnerData.length < 1) {\n      return '데이터가 충분하지 않습니다.';\n    }\n    const lastIndex = keltnerData.length - 1;\n    const currentData = keltnerData[lastIndex];\n    const currentClose = currentData.close;\n    const middleLine = currentData.Middle_Line;\n    const upperBand = currentData.Upper_Band;\n    const lowerBand = currentData.Lower_Band;\n    let result = '<strong>Trend Pullback 전략 분석</strong><br/><br/>';\n\n    // 가격이 Middle Line 근처에 있는지 확인 (오차 범위 내)\n    const isNearMiddleLine = Math.abs(currentClose - middleLine) / middleLine < threshold;\n\n    // 현재 추세 판단\n    if (currentClose > middleLine) {\n      result += '현재 가격이 Middle Line 위에 있어 <strong>상승 추세</strong>입니다.<br/>';\n      if (isNearMiddleLine) {\n        result += '→ 가격이 Middle Line 부근에 있으므로 <strong>매수 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      } else if (currentClose >= upperBand) {\n        result += '→ 가격이 Upper Band 부근에 있으므로 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      }\n    } else if (currentClose < middleLine) {\n      result += '현재 가격이 Middle Line 아래에 있어 <strong>하락 추세</strong>입니다.<br/>';\n      if (isNearMiddleLine) {\n        result += '→ 가격이 Middle Line 부근에 있으므로 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      } else if (currentClose <= lowerBand) {\n        result += '→ 가격이 Lower Band 부근에 있으므로 <strong>매수 기회</strong>를 고려해볼 수 있습니다.<br/>';\n      }\n    } else {\n      result += '현재 가격이 Middle Line과 동일하여 추세 판단이 어렵습니다.<br/>';\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (keltnerData.length > 0) {\n      const result = analyzeTrendPullback(keltnerData);\n      setAnalysisResult(result);\n    }\n  }, [keltnerData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchKeltnerData, {\n      stockCode: stockCode,\n      onKelFetch: setKeltnerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Keltner Channel Trend Pullback \\uC804\\uB7B5 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(KeltnerAnalysis2, \"aZZIuFHnzaw3LQSAI9Abkvj+T8Y=\");\n_c = KeltnerAnalysis2;\nexport default KeltnerAnalysis2;\nvar _c;\n$RefreshReg$(_c, \"KeltnerAnalysis2\");","map":{"version":3,"names":["React","useState","useEffect","FetchKeltnerData","jsxDEV","_jsxDEV","KeltnerAnalysis2","stockCode","_s","keltnerData","setKeltnerData","analysisResult","setAnalysisResult","analyzeTrendPullback","threshold","length","lastIndex","currentData","currentClose","close","middleLine","Middle_Line","upperBand","Upper_Band","lowerBand","Lower_Band","result","isNearMiddleLine","Math","abs","children","onKelFetch","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/KeltnelAnalysis2.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport FetchKeltnerData from '../ComponentsFetch/FetchKeltnerData';\r\n\r\nfunction KeltnerAnalysis2({ stockCode }) {\r\n    const [keltnerData, setKeltnerData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeTrendPullback = (keltnerData, threshold = 0.01) => {\r\n        if (keltnerData.length < 1) {\r\n            return '데이터가 충분하지 않습니다.';\r\n        }\r\n\r\n        const lastIndex = keltnerData.length - 1;\r\n        const currentData = keltnerData[lastIndex];\r\n\r\n        const currentClose = currentData.close;\r\n        const middleLine = currentData.Middle_Line;\r\n        const upperBand = currentData.Upper_Band;\r\n        const lowerBand = currentData.Lower_Band;\r\n\r\n        let result = '<strong>Trend Pullback 전략 분석</strong><br/><br/>';\r\n\r\n        // 가격이 Middle Line 근처에 있는지 확인 (오차 범위 내)\r\n        const isNearMiddleLine = Math.abs(currentClose - middleLine) / middleLine < threshold;\r\n\r\n        // 현재 추세 판단\r\n        if (currentClose > middleLine) {\r\n            result += '현재 가격이 Middle Line 위에 있어 <strong>상승 추세</strong>입니다.<br/>';\r\n\r\n            if (isNearMiddleLine) {\r\n                result += '→ 가격이 Middle Line 부근에 있으므로 <strong>매수 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            } else if (currentClose >= upperBand) {\r\n                result += '→ 가격이 Upper Band 부근에 있으므로 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            }\r\n        } else if (currentClose < middleLine) {\r\n            result += '현재 가격이 Middle Line 아래에 있어 <strong>하락 추세</strong>입니다.<br/>';\r\n\r\n            if (isNearMiddleLine) {\r\n                result += '→ 가격이 Middle Line 부근에 있으므로 <strong>매도 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            } else if (currentClose <= lowerBand) {\r\n                result += '→ 가격이 Lower Band 부근에 있으므로 <strong>매수 기회</strong>를 고려해볼 수 있습니다.<br/>';\r\n            }\r\n        } else {\r\n            result += '현재 가격이 Middle Line과 동일하여 추세 판단이 어렵습니다.<br/>';\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (keltnerData.length > 0) {\r\n            const result = analyzeTrendPullback(keltnerData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [keltnerData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchKeltnerData stockCode={stockCode} onKelFetch={setKeltnerData} />\r\n            <h4>Keltner Channel Trend Pullback 전략 분석</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeltnerAnalysis2;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,gBAAgBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,oBAAoB,GAAGA,CAACJ,WAAW,EAAEK,SAAS,GAAG,IAAI,KAAK;IAC5D,IAAIL,WAAW,CAACM,MAAM,GAAG,CAAC,EAAE;MACxB,OAAO,iBAAiB;IAC5B;IAEA,MAAMC,SAAS,GAAGP,WAAW,CAACM,MAAM,GAAG,CAAC;IACxC,MAAME,WAAW,GAAGR,WAAW,CAACO,SAAS,CAAC;IAE1C,MAAME,YAAY,GAAGD,WAAW,CAACE,KAAK;IACtC,MAAMC,UAAU,GAAGH,WAAW,CAACI,WAAW;IAC1C,MAAMC,SAAS,GAAGL,WAAW,CAACM,UAAU;IACxC,MAAMC,SAAS,GAAGP,WAAW,CAACQ,UAAU;IAExC,IAAIC,MAAM,GAAG,iDAAiD;;IAE9D;IACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAACX,YAAY,GAAGE,UAAU,CAAC,GAAGA,UAAU,GAAGN,SAAS;;IAErF;IACA,IAAII,YAAY,GAAGE,UAAU,EAAE;MAC3BM,MAAM,IAAI,0DAA0D;MAEpE,IAAIC,gBAAgB,EAAE;QAClBD,MAAM,IAAI,sEAAsE;MACpF,CAAC,MAAM,IAAIR,YAAY,IAAII,SAAS,EAAE;QAClCI,MAAM,IAAI,qEAAqE;MACnF;IACJ,CAAC,MAAM,IAAIR,YAAY,GAAGE,UAAU,EAAE;MAClCM,MAAM,IAAI,2DAA2D;MAErE,IAAIC,gBAAgB,EAAE;QAClBD,MAAM,IAAI,sEAAsE;MACpF,CAAC,MAAM,IAAIR,YAAY,IAAIM,SAAS,EAAE;QAClCE,MAAM,IAAI,qEAAqE;MACnF;IACJ,CAAC,MAAM;MACHA,MAAM,IAAI,6CAA6C;IAC3D;IAEA,OAAOA,MAAM;EACjB,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAW,CAACM,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMW,MAAM,GAAGb,oBAAoB,CAACJ,WAAW,CAAC;MAChDG,iBAAiB,CAACc,MAAM,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACjB,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAAyB,QAAA,gBACIzB,OAAA,CAACF,gBAAgB;MAACI,SAAS,EAAEA,SAAU;MAACwB,UAAU,EAAErB;IAAe;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE9B,OAAA;MAAAyB,QAAA,EAAI;IAAoC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7C9B,OAAA;MAAG+B,uBAAuB,EAAE;QAAEC,MAAM,EAAE1B;MAAe;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAAC3B,EAAA,CA5DQF,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AA8DzB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}