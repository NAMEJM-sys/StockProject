{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsChart\\\\ChartOfIchimoku.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport HighchartsStock from \"highcharts/modules/stock\";\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\nimport FetchIchimokuData from \"../ComponentsFetch/FetchIchimokuData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsMore(Highcharts);\nHighchartsStock(Highcharts);\nfunction ChartOfIchimoku({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [ichimokuData, setIchimokuData] = useState([]);\n  const [options, setOptions] = useState({});\n  useEffect(() => {\n    if (stockData.length > 0 && ichimokuData.length > 0 && stockCode) {\n      const dataForChart = stockData.map(item => ({\n        date: new Date(item.date).getTime(),\n        close: item.close\n      })).sort((a, b) => new Date(a.date) - new Date(b.date));\n      const tenkan_sen = ichimokuData.map(item => [new Date(item.date).getTime(), item.Tenkan_sen]);\n      const kijun_sen = ichimokuData.map(item => [new Date(item.date).getTime(), item.Kijun_sen]);\n      const senkou_Span_A = ichimokuData.map(item => [new Date(item.date).getTime(), item.Senkou_Span_A]);\n      const senkou_Span_B = ichimokuData.map(item => [new Date(item.date).getTime(), item.Senkou_Span_B]);\n      const chikou_Span = ichimokuData.map(item => [new Date(item.date).getTime(), item.Chikou_Span]);\n      setOptions({\n        chart: {\n          type: 'line',\n          height: 400\n        },\n        title: {\n          text: `Ichimoku Cloud for ${stockCode}`\n        },\n        xAxis: {\n          type: 'datetime',\n          labels: {\n            format: '{value:%Y-%m-%d}'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Price'\n          }\n        },\n        series: [{\n          name: 'Close Price',\n          data: dataForChart.map(item => [item.date, item.close]),\n          color: '#0071e3',\n          marker: {\n            enabled: false\n          },\n          lineWidth: 1\n        }, {\n          name: 'Tenkan-sen (전환선)',\n          data: tenkan_sen,\n          color: '#FF5733',\n          marker: {\n            enabled: false\n          },\n          dashStyle: 'Solid',\n          visible: false\n        }, {\n          name: 'Kijun-sen (기준선)',\n          data: kijun_sen,\n          color: '#33FF57',\n          marker: {\n            enabled: false\n          },\n          dashStyle: 'Solid'\n        }, {\n          name: 'Senkou Span A (선행스팬 A)',\n          data: senkou_Span_A,\n          color: '#FFC300',\n          marker: {\n            enabled: false\n          },\n          dashStyle: 'ShortDash'\n        }, {\n          name: 'Senkou Span B (선행스팬 B)',\n          data: senkou_Span_B,\n          color: '#DAF7A6',\n          marker: {\n            enabled: false\n          },\n          dashStyle: 'ShortDash'\n        }, {\n          name: 'Chikou Span (후행스팬)',\n          data: chikou_Span,\n          color: '#C70039',\n          marker: {\n            enabled: false\n          },\n          dashStyle: 'Solid'\n        }, {\n          name: 'Ichimoku Cloud',\n          type: 'arearange',\n          data: senkou_Span_A.map((item, index) => [item[0], item[1], senkou_Span_B[index][1]]),\n          color: 'rgba(100, 100, 255, 0.2)',\n          lineWidth: 0,\n          enableMouseTracking: false\n        }],\n        legend: {\n          enabled: true,\n          // 범례 활성화\n          align: 'center',\n          verticalAlign: 'bottom',\n          layout: 'horizontal'\n        },\n        credits: {\n          enabled: false\n        },\n        tooltip: {\n          shared: true,\n          crosshairs: true\n        },\n        navigator: {\n          enabled: true\n        },\n        scrollbar: {\n          enabled: true\n        },\n        rangeSelector: {\n          enabled: false\n        }\n      });\n    }\n  }, [stockData, ichimokuData, stockCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchIchimokuData, {\n      stockCode: stockCode,\n      onIchimokuFetch: setIchimokuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), options.series && options.series.length > 0 && /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartOfIchimoku, \"Q/sTwys1ZgTIFCruYa6nZQAm188=\");\n_c = ChartOfIchimoku;\nexport default ChartOfIchimoku;\nvar _c;\n$RefreshReg$(_c, \"ChartOfIchimoku\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsReact","HighchartsMore","HighchartsStock","FetchStockDataForCode","FetchIchimokuData","jsxDEV","_jsxDEV","ChartOfIchimoku","stockCode","_s","stockData","setStockData","ichimokuData","setIchimokuData","options","setOptions","length","dataForChart","map","item","date","Date","getTime","close","sort","a","b","tenkan_sen","Tenkan_sen","kijun_sen","Kijun_sen","senkou_Span_A","Senkou_Span_A","senkou_Span_B","Senkou_Span_B","chikou_Span","Chikou_Span","chart","type","height","title","text","xAxis","labels","format","yAxis","series","name","data","color","marker","enabled","lineWidth","dashStyle","visible","index","enableMouseTracking","legend","align","verticalAlign","layout","credits","tooltip","shared","crosshairs","navigator","scrollbar","rangeSelector","children","onSDFCFetch","fileName","_jsxFileName","lineNumber","columnNumber","onIchimokuFetch","highcharts","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsChart/ChartOfIchimoku.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport HighchartsMore from \"highcharts/highcharts-more\";\r\nimport HighchartsStock from \"highcharts/modules/stock\";\r\nimport FetchStockDataForCode from \"../ComponentsFetch/FetchStockDataForCode\";\r\nimport FetchIchimokuData from \"../ComponentsFetch/FetchIchimokuData\";\r\n\r\nHighchartsMore(Highcharts);\r\nHighchartsStock(Highcharts);\r\n\r\nfunction ChartOfIchimoku({ stockCode }) {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [ichimokuData, setIchimokuData] = useState([]);\r\n    const [options, setOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && ichimokuData.length > 0 && stockCode) {\r\n            const dataForChart = stockData.map(item => ({\r\n                date: new Date(item.date).getTime(),\r\n                close: item.close,\r\n            })).sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n            const tenkan_sen = ichimokuData.map(item => [new Date(item.date).getTime(), item.Tenkan_sen]);\r\n            const kijun_sen = ichimokuData.map(item => [new Date(item.date).getTime(), item.Kijun_sen]);\r\n            const senkou_Span_A = ichimokuData.map(item => [new Date(item.date).getTime(), item.Senkou_Span_A]);\r\n            const senkou_Span_B = ichimokuData.map(item => [new Date(item.date).getTime(), item.Senkou_Span_B]);\r\n            const chikou_Span = ichimokuData.map(item => [new Date(item.date).getTime(), item.Chikou_Span]);\r\n\r\n            setOptions({\r\n                chart: {\r\n                    type: 'line',\r\n                    height: 400,\r\n                },\r\n                title: {\r\n                    text: `Ichimoku Cloud for ${stockCode}`,\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    labels: {\r\n                        format: '{value:%Y-%m-%d}',\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Price',\r\n                    },\r\n                },\r\n                series: [\r\n                    {\r\n                        name: 'Close Price',\r\n                        data: dataForChart.map(item => [item.date, item.close]),\r\n                        color: '#0071e3',\r\n                        marker: {\r\n                            enabled: false,\r\n                        },\r\n                        lineWidth: 1,\r\n                    },\r\n                    {\r\n                        name: 'Tenkan-sen (전환선)',\r\n                        data: tenkan_sen,\r\n                        color: '#FF5733',\r\n                        marker: {\r\n                            enabled: false,\r\n                        },\r\n                        dashStyle: 'Solid',\r\n                        visible: false,\r\n                    },\r\n                    {\r\n                        name: 'Kijun-sen (기준선)',\r\n                        data: kijun_sen,\r\n                        color: '#33FF57',\r\n                        marker: {\r\n                            enabled: false,\r\n                        },\r\n                        dashStyle: 'Solid',\r\n                    },\r\n                    {\r\n                        name: 'Senkou Span A (선행스팬 A)',\r\n                        data: senkou_Span_A,\r\n                        color: '#FFC300',\r\n                        marker: {\r\n                            enabled: false,\r\n                        },\r\n                        dashStyle: 'ShortDash',\r\n                    },\r\n                    {\r\n                        name: 'Senkou Span B (선행스팬 B)',\r\n                        data: senkou_Span_B,\r\n                        color: '#DAF7A6',\r\n                        marker: {\r\n                            enabled: false,\r\n                        },\r\n                        dashStyle: 'ShortDash',\r\n                    },\r\n                    {\r\n                        name: 'Chikou Span (후행스팬)',\r\n                        data: chikou_Span,\r\n                        color: '#C70039',\r\n                        marker: {\r\n                            enabled: false,\r\n                        },\r\n                        dashStyle: 'Solid',\r\n                    },\r\n                    {\r\n                        name: 'Ichimoku Cloud',\r\n                        type: 'arearange',\r\n                        data: senkou_Span_A.map((item, index) => [item[0], item[1], senkou_Span_B[index][1]]),\r\n                        color: 'rgba(100, 100, 255, 0.2)',\r\n                        lineWidth: 0,\r\n                        enableMouseTracking: false,\r\n                    },\r\n                ],\r\n                legend: {\r\n                    enabled: true,  // 범례 활성화\r\n                    align: 'center',\r\n                    verticalAlign: 'bottom',\r\n                    layout: 'horizontal',\r\n                },\r\n                credits: {\r\n                    enabled: false,\r\n                },\r\n                tooltip: {\r\n                    shared: true,\r\n                    crosshairs: true,\r\n                },\r\n                navigator: {\r\n                    enabled: true,\r\n                },\r\n                scrollbar: {\r\n                    enabled: true,\r\n                },\r\n                rangeSelector: {\r\n                    enabled: false,\r\n                },\r\n            });\r\n        }\r\n    }, [stockData, ichimokuData, stockCode]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <FetchIchimokuData stockCode={stockCode} onIchimokuFetch={setIchimokuData} />\r\n            {options.series && options.series.length > 0 && (\r\n                <HighchartsReact highcharts={Highcharts} options={options} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartOfIchimoku;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}