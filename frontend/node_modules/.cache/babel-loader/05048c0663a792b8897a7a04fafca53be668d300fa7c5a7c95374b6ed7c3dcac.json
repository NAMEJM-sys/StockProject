{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsChart\\\\ChartOfIchimoku.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport HighchartsStock from 'highcharts/modules/stock';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport FetchIchimokuData from '../ComponentsFetch/FetchIchimokuData';\nimport '../styles/ChangeChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHighchartsMore(Highcharts);\nHighchartsStock(Highcharts);\nfunction ChartWithCheckboxes({\n  stockCode\n}) {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [ichimokuData, setIchimokuData] = useState([]);\n  const [options, setOptions] = useState({});\n  const [chartType, setChartType] = useState('line'); // 차트 유형 상태 추가\n  const [enabledSeries, setEnabledSeries] = useState({\n    tenkan: true,\n    kijun: true,\n    spanA: true,\n    spanB: true,\n    chikou: true,\n    ichimokuPositive: true,\n    ichimokuNegative: true\n  });\n  useEffect(() => {\n    if (stockData.length > 0 && ichimokuData.length > 0 && stockCode) {\n      const highValues = stockData.map(item => item.high);\n      const lowValues = stockData.map(item => item.low);\n      const maxHigh = Math.max(...highValues);\n      const minLow = Math.min(...lowValues);\n      const formattedClosePriceData = stockData.map(item => ({\n        date: new Date(item.date).getTime(),\n        open: item.open,\n        high: item.high,\n        low: item.low,\n        close: item.close\n      }));\n      const formattedIchimokuData = ichimokuData.map(item => {\n        const time = new Date(item.date).getTime();\n        return {\n          time,\n          Tenkan_sen: item.Tenkan_sen,\n          Kijun_sen: item.Kijun_sen,\n          Senkou_Span_A: item.Senkou_Span_A,\n          Senkou_Span_B: item.Senkou_Span_B,\n          Chikou_Span: item.Chikou_Span,\n          CloudAreaPositive: item.Senkou_Span_A > item.Senkou_Span_B ? {\n            low: item.Senkou_Span_B,\n            high: item.Senkou_Span_A\n          } : null,\n          CloudAreaNegative: item.Senkou_Span_A <= item.Senkou_Span_B ? {\n            low: item.Senkou_Span_A,\n            high: item.Senkou_Span_B\n          } : null\n        };\n      });\n      const formattedVolumesData = stockData.map(item => ({\n        x: new Date(item.date).getTime(),\n        y: item.volume\n      }));\n      setOptions({\n        chart: {\n          type: chartType === 'line' ? 'line' : 'candlestick',\n          zoomType: 'x',\n          spacing: [10, -60, 10, 10],\n          height: 550,\n          width: 680\n        },\n        title: {\n          text: ''\n        },\n        xAxis: {\n          type: 'datetime',\n          labels: {\n            format: '{value:%m-%d}'\n          }\n        },\n        yAxis: [{\n          title: {\n            text: 'Close Price',\n            rotation: 0,\n            style: {\n              fontSize: '12px'\n            }\n          },\n          height: '75%',\n          opposite: true,\n          min: minLow,\n          max: maxHigh\n        }, {\n          title: {\n            text: 'Volume',\n            rotation: 0,\n            style: {\n              fontSize: '12px'\n            }\n          },\n          top: '77%',\n          height: '23%',\n          opposite: true,\n          labels: {\n            enabled: false\n          }\n        }],\n        series: [{\n          name: 'Close Price',\n          type: chartType === 'line' ? 'line' : 'candlestick',\n          data: chartType === 'line' ? formattedClosePriceData.map(item => [item.date, item.close]) : formattedClosePriceData.map(item => [item.date, item.open, item.high, item.low, item.close]),\n          yAxis: 0,\n          color: chartType === 'line' ? '#0071e3' : '#d32f2f',\n          visible: true\n        }, {\n          name: 'Tenkan-sen',\n          data: formattedIchimokuData.map(item => [item.time, item.Tenkan_sen]),\n          color: '#FF5733',\n          yAxis: 0,\n          visible: enabledSeries.tenkan\n        }, {\n          name: 'Kijun-sen',\n          data: formattedIchimokuData.map(item => [item.time, item.Kijun_sen]),\n          color: '#FFC300',\n          yAxis: 0,\n          visible: enabledSeries.kijun\n        }, {\n          name: 'Senkou Span A',\n          data: formattedIchimokuData.map(item => [item.time, item.Senkou_Span_A]),\n          yAxis: 0,\n          color: '#33FF57',\n          visible: enabledSeries.spanA\n        }, {\n          name: 'Senkou Span B',\n          data: formattedIchimokuData.map(item => [item.time, item.Senkou_Span_B]),\n          yAxis: 0,\n          color: '#C70039',\n          visible: enabledSeries.spanB\n        }, {\n          name: 'Chikou Span',\n          data: formattedIchimokuData.map(item => [item.time, item.Chikou_Span]),\n          yAxis: 0,\n          color: '#8B4513',\n          visible: enabledSeries.chikou\n        }, {\n          type: 'arearange',\n          name: 'Ichimoku Cloud Positive',\n          data: formattedIchimokuData.filter(item => item.CloudAreaPositive).map(item => ({\n            x: item.time,\n            low: item.CloudAreaPositive.low,\n            high: item.CloudAreaPositive.high\n          })),\n          color: 'rgba(50, 205, 50, 0.2)',\n          visible: enabledSeries.ichimokuPositive\n        }, {\n          type: 'arearange',\n          name: 'Ichimoku Cloud Negative',\n          data: formattedIchimokuData.filter(item => item.CloudAreaNegative).map(item => ({\n            x: item.time,\n            low: item.CloudAreaNegative.low,\n            high: item.CloudAreaNegative.high\n          })),\n          color: 'rgba(255, 99, 132, 0.3)',\n          visible: enabledSeries.ichimokuNegative\n        }, {\n          name: 'Volumes',\n          data: formattedVolumesData,\n          type: 'column',\n          yAxis: 1,\n          color: '#A9A9A9'\n        }],\n        legend: {\n          enabled: false\n        },\n        credits: {\n          enabled: false\n        },\n        scrollbar: {\n          enabled: true\n        },\n        rangeSelector: {\n          enabled: true,\n          selected: 5\n        }\n      });\n    }\n  }, [stockData, ichimokuData, stockCode, chartType, enabledSeries]);\n\n  // 체크박스를 통한 시리즈 상태 제어 함수\n  const toggleSeriesVisibility = key => {\n    setEnabledSeries(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.tenkan,\n          onChange: () => toggleSeriesVisibility('tenkan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), \"Tenkan-sen\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.kijun,\n          onChange: () => toggleSeriesVisibility('kijun')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), \"Kijun-sen\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.spanA,\n          onChange: () => toggleSeriesVisibility('spanA')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), \"Senkou Span A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.spanB,\n          onChange: () => toggleSeriesVisibility('spanB')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), \"Senkou Span B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.chikou,\n          onChange: () => toggleSeriesVisibility('chikou')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), \"Chikou Span\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.ichimokuPositive,\n          onChange: () => toggleSeriesVisibility('ichimokuPositive')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), \"Ichimoku Cloud Positive\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: enabledSeries.ichimokuNegative,\n          onChange: () => toggleSeriesVisibility('ichimokuNegative')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), \"Ichimoku Cloud Negative\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `custom-button-line ${chartType === 'line' ? 'active' : ''}`,\n        onClick: () => setChartType('line'),\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `custom-button-candle ${chartType === 'candlestick' ? 'active' : ''}`,\n        onClick: () => setChartType('candlestick'),\n        children: \"Candle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchIchimokuData, {\n      stockCode: stockCode,\n      onIchimokuFetch: setIchimokuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartWithCheckboxes, \"Ub1+vyV95g+lt6qq+9xbya4gkMU=\");\n_c = ChartWithCheckboxes;\nexport default ChartWithCheckboxes;\nvar _c;\n$RefreshReg$(_c, \"ChartWithCheckboxes\");","map":{"version":3,"names":["React","useState","useEffect","Highcharts","HighchartsReact","HighchartsMore","HighchartsStock","FetchStockDataForCode","FetchIchimokuData","jsxDEV","_jsxDEV","ChartWithCheckboxes","stockCode","_s","stockData","setStockData","ichimokuData","setIchimokuData","options","setOptions","chartType","setChartType","enabledSeries","setEnabledSeries","tenkan","kijun","spanA","spanB","chikou","ichimokuPositive","ichimokuNegative","length","highValues","map","item","high","lowValues","low","maxHigh","Math","max","minLow","min","formattedClosePriceData","date","Date","getTime","open","close","formattedIchimokuData","time","Tenkan_sen","Kijun_sen","Senkou_Span_A","Senkou_Span_B","Chikou_Span","CloudAreaPositive","CloudAreaNegative","formattedVolumesData","x","y","volume","chart","type","zoomType","spacing","height","width","title","text","xAxis","labels","format","yAxis","rotation","style","fontSize","opposite","top","enabled","series","name","data","color","visible","filter","legend","credits","scrollbar","rangeSelector","selected","toggleSeriesVisibility","key","prev","children","className","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","highcharts","onSDFCFetch","onIchimokuFetch","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsChart/ChartOfIchimoku.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport HighchartsMore from 'highcharts/highcharts-more';\r\nimport HighchartsStock from 'highcharts/modules/stock';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\nimport FetchIchimokuData from '../ComponentsFetch/FetchIchimokuData';\r\nimport '../styles/ChangeChart.css';\r\n\r\nHighchartsMore(Highcharts);\r\nHighchartsStock(Highcharts);\r\n\r\nfunction ChartWithCheckboxes({ stockCode }) {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [ichimokuData, setIchimokuData] = useState([]);\r\n    const [options, setOptions] = useState({});\r\n    const [chartType, setChartType] = useState('line'); // 차트 유형 상태 추가\r\n    const [enabledSeries, setEnabledSeries] = useState({\r\n        tenkan: true,\r\n        kijun: true,\r\n        spanA: true,\r\n        spanB: true,\r\n        chikou: true,\r\n        ichimokuPositive: true,\r\n        ichimokuNegative: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && ichimokuData.length > 0 && stockCode) {\r\n            const highValues = stockData.map(item => item.high);\r\n            const lowValues = stockData.map(item => item.low);\r\n            const maxHigh = Math.max(...highValues);\r\n            const minLow = Math.min(...lowValues);\r\n\r\n            const formattedClosePriceData = stockData.map(item => ({\r\n                date: new Date(item.date).getTime(),\r\n                open: item.open,\r\n                high: item.high,\r\n                low: item.low,\r\n                close: item.close\r\n            }));\r\n\r\n            const formattedIchimokuData = ichimokuData.map(item => {\r\n                const time = new Date(item.date).getTime();\r\n                return {\r\n                    time,\r\n                    Tenkan_sen: item.Tenkan_sen,\r\n                    Kijun_sen: item.Kijun_sen,\r\n                    Senkou_Span_A: item.Senkou_Span_A,\r\n                    Senkou_Span_B: item.Senkou_Span_B,\r\n                    Chikou_Span: item.Chikou_Span,\r\n                    CloudAreaPositive: item.Senkou_Span_A > item.Senkou_Span_B ? {\r\n                        low: item.Senkou_Span_B,\r\n                        high: item.Senkou_Span_A\r\n                    } : null,\r\n                    CloudAreaNegative: item.Senkou_Span_A <= item.Senkou_Span_B ? {\r\n                        low: item.Senkou_Span_A,\r\n                        high: item.Senkou_Span_B\r\n                    } : null,\r\n                };\r\n            });\r\n\r\n            const formattedVolumesData = stockData.map(item => ({\r\n                x: new Date(item.date).getTime(),\r\n                y: item.volume,\r\n            }));\r\n\r\n            setOptions({\r\n                chart: {\r\n                    type: chartType === 'line' ? 'line' : 'candlestick',\r\n                    zoomType: 'x',\r\n                    spacing: [10, -60, 10, 10],\r\n                    height: 550,\r\n                    width: 680,\r\n                },\r\n                title: { text: '' },\r\n                xAxis: { type: 'datetime', labels: { format: '{value:%m-%d}' } },\r\n                yAxis: [\r\n                    {\r\n                        title: { text: 'Close Price', rotation: 0, style: { fontSize: '12px' } },\r\n                        height: '75%',\r\n                        opposite: true,\r\n                        min: minLow,\r\n                        max: maxHigh,\r\n                    },\r\n                    {\r\n                        title: { text: 'Volume', rotation: 0, style: { fontSize: '12px' } },\r\n                        top: '77%',\r\n                        height: '23%',\r\n                        opposite: true,\r\n                        labels: { enabled: false },\r\n                    },\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: 'Close Price',\r\n                        type: chartType === 'line' ? 'line' : 'candlestick',\r\n                        data: chartType === 'line'\r\n                            ? formattedClosePriceData.map(item => [item.date, item.close])\r\n                            : formattedClosePriceData.map(item => [item.date, item.open, item.high, item.low, item.close]),\r\n                        yAxis: 0,\r\n                        color: chartType === 'line' ? '#0071e3' : '#d32f2f',\r\n                        visible: true,\r\n                    },\r\n                    {\r\n                        name: 'Tenkan-sen',\r\n                        data: formattedIchimokuData.map(item => [item.time, item.Tenkan_sen]),\r\n                        color: '#FF5733',\r\n                        yAxis: 0,\r\n                        visible: enabledSeries.tenkan,\r\n                    },\r\n                    {\r\n                        name: 'Kijun-sen',\r\n                        data: formattedIchimokuData.map(item => [item.time, item.Kijun_sen]),\r\n                        color: '#FFC300',\r\n                        yAxis: 0,\r\n                        visible: enabledSeries.kijun,\r\n                    },\r\n                    {\r\n                        name: 'Senkou Span A',\r\n                        data: formattedIchimokuData.map(item => [item.time, item.Senkou_Span_A]),\r\n                        yAxis: 0,\r\n                        color: '#33FF57',\r\n                        visible: enabledSeries.spanA,\r\n                    },\r\n                    {\r\n                        name: 'Senkou Span B',\r\n                        data: formattedIchimokuData.map(item => [item.time, item.Senkou_Span_B]),\r\n                        yAxis: 0,\r\n                        color: '#C70039',\r\n                        visible: enabledSeries.spanB,\r\n                    },\r\n                    {\r\n                        name: 'Chikou Span',\r\n                        data: formattedIchimokuData.map(item => [item.time, item.Chikou_Span]),\r\n                        yAxis: 0,\r\n                        color: '#8B4513',\r\n                        visible: enabledSeries.chikou,\r\n                    },\r\n                    {\r\n                        type: 'arearange',\r\n                        name: 'Ichimoku Cloud Positive',\r\n                        data: formattedIchimokuData.filter(item => item.CloudAreaPositive).map(item => ({\r\n                            x: item.time,\r\n                            low: item.CloudAreaPositive.low,\r\n                            high: item.CloudAreaPositive.high,\r\n                        })),\r\n                        color: 'rgba(50, 205, 50, 0.2)',\r\n                        visible: enabledSeries.ichimokuPositive,\r\n                    },\r\n                    {\r\n                        type: 'arearange',\r\n                        name: 'Ichimoku Cloud Negative',\r\n                        data: formattedIchimokuData.filter(item => item.CloudAreaNegative).map(item => ({\r\n                            x: item.time,\r\n                            low: item.CloudAreaNegative.low,\r\n                            high: item.CloudAreaNegative.high,\r\n                        })),\r\n                        color: 'rgba(255, 99, 132, 0.3)',\r\n                        visible: enabledSeries.ichimokuNegative,\r\n                    },\r\n                    {\r\n                        name: 'Volumes',\r\n                        data: formattedVolumesData,\r\n                        type: 'column',\r\n                        yAxis: 1,\r\n                        color: '#A9A9A9',\r\n                    },\r\n                ],\r\n                legend: { enabled: false },\r\n                credits: { enabled: false },\r\n                scrollbar: { enabled: true },\r\n                rangeSelector: { enabled: true, selected: 5 },\r\n            });\r\n        }\r\n    }, [stockData, ichimokuData, stockCode, chartType, enabledSeries]);\r\n\r\n    // 체크박스를 통한 시리즈 상태 제어 함수\r\n    const toggleSeriesVisibility = (key) => {\r\n        setEnabledSeries((prev) => ({\r\n            ...prev,\r\n            [key]: !prev[key]\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* 체크박스 메뉴 */}\r\n            <div className=\"checkbox-menu\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.tenkan}\r\n                        onChange={() => toggleSeriesVisibility('tenkan')}\r\n                    />\r\n                    Tenkan-sen\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.kijun}\r\n                        onChange={() => toggleSeriesVisibility('kijun')}\r\n                    />\r\n                    Kijun-sen\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.spanA}\r\n                        onChange={() => toggleSeriesVisibility('spanA')}\r\n                    />\r\n                    Senkou Span A\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.spanB}\r\n                        onChange={() => toggleSeriesVisibility('spanB')}\r\n                    />\r\n                    Senkou Span B\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.chikou}\r\n                        onChange={() => toggleSeriesVisibility('chikou')}\r\n                    />\r\n                    Chikou Span\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.ichimokuPositive}\r\n                        onChange={() => toggleSeriesVisibility('ichimokuPositive')}\r\n                    />\r\n                    Ichimoku Cloud Positive\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={enabledSeries.ichimokuNegative}\r\n                        onChange={() => toggleSeriesVisibility('ichimokuNegative')}\r\n                    />\r\n                    Ichimoku Cloud Negative\r\n                </label>\r\n            </div>\r\n\r\n            {/* Line/Candlestick Toggle */}\r\n            <div className=\"custom-buttons\">\r\n                <button\r\n                    className={`custom-button-line ${chartType === 'line' ? 'active' : ''}`}\r\n                    onClick={() => setChartType('line')}\r\n                >\r\n                    Line\r\n                </button>\r\n                <button\r\n                    className={`custom-button-candle ${chartType === 'candlestick' ? 'active' : ''}`}\r\n                    onClick={() => setChartType('candlestick')}\r\n                >\r\n                    Candle\r\n                </button>\r\n            </div>\r\n\r\n            {/* 차트 렌더링 */}\r\n            <HighchartsReact highcharts={Highcharts} options={options} />\r\n\r\n            {/* 데이터 Fetch */}\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <FetchIchimokuData stockCode={stockCode} onIchimokuFetch={setIchimokuData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartWithCheckboxes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}