{"ast":null,"code":"import combineMeans from \"./combine_means.js\";\n\n/**\n * When combining two lists of values for which one already knows the variances,\n * one does not have to necessary recompute the variance of the combined lists\n * in linear time. They can instead use this function to compute the combined\n * variance by providing the variance, mean & number of values of the first list\n * and the variance, mean & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} variance1 variance of the first list\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} variance2 variance of the second list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineVariances(14 / 3, 5, 3, 8 / 3, 4, 3); // => 47 / 12\n */\nfunction combineVariances(variance1, mean1, n1, variance2, mean2, n2) {\n  const newMean = combineMeans(mean1, n1, mean2, n2);\n  return (n1 * (variance1 + Math.pow(mean1 - newMean, 2)) + n2 * (variance2 + Math.pow(mean2 - newMean, 2))) / (n1 + n2);\n}\nexport default combineVariances;","map":{"version":3,"names":["combineMeans","combineVariances","variance1","mean1","n1","variance2","mean2","n2","newMean","Math","pow"],"sources":["C:/ProPython/Stock2/node_modules/simple-statistics/src/combine_variances.js"],"sourcesContent":["import combineMeans from \"./combine_means.js\";\n\n/**\n * When combining two lists of values for which one already knows the variances,\n * one does not have to necessary recompute the variance of the combined lists\n * in linear time. They can instead use this function to compute the combined\n * variance by providing the variance, mean & number of values of the first list\n * and the variance, mean & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} variance1 variance of the first list\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} variance2 variance of the second list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineVariances(14 / 3, 5, 3, 8 / 3, 4, 3); // => 47 / 12\n */\nfunction combineVariances(variance1, mean1, n1, variance2, mean2, n2) {\n    const newMean = combineMeans(mean1, n1, mean2, n2);\n\n    return (\n        (n1 * (variance1 + Math.pow(mean1 - newMean, 2)) +\n            n2 * (variance2 + Math.pow(mean2 - newMean, 2))) /\n        (n1 + n2)\n    );\n}\n\nexport default combineVariances;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,oBAAoB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,KAAK,EAAEC,EAAE,EAAEC,SAAS,EAAEC,KAAK,EAAEC,EAAE,EAAE;EAClE,MAAMC,OAAO,GAAGR,YAAY,CAACG,KAAK,EAAEC,EAAE,EAAEE,KAAK,EAAEC,EAAE,CAAC;EAElD,OACI,CAACH,EAAE,IAAIF,SAAS,GAAGO,IAAI,CAACC,GAAG,CAACP,KAAK,GAAGK,OAAO,EAAE,CAAC,CAAC,CAAC,GAC5CD,EAAE,IAAIF,SAAS,GAAGI,IAAI,CAACC,GAAG,CAACJ,KAAK,GAAGE,OAAO,EAAE,CAAC,CAAC,CAAC,KAClDJ,EAAE,GAAGG,EAAE,CAAC;AAEjB;AAEA,eAAeN,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}