{"ast":null,"code":"export const login = async (username, password) => {\n  const response = await fetch('http://127.0.0.1:8000/api/login/', {\n    // Django 서버의 로그인 엔드포인트 URL\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to login');\n  }\n  const data = await response.json();\n  if (data.success) {\n    return {\n      success: true,\n      message: data.message\n    };\n  } else {\n    return {\n      success: false,\n      message: data.message || 'Login failed'\n    };\n  }\n};","map":{"version":3,"names":["login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","success","message"],"sources":["C:/ProPython/Stock2/frontend/src/services/authService.js"],"sourcesContent":["export const login = async (username, password) => {\r\n\r\n    const response = await fetch('http://127.0.0.1:8000/api/login/', {  // Django 서버의 로그인 엔드포인트 URL\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Failed to login');\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n        return { success: true, message: data.message };\r\n    } else {\r\n        return { success: false, message: data.message || 'Login failed' };\r\n    }\r\n\r\n};"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAE/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IAAG;IAChEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC/C,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAElC,IAAID,IAAI,CAACE,OAAO,EAAE;IACd,OAAO;MAAEA,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAEH,IAAI,CAACG;IAAQ,CAAC;EACnD,CAAC,MAAM;IACH,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAEH,IAAI,CAACG,OAAO,IAAI;IAAe,CAAC;EACtE;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}