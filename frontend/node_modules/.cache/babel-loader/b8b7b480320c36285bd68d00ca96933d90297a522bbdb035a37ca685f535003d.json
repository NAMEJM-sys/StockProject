{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsAnalysis\\\\MFIAnalysis1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MFIAnalysis1({\n  stockCode\n}) {\n  _s();\n  const [mfiData, setMFIData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const analyzeMFITrend = (mfiData, stockData, period = 14) => {\n    var _mfiData;\n    let lastIndex = mfiData.length - 1;\n    if (lastIndex < period || stockData.length < period) return '데이터가 충분하지 않습니다.';\n\n    // 현재 및 이전 MFI 값들\n    const currentMFI = mfiData[lastIndex].MFI.toFixed(2);\n    const prevMFI = ((_mfiData = mfiData[lastIndex - 1]) === null || _mfiData === void 0 ? void 0 : _mfiData.MFI.toFixed(2)) || 0;\n\n    // 추가된 MFI 지표들\n    const currentMFIChange = mfiData[lastIndex].MFI_Change.toFixed(2);\n    const currentMFIVolatility = mfiData[lastIndex].MFI_Volatility.toFixed(2);\n    const currentMFI_Z_Score = mfiData[lastIndex].MFI_Z_Score.toFixed(2);\n    const currentMFI_MA_Crossover = mfiData[lastIndex].MFI_MA_Crossover;\n\n    // 평균 및 표준편차\n    const avgMFI = mfiData.slice(lastIndex - period + 1, lastIndex + 1).reduce((acc, val) => acc + val.MFI, 0) / period;\n    const avgMFIVolatility = mfiData.slice(lastIndex - period + 1, lastIndex + 1).reduce((acc, val) => acc + val.MFI_Volatility, 0) / period;\n    let result = '';\n    result += `<strong>현재 MFI</strong>: ${currentMFI}점<br/>`;\n    result += `<strong>MFI 변화량</strong>: ${currentMFIChange}<br/>`;\n    result += `<strong>MFI 변동성</strong>: ${currentMFIVolatility}<br/>`;\n    result += `<strong>MFI Z-스코어</strong>: ${currentMFI_Z_Score}<br/>`;\n    result += `<strong>MFI 이동평균 교차 신호</strong>: ${currentMFI_MA_Crossover === 1 ? '골든 크로스' : '데드 크로스'}<br/><br/>`;\n\n    // MFI 변동성 분석\n    if (currentMFIVolatility > avgMFIVolatility) {\n      result += `MFI 변동성이 평균보다 높습니다. 이는 시장의 불확실성이 증가했음을 의미합니다.<br/>`;\n    } else {\n      result += `MFI 변동성이 평균 이하입니다. 시장이 안정적인 상태를 유지하고 있습니다.<br/>`;\n    }\n\n    // Z-스코어를 통한 이상치 탐지\n    if (Math.abs(currentMFI_Z_Score) > 2) {\n      result += `MFI 값이 평균으로부터 2표준편차 이상 떨어져 있습니다. 이는 잠재적인 추세 전환 신호일 수 있습니다.<br/>`;\n    }\n\n    // 이동평균 교차 분석\n    if (currentMFI_MA_Crossover === 1) {\n      result += `MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세의 시작을 알릴 수 있습니다.<br/>`;\n    } else {\n      result += `MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세의 시작을 알릴 수 있습니다.<br/>`;\n    }\n\n    // 기존의 MFI 수준에 따른 해석 추가\n    if (currentMFI > 80) {\n      result += `현재 MFI가 80을 초과하여 과매수 구간에 있습니다. 가격 조정이 발생할 수 있으니 주의가 필요합니다.<br/>`;\n    } else if (currentMFI < 20) {\n      result += `현재 MFI가 20 미만으로 과매도 구간에 있습니다. 반등의 기회가 있을 수 있습니다.<br/>`;\n    } else {\n      result += `현재 MFI가 중립 구간에 있습니다. 시장의 추세를 주시하세요.<br/>`;\n    }\n    return result;\n  };\n  useEffect(() => {\n    if (mfiData.length > 0 && stockData.length > 0) {\n      const result = analyzeMFITrend(mfiData, stockData);\n      setAnalysisResult(result);\n    }\n  }, [mfiData, stockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchMFIData, {\n      stockCode: stockCode,\n      onMFIFetch: setMFIData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"analysis-text\",\n      children: \"MFI \\uD750\\uB984 \\uBD84\\uC11D(14\\uC77C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: analysisResult\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(MFIAnalysis1, \"7bN3uFgPvWhQU38aocWDCHVSLbA=\");\n_c = MFIAnalysis1;\nexport default MFIAnalysis1;\nvar _c;\n$RefreshReg$(_c, \"MFIAnalysis1\");","map":{"version":3,"names":["React","useState","useEffect","FetchMFIData","FetchStockDataForCode","jsxDEV","_jsxDEV","MFIAnalysis1","stockCode","_s","mfiData","setMFIData","stockData","setStockData","analysisResult","setAnalysisResult","analyzeMFITrend","period","_mfiData","lastIndex","length","currentMFI","MFI","toFixed","prevMFI","currentMFIChange","MFI_Change","currentMFIVolatility","MFI_Volatility","currentMFI_Z_Score","MFI_Z_Score","currentMFI_MA_Crossover","MFI_MA_Crossover","avgMFI","slice","reduce","acc","val","avgMFIVolatility","result","Math","abs","children","onMFIFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","className","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsAnalysis/MFIAnalysis1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchMFIData from '../ComponentsFetch/FetchMFIData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockDataForCode';\r\n\r\nfunction MFIAnalysis1({ stockCode }) {\r\n    const [mfiData, setMFIData] = useState([]);\r\n    const [stockData, setStockData] = useState([]);\r\n    const [analysisResult, setAnalysisResult] = useState('');\r\n\r\n    const analyzeMFITrend = (mfiData, stockData, period = 14) => {\r\n        let lastIndex = mfiData.length - 1;\r\n        if (lastIndex < period || stockData.length < period) return '데이터가 충분하지 않습니다.';\r\n\r\n        // 현재 및 이전 MFI 값들\r\n        const currentMFI = mfiData[lastIndex].MFI.toFixed(2);\r\n        const prevMFI = mfiData[lastIndex - 1]?.MFI.toFixed(2) || 0;\r\n\r\n        // 추가된 MFI 지표들\r\n        const currentMFIChange = mfiData[lastIndex].MFI_Change.toFixed(2);\r\n        const currentMFIVolatility = mfiData[lastIndex].MFI_Volatility.toFixed(2);\r\n        const currentMFI_Z_Score = mfiData[lastIndex].MFI_Z_Score.toFixed(2);\r\n        const currentMFI_MA_Crossover = mfiData[lastIndex].MFI_MA_Crossover;\r\n\r\n        // 평균 및 표준편차\r\n        const avgMFI = mfiData.slice(lastIndex - period + 1, lastIndex + 1).reduce((acc, val) => acc + val.MFI, 0) / period;\r\n        const avgMFIVolatility = mfiData.slice(lastIndex - period + 1, lastIndex + 1).reduce((acc, val) => acc + val.MFI_Volatility, 0) / period;\r\n\r\n        let result = '';\r\n\r\n        result += `<strong>현재 MFI</strong>: ${currentMFI}점<br/>`;\r\n        result += `<strong>MFI 변화량</strong>: ${currentMFIChange}<br/>`;\r\n        result += `<strong>MFI 변동성</strong>: ${currentMFIVolatility}<br/>`;\r\n        result += `<strong>MFI Z-스코어</strong>: ${currentMFI_Z_Score}<br/>`;\r\n        result += `<strong>MFI 이동평균 교차 신호</strong>: ${currentMFI_MA_Crossover === 1 ? '골든 크로스' : '데드 크로스'}<br/><br/>`;\r\n\r\n        // MFI 변동성 분석\r\n        if (currentMFIVolatility > avgMFIVolatility) {\r\n            result += `MFI 변동성이 평균보다 높습니다. 이는 시장의 불확실성이 증가했음을 의미합니다.<br/>`;\r\n        } else {\r\n            result += `MFI 변동성이 평균 이하입니다. 시장이 안정적인 상태를 유지하고 있습니다.<br/>`;\r\n        }\r\n\r\n        // Z-스코어를 통한 이상치 탐지\r\n        if (Math.abs(currentMFI_Z_Score) > 2) {\r\n            result += `MFI 값이 평균으로부터 2표준편차 이상 떨어져 있습니다. 이는 잠재적인 추세 전환 신호일 수 있습니다.<br/>`;\r\n        }\r\n\r\n        // 이동평균 교차 분석\r\n        if (currentMFI_MA_Crossover === 1) {\r\n            result += `MFI 단기 이동평균이 장기 이동평균을 상향 돌파했습니다 (골든 크로스). 상승 추세의 시작을 알릴 수 있습니다.<br/>`;\r\n        } else {\r\n            result += `MFI 단기 이동평균이 장기 이동평균을 하향 돌파했습니다 (데드 크로스). 하락 추세의 시작을 알릴 수 있습니다.<br/>`;\r\n        }\r\n\r\n        // 기존의 MFI 수준에 따른 해석 추가\r\n        if (currentMFI > 80) {\r\n            result += `현재 MFI가 80을 초과하여 과매수 구간에 있습니다. 가격 조정이 발생할 수 있으니 주의가 필요합니다.<br/>`;\r\n        } else if (currentMFI < 20) {\r\n            result += `현재 MFI가 20 미만으로 과매도 구간에 있습니다. 반등의 기회가 있을 수 있습니다.<br/>`;\r\n        } else {\r\n            result += `현재 MFI가 중립 구간에 있습니다. 시장의 추세를 주시하세요.<br/>`;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mfiData.length > 0 && stockData.length > 0) {\r\n            const result = analyzeMFITrend(mfiData, stockData);\r\n            setAnalysisResult(result);\r\n        }\r\n    }, [mfiData, stockData]);\r\n\r\n    return (\r\n        <div>\r\n            <FetchMFIData stockCode={stockCode} onMFIFetch={setMFIData} />\r\n            <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n            <h4 className=\"analysis-text\">MFI 흐름 분석(14일)</h4>\r\n            <p dangerouslySetInnerHTML={{ __html: analysisResult }}></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MFIAnalysis1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}