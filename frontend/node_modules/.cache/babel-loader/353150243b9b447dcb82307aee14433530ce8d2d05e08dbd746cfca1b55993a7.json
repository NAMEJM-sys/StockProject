{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\SARCalculations4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchSARData from '../ComponentsFetch/FetchStockOrignal/FetchParabolicSARData';\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockOrignal/FetchStockDataForCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SARCalculations4({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [sarData, setSARData] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const calculateCombinedScore = (sarData, stockData, period = 14) => {\n    if (sarData.length < period || stockData.length < period) {\n      return null;\n    }\n\n    // EMA 계산\n    const closingPrices = stockData.map(data => data.close);\n    const recentPrices = closingPrices.slice(-period);\n    const calculateEMA = (prices, period) => {\n      const k = 2 / (period + 1);\n      let emaArray = [];\n      let ema = prices[0];\n      emaArray.push(ema);\n      for (let i = 1; i < prices.length; i++) {\n        ema = prices[i] * k + ema * (1 - k);\n        emaArray.push(ema);\n      }\n      return emaArray;\n    };\n    const emaArray = calculateEMA(recentPrices, period);\n    const currentEMA = emaArray[emaArray.length - 1];\n    const lastIndex = sarData.length - 1;\n    const currentPrice = closingPrices[closingPrices.length - 1];\n    const currentSAR = sarData[lastIndex].Parabolic_SAR;\n    let score = 5; // 기본 보통\n\n    if (currentPrice > currentSAR && currentPrice > currentEMA) {\n      score = 3; // 매수 강화\n    } else if (currentPrice < currentSAR && currentPrice < currentEMA) {\n      score = 7; // 매도 강화\n    }\n    return score;\n  };\n  useEffect(() => {\n    if (sarData.length > 0 && stockData.length > 0) {\n      const score = calculateCombinedScore(sarData, stockData);\n      if (score !== null && onScoreCalculated) {\n        onScoreCalculated(score);\n        console.log(\"sar4\", score);\n      }\n    }\n  }, [sarData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchSARData, {\n      stockCode: stockCode,\n      onSARFetch: setSARData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FetchStockDataForCode, {\n      stockCode: stockCode,\n      onSDFCFetch: setStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(SARCalculations4, \"Raoz4XH+JbFO4sxqMvNtuUC1QdM=\");\n_c = SARCalculations4;\nexport default SARCalculations4;\nvar _c;\n$RefreshReg$(_c, \"SARCalculations4\");","map":{"version":3,"names":["React","useState","useEffect","FetchSARData","FetchStockDataForCode","jsxDEV","_jsxDEV","SARCalculations4","stockCode","onScoreCalculated","_s","sarData","setSARData","stockData","setStockData","calculateCombinedScore","period","length","closingPrices","map","data","close","recentPrices","slice","calculateEMA","prices","k","emaArray","ema","push","i","currentEMA","lastIndex","currentPrice","currentSAR","Parabolic_SAR","score","console","log","children","onSARFetch","fileName","_jsxFileName","lineNumber","columnNumber","onSDFCFetch","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/SARCalculations4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchSARData from '../ComponentsFetch/FetchStockOrignal/FetchParabolicSARData';\r\nimport FetchStockDataForCode from '../ComponentsFetch/FetchStockOrignal/FetchStockDataForCode';\r\n\r\nfunction SARCalculations4({ stockCode, onScoreCalculated }) {\r\n  const [sarData, setSARData] = useState([]);\r\n  const [stockData, setStockData] = useState([]);\r\n\r\n  const calculateCombinedScore = (sarData, stockData, period = 14) => {\r\n    if (sarData.length < period || stockData.length < period) {\r\n      return null;\r\n    }\r\n\r\n    // EMA 계산\r\n    const closingPrices = stockData.map((data) => data.close);\r\n    const recentPrices = closingPrices.slice(-period);\r\n\r\n    const calculateEMA = (prices, period) => {\r\n      const k = 2 / (period + 1);\r\n      let emaArray = [];\r\n      let ema = prices[0];\r\n      emaArray.push(ema);\r\n\r\n      for (let i = 1; i < prices.length; i++) {\r\n        ema = prices[i] * k + ema * (1 - k);\r\n        emaArray.push(ema);\r\n      }\r\n      return emaArray;\r\n    };\r\n\r\n    const emaArray = calculateEMA(recentPrices, period);\r\n    const currentEMA = emaArray[emaArray.length - 1];\r\n\r\n    const lastIndex = sarData.length - 1;\r\n    const currentPrice = closingPrices[closingPrices.length - 1];\r\n    const currentSAR = sarData[lastIndex].Parabolic_SAR;\r\n\r\n    let score = 5; // 기본 보통\r\n\r\n    if (currentPrice > currentSAR && currentPrice > currentEMA) {\r\n      score = 3; // 매수 강화\r\n    } else if (currentPrice < currentSAR && currentPrice < currentEMA) {\r\n      score = 7; // 매도 강화\r\n    }\r\n\r\n    return score;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sarData.length > 0 && stockData.length > 0) {\r\n      const score = calculateCombinedScore(sarData, stockData);\r\n      if (score !== null && onScoreCalculated) {\r\n        onScoreCalculated(score);\r\n        console.log(\"sar4\",score);\r\n\r\n      }\r\n    }\r\n  }, [sarData]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchSARData stockCode={stockCode} onSARFetch={setSARData} />\r\n      <FetchStockDataForCode stockCode={stockCode} onSDFCFetch={setStockData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SARCalculations4;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}