{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\components\\\\findSupportZones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction findLastDivergence(stockData, rsiData) {\n  const sortedStockData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // 최근 두 저점과 그에 해당하는 RSI 값을 찾습니다.\n  let lastLow = null;\n  let previousLow = null;\n  let lastLowRsi = null;\n  let previousLowRsi = null;\n  for (let i = 1; i < sortedStockData.length - 1; i++) {\n    if (sortedStockData[i - 1].close > sortedStockData[i].close && sortedStockData[i].close < sortedStockData[i + 1].close) {\n      if (!previousLow) {\n        var _rsiData$find;\n        previousLow = {\n          date: sortedStockData[i].date,\n          close: sortedStockData[i].close\n        };\n        previousLowRsi = (_rsiData$find = rsiData.find(rsi => rsi.date === previousLow.date)) === null || _rsiData$find === void 0 ? void 0 : _rsiData$find.RSI;\n      } else if (!lastLow) {\n        var _rsiData$find2;\n        lastLow = {\n          date: sortedStockData[i].date,\n          close: sortedStockData[i].close\n        };\n        lastLowRsi = (_rsiData$find2 = rsiData.find(rsi => rsi.date === lastLow.date)) === null || _rsiData$find2 === void 0 ? void 0 : _rsiData$find2.RSI;\n        break; // 두 저점을 찾았으므로 종료\n      }\n    }\n  }\n  if (previousLow && lastLow && lastLowRsi !== null && previousLowRsi !== null) {\n    // 강세 다이버전스 판단: 두 번째 저점이 더 낮고, RSI는 더 높은 경우\n    const isBullishDivergence = lastLow.close < previousLow.close && lastLowRsi > previousLowRsi;\n    // 약세 다이버전스 판단: 두 번째 저점이 더 높고, RSI는 더 낮은 경우\n    const isBearishDivergence = lastLow.close > previousLow.close && lastLowRsi < previousLowRsi;\n    return {\n      isBullishDivergence,\n      isBearishDivergence,\n      lastLow,\n      previousLow\n    };\n  }\n  return {\n    isBullishDivergence: false,\n    isBearishDivergence: false\n  };\n}\nfunction StockAnalysis({\n  stockCode,\n  stockData,\n  rsiData\n}) {\n  _s();\n  const [divergence, setDivergence] = useState(null);\n  useEffect(() => {\n    if (stockData.length > 0 && rsiData.length > 0) {\n      const filteredStockData = stockData.filter(data => data.stock_code === stockCode);\n      const filteredRsiData = rsiData.filter(data => data.stock_code === stockCode);\n      if (filteredStockData.length > 0 && filteredRsiData.length > 0) {\n        const result = findLastDivergence(filteredStockData, filteredRsiData);\n        setDivergence(result);\n      }\n    }\n  }, [stockCode, stockData, rsiData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"RSI Divergence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), divergence && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [divergence.isBullishDivergence ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: [\"\\uAC15\\uC138 \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 46\n        }, this), \"\\uC774\\uC804 \\uC800\\uC810: \", divergence.previousLow.date, \" (\\uC885\\uAC00: \", divergence.previousLow.close, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 102\n        }, this), \"\\uCD5C\\uADFC \\uC800\\uC810: \", divergence.lastLow.date, \" (\\uC885\\uAC00: \", divergence.lastLow.close, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAC15\\uC138 \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4\\uAC00 \\uBC1C\\uC0DD\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), divergence.isBearishDivergence ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"\\uC57D\\uC138 \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 46\n        }, this), \"\\uC774\\uC804 \\uACE0\\uC810: \", divergence.previousLow.date, \" (\\uC885\\uAC00: \", divergence.previousLow.close, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 102\n        }, this), \"\\uCD5C\\uADFC \\uACE0\\uC810: \", divergence.lastLow.date, \" (\\uC885\\uAC00: \", divergence.lastLow.close, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC57D\\uC138 \\uB2E4\\uC774\\uBC84\\uC804\\uC2A4\\uAC00 \\uBC1C\\uC0DD\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(StockAnalysis, \"xhWX4O3UGBeAXURu5hqdJQafqXg=\");\n_c = StockAnalysis;\nexport default StockAnalysis;\nvar _c;\n$RefreshReg$(_c, \"StockAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","findLastDivergence","stockData","rsiData","sortedStockData","sort","a","b","Date","date","lastLow","previousLow","lastLowRsi","previousLowRsi","i","length","close","_rsiData$find","find","rsi","RSI","_rsiData$find2","isBullishDivergence","isBearishDivergence","StockAnalysis","stockCode","_s","divergence","setDivergence","filteredStockData","filter","data","stock_code","filteredRsiData","result","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/components/findSupportZones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction findLastDivergence(stockData, rsiData) {\r\n    const sortedStockData = [...stockData].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    // 최근 두 저점과 그에 해당하는 RSI 값을 찾습니다.\r\n    let lastLow = null;\r\n    let previousLow = null;\r\n    let lastLowRsi = null;\r\n    let previousLowRsi = null;\r\n\r\n    for (let i = 1; i < sortedStockData.length - 1; i++) {\r\n        if (sortedStockData[i - 1].close > sortedStockData[i].close && sortedStockData[i].close < sortedStockData[i + 1].close) {\r\n            if (!previousLow) {\r\n                previousLow = { date: sortedStockData[i].date, close: sortedStockData[i].close };\r\n                previousLowRsi = rsiData.find(rsi => rsi.date === previousLow.date)?.RSI;\r\n            } else if (!lastLow) {\r\n                lastLow = { date: sortedStockData[i].date, close: sortedStockData[i].close };\r\n                lastLowRsi = rsiData.find(rsi => rsi.date === lastLow.date)?.RSI;\r\n                break; // 두 저점을 찾았으므로 종료\r\n            }\r\n        }\r\n    }\r\n\r\n    if (previousLow && lastLow && lastLowRsi !== null && previousLowRsi !== null) {\r\n        // 강세 다이버전스 판단: 두 번째 저점이 더 낮고, RSI는 더 높은 경우\r\n        const isBullishDivergence = lastLow.close < previousLow.close && lastLowRsi > previousLowRsi;\r\n        // 약세 다이버전스 판단: 두 번째 저점이 더 높고, RSI는 더 낮은 경우\r\n        const isBearishDivergence = lastLow.close > previousLow.close && lastLowRsi < previousLowRsi;\r\n\r\n        return { isBullishDivergence, isBearishDivergence, lastLow, previousLow };\r\n    }\r\n\r\n    return { isBullishDivergence: false, isBearishDivergence: false };\r\n}\r\n\r\nfunction StockAnalysis({ stockCode, stockData, rsiData }) {\r\n    const [divergence, setDivergence] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (stockData.length > 0 && rsiData.length > 0) {\r\n            const filteredStockData = stockData.filter(data => data.stock_code === stockCode);\r\n            const filteredRsiData = rsiData.filter(data => data.stock_code === stockCode);\r\n\r\n            if (filteredStockData.length > 0 && filteredRsiData.length > 0) {\r\n                const result = findLastDivergence(filteredStockData, filteredRsiData);\r\n                setDivergence(result);\r\n            }\r\n        }\r\n    }, [stockCode, stockData, rsiData]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>RSI Divergence</h3>\r\n            {divergence && (\r\n                <>\r\n                    {divergence.isBullishDivergence ? (\r\n                        <p style={{ color: 'green' }}>\r\n                            강세 다이버전스가 발생했습니다.<br />\r\n                            이전 저점: {divergence.previousLow.date} (종가: {divergence.previousLow.close})<br />\r\n                            최근 저점: {divergence.lastLow.date} (종가: {divergence.lastLow.close})\r\n                        </p>\r\n                    ) : (\r\n                        <p>강세 다이버전스가 발생하지 않았습니다.</p>\r\n                    )}\r\n                    {divergence.isBearishDivergence ? (\r\n                        <p style={{ color: 'red' }}>\r\n                            약세 다이버전스가 발생했습니다.<br />\r\n                            이전 고점: {divergence.previousLow.date} (종가: {divergence.previousLow.close})<br />\r\n                            최근 고점: {divergence.lastLow.date} (종가: {divergence.lastLow.close})\r\n                        </p>\r\n                    ) : (\r\n                        <p>약세 다이버전스가 발생하지 않았습니다.</p>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}