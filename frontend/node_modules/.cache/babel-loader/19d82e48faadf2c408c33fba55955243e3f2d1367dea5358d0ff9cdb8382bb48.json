{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProPython\\\\Stock2\\\\frontend\\\\src\\\\ComponentsCalculations\\\\SARCalculations3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FetchSARData from '../Fetch/FetchStockOrignal/FetchParabolicSARData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SARCalculations3({\n  stockCode,\n  onScoreCalculated\n}) {\n  _s();\n  const [sarData, setSARData] = useState([]);\n  const calculateTrendStrengthScore = (sarData, period = 5) => {\n    if (sarData.length < period) {\n      return null;\n    }\n    const recentAFValues = sarData.slice(-period).map(data => data.AF);\n\n    // AF의 변화 추세 분석\n    const afDifferences = recentAFValues.slice(1).map((af, index) => af - recentAFValues[index]);\n    const positiveChanges = afDifferences.filter(diff => diff > 0).length;\n    const negativeChanges = afDifferences.filter(diff => diff < 0).length;\n    const currentAF = recentAFValues[recentAFValues.length - 1];\n    const lastIndex = sarData.length - 1;\n    const currentPrice = sarData[lastIndex].close;\n    const currentSAR = sarData[lastIndex].Parabolic_SAR;\n    const isUpTrend = currentPrice > currentSAR;\n    let scoreAdjustment = 0;\n    if (positiveChanges === afDifferences.length) {\n      // AF가 지속적으로 증가하여 추세 강도 강화\n      if (isUpTrend) {\n        scoreAdjustment -= 1; // 매수 쪽으로\n      } else {\n        scoreAdjustment += 1; // 매도 쪽으로\n      }\n    } else if (negativeChanges === afDifferences.length) {\n      // AF가 지속적으로 감소하여 추세 강도 약화\n      if (isUpTrend) {\n        scoreAdjustment += 1; // 매수 신호 약화\n      } else {\n        scoreAdjustment -= 1; // 매도 신호 약화\n      }\n    }\n\n    // 기본 점수는 5점\n    let score = 5 + scoreAdjustment;\n\n    // 점수 범위 조정\n    score = Math.max(1, Math.min(10, score));\n    return score;\n  };\n  useEffect(() => {\n    if (sarData.length > 0) {\n      const score = calculateTrendStrengthScore(sarData);\n      if (score !== null && onScoreCalculated) {\n        onScoreCalculated(score);\n      }\n    }\n  }, [sarData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FetchSARData, {\n      stockCode: stockCode,\n      onSARFetch: setSARData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(SARCalculations3, \"uuVXZMe8OUCD6Mf5lyztCHwY974=\");\n_c = SARCalculations3;\nexport default SARCalculations3;\nvar _c;\n$RefreshReg$(_c, \"SARCalculations3\");","map":{"version":3,"names":["React","useState","useEffect","FetchSARData","jsxDEV","_jsxDEV","SARCalculations3","stockCode","onScoreCalculated","_s","sarData","setSARData","calculateTrendStrengthScore","period","length","recentAFValues","slice","map","data","AF","afDifferences","af","index","positiveChanges","filter","diff","negativeChanges","currentAF","lastIndex","currentPrice","close","currentSAR","Parabolic_SAR","isUpTrend","scoreAdjustment","score","Math","max","min","children","onSARFetch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ProPython/Stock2/frontend/src/ComponentsCalculations/SARCalculations3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FetchSARData from '../Fetch/FetchStockOrignal/FetchParabolicSARData';\r\n\r\nfunction SARCalculations3({ stockCode, onScoreCalculated }) {\r\n  const [sarData, setSARData] = useState([]);\r\n\r\n  const calculateTrendStrengthScore = (sarData, period = 5) => {\r\n    if (sarData.length < period) {\r\n      return null;\r\n    }\r\n\r\n    const recentAFValues = sarData.slice(-period).map((data) => data.AF);\r\n\r\n    // AF의 변화 추세 분석\r\n    const afDifferences = recentAFValues.slice(1).map((af, index) => af - recentAFValues[index]);\r\n\r\n    const positiveChanges = afDifferences.filter((diff) => diff > 0).length;\r\n    const negativeChanges = afDifferences.filter((diff) => diff < 0).length;\r\n\r\n    const currentAF = recentAFValues[recentAFValues.length - 1];\r\n    const lastIndex = sarData.length - 1;\r\n    const currentPrice = sarData[lastIndex].close;\r\n    const currentSAR = sarData[lastIndex].Parabolic_SAR;\r\n\r\n    const isUpTrend = currentPrice > currentSAR;\r\n    let scoreAdjustment = 0;\r\n\r\n    if (positiveChanges === afDifferences.length) {\r\n      // AF가 지속적으로 증가하여 추세 강도 강화\r\n      if (isUpTrend) {\r\n        scoreAdjustment -= 1; // 매수 쪽으로\r\n      } else {\r\n        scoreAdjustment += 1; // 매도 쪽으로\r\n      }\r\n    } else if (negativeChanges === afDifferences.length) {\r\n      // AF가 지속적으로 감소하여 추세 강도 약화\r\n      if (isUpTrend) {\r\n        scoreAdjustment += 1; // 매수 신호 약화\r\n      } else {\r\n        scoreAdjustment -= 1; // 매도 신호 약화\r\n      }\r\n    }\r\n\r\n    // 기본 점수는 5점\r\n    let score = 5 + scoreAdjustment;\r\n\r\n    // 점수 범위 조정\r\n    score = Math.max(1, Math.min(10, score));\r\n\r\n    return score;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sarData.length > 0) {\r\n      const score = calculateTrendStrengthScore(sarData);\r\n      if (score !== null && onScoreCalculated) {\r\n        onScoreCalculated(score);\r\n      }\r\n    }\r\n  }, [sarData]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchSARData stockCode={stockCode} onSARFetch={setSARData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SARCalculations3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}